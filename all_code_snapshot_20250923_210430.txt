==== index.html ====
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <!-- Theme bootstrapping: setzt .dark auf <html>, bevor CSS rendert -->
    <script>
      (() => {
        try {
          const stored = localStorage.getItem('theme');
          const prefers = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
          const theme = stored ?? (prefers ? 'dark' : 'light');
          const root = document.documentElement;
          if (theme === 'dark') { root.classList.add('dark'); root.style.colorScheme = 'dark'; }
          else { root.classList.remove('dark'); root.style.colorScheme = 'light'; }
        } catch {}
      })();
    </script>
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Felix Bruckmeier ‚Äì UX Research</title>
  </head>
  <!-- WICHTIG: Tokens statt feste Farben -->
  <body class="min-h-screen bg-background text-foreground">
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>


==== package.json ====
{
  "name": "uxr-portfolio-felix",
  "version": "1.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc -b && vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "framer-motion": "^12.23.18",
    "i18next": "^23.16.8",
    "lucide-react": "^0.544.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-i18next": "^13.5.0",
    "react-router-dom": "^6.26.0",
    "recharts": "^3.2.1"
  },
  "devDependencies": {
    "@tailwindcss/postcss": "^4.0.0",
    "@types/node": "^24.5.2",
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.3.4",
    "autoprefixer": "^10.4.20",
    "postcss": "^8.4.47",
    "tailwindcss": "^4.0.0",
    "typescript": "^5.4.0",
    "vite": "^5.4.19"
  }
}


==== tsconfig.json ====
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",
    "esModuleInterop": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"]
    },
    "types": ["node"]
  },
  "include": ["src", "src/vite-env.d.ts"],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ]
}


==== vite.config.ts ====
// vite.config.ts
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import { fileURLToPath } from "node:url";
import { dirname, resolve } from "node:path";

// __dirname in ESM nachbauen
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Pr√ºfen, ob wir in GitHub Actions laufen
const isActions = process.env.GITHUB_ACTIONS === "true";

export default defineConfig({
  plugins: [react()],
  base: "/", // User/Org Pages: Root
  build: {
    outDir: isActions ? "dist" : "docs", // Actions ‚Üí dist, lokal ‚Üí docs
  },
  resolve: {
    alias: {
      "@": resolve(__dirname, "src"),
    },
  },
});


==== tailwind.config.js ====
/**** Tailwind v4 minimal config ****/
export default {
  darkMode: "class",
};


==== postcss.config.js ====
export default {
  plugins: {
    "@tailwindcss/postcss": {},
  },
};


==== \.github\workflows\deploy.yml ====
name: Deploy Vite site to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


==== \public\404.html ====
<!doctype html><html><head><meta charset="UTF-8"><meta http-equiv="refresh" content="0;url=/" /><script>sessionStorage.redirect=location.pathname+location.search</script><title>Redirecting‚Ä¶</title></head><body>Redirecting‚Ä¶</body></html>


==== \src\components\CarInsurance\BeforeAfter_Car.tsx ====
import React from "react";

type Props = {
  before: string[];
  after: string[];
};

export default function BeforeAfter({ before, after }: Props) {
  return (
    <div className="grid md:grid-cols-2 gap-6">
      <div className="rounded-xl border bg-red-50 p-6 shadow-sm">
        <h4 className="font-semibold text-red-700 mb-3">Before</h4>
        <ul className="list-disc list-inside space-y-1 text-sm text-gray-700">
          {before.map((b, i) => (
            <li key={i}>{b}</li>
          ))}
        </ul>
      </div>
      <div className="rounded-xl border bg-green-50 p-6 shadow-sm">
        <h4 className="font-semibold text-green-700 mb-3">After</h4>
        <ul className="list-disc list-inside space-y-1 text-sm text-gray-700">
          {after.map((a, i) => (
            <li key={i}>{a}</li>
          ))}
        </ul>
      </div>
    </div>
  );
}


==== \src\components\CarInsurance\ImpactGrid_Car.tsx ====
import React, { ReactNode } from "react";

type Metric = {
  label: string;
  description: ReactNode; // <-- erlaubt Texte ODER Komponenten
};

type Props = {
  metrics: Metric[];
};

export default function ImpactGrid_Car({ metrics }: Props) {
  return (
    <div className="grid md:grid-cols-2 gap-6">
      {metrics.map((m, i) => (
        <div
          key={i}
          className="rounded-xl border bg-white p-6 shadow-sm hover:shadow-md transition"
        >
          <h4 className="font-semibold text-blue-700 mb-2">{m.label}</h4>
          <div className="text-sm text-gray-600 space-y-4">{m.description}</div>
        </div>
      ))}
    </div>
  );
}


==== \src\components\CarInsurance\JourneyMap_Car.tsx ====
import React from "react";
import { ResponsiveContainer, LineChart, Line } from "recharts";

// Touchpoints
const stages = [
  {
    key: "tp1",
    label: "Kundenanliegen verstehen",
    action: "Bedarf kl√§ren: Fahrzeug, Zweck, grobe Tarifrichtung (Basis vs. Premium).",
  },
  {
    key: "tp2",
    label: "Informationseingabe",
    action: "Alle Daten ins Tool eintragen (Fahrzeug, Kunde, Details).",
  },
  {
    key: "tp3",
    label: "Ergebnisseite besprechen",
    action: "Tarifvorschlag mit dem Kunden durchgehen.",
  },
  {
    key: "tp4",
    label: "Anpassungen",
    action: "Eingaben √§ndern, um Tarif neu zu berechnen.",
  },
  {
    key: "tp5",
    label: "Vertragsabschluss",
    action: "Kunde w√§hlt Tarif, Vertrag wird abgeschlossen.",
  },
];

// Emotions-Kurve (1=negativ, 2=neutral, 3=positiv)
const emotions = [
  { value: 3, emoji: "üôÇ" }, // Einstieg positiv
  { value: 1, emoji: "üò†" }, // Eingabe frustrierend
  { value: 2, emoji: "üòê" }, // Ergebnisse schwer erkl√§rbar
  { value: 1, emoji: "üò§" }, // Anpassungen m√ºhsam
  { value: 3, emoji: "üéâ" }, // Abschluss positiv
];

export default function JourneyMap_Car() {
  return (
    <div className="w-full overflow-x-auto border border-border rounded-2xl p-4 bg-background shadow-sm">
      {/* Desktop-Version */}
      <div className="hidden md:block">
        <table className="min-w-full text-sm text-center rounded-2xl overflow-hidden">
          <thead>
            <tr className="bg-muted/40">
              <th className="border border-border p-3 w-32"></th>
              {stages.map((s) => (
                <th
                  key={s.key}
                  className="border border-border p-3 font-semibold"
                >
                  {s.label}
                </th>
              ))}
            </tr>
          </thead>
          <tbody>
            {/* Actions */}
            <tr>
              <td className="border border-border font-medium p-3">Actions</td>
              {stages.map((s) => (
                <td key={s.key} className="border border-border p-3 align-top">
                  <p>{s.action}</p>
                </td>
              ))}
            </tr>

            {/* Emotions */}
            <tr>
              <td className="border border-border font-medium p-3">Emotions</td>
              <td colSpan={stages.length} className="border border-border p-3">
                <div className="h-40 relative">
                  <ResponsiveContainer width="100%" height="100%">
                    <LineChart
                      data={emotions.map((e, i) => ({ idx: i, value: e.value }))}
                    >
                      <Line
                        type="monotone"
                        dataKey="value"
                        stroke="#2563EB"
                        strokeWidth={3}
                        dot={{ r: 0 }}
                        isAnimationActive={false}
                      />
                    </LineChart>
                  </ResponsiveContainer>
                  {/* Smileys exakt auf Linie platzieren */}
                  <div className="absolute inset-0 grid grid-cols-5">
                    {emotions.map((e, i) => (
                      <div
                        key={i}
                        className="flex justify-center"
                        style={{
                          transform: `translateY(${(3 - e.value) * 25}px)`,
                        }}
                      >
                        <span className="text-2xl">{e.emoji}</span>
                      </div>
                    ))}
                  </div>
                </div>
              </td>
            </tr>

            {/* Pain Points */}
            <tr>
              <td className="border border-border font-medium p-3">Pain Points</td>
              {stages.map((s, i) => (
                <td key={s.key} className="border border-border p-3 align-top">
                  {i === 0 && "Keine gro√üen Probleme."}
                  {i === 1 &&
                    "Starres Abfragen aller Felder, unklare Eingaben, Dauer zu lang."}
                  {i === 2 &&
                    "Schwer erkl√§rbar, welche Eingabe welchen Preis beeinflusst."}
                  {i === 3 &&
                    "Umst√§ndliches Zur√ºckspringen im Tool, Prozess neu durchlaufen."}
                  {i === 4 && "Kaum Probleme, Abschluss meist erfolgreich."}
                </td>
              ))}
            </tr>

            {/* Opportunities */}
            <tr>
              <td className="border border-border font-medium p-3">Opportunities</td>
              {stages.map((s, i) => (
                <td key={s.key} className="border border-border p-3 align-top">
                  {i === 0 && "Strukturierte Gespr√§chsleitf√§den f√ºr neue Berater:innen."}
                  {i === 1 && "Adaptive Abk√ºrzungen, Pre-Fill, Klartext statt Fachjargon."}
                  {i === 2 &&
                    "Transparente Preislogik, visuelle Hervorhebung relevanter Eingaben."}
                  {i === 3 &&
                    "Flexible √Ñnderungen, direkter Einfluss auf Tarif sichtbar."}
                  {i === 4 &&
                    "Positives Erlebnis nutzen, Zusatzfeatures anbieten."}
                </td>
              ))}
            </tr>
          </tbody>
        </table>
      </div>

      {/* Mobile-Version */}
      <div className="md:hidden space-y-6">
        {stages.map((s, i) => (
          <div
            key={s.key}
            className="border border-border rounded-2xl p-4 space-y-3"
          >
            {/* Nummerierter Kreis + √úberschrift */}
            <div className="flex items-center gap-3">
              <div className="w-8 h-8 flex items-center justify-center rounded-full bg-blue-600 text-white font-bold">
                {i + 1}
              </div>
              <h3 className="font-semibold">{s.label}</h3>
            </div>

            <div>
              <p className="font-medium">Actions</p>
              <span>{s.action}</span>
            </div>
            <div>
              <p className="font-medium">Emotions</p>
              <span className="text-2xl">{emotions[i].emoji}</span>
            </div>
            <div>
              <p className="font-medium">Pain Points</p>
              <p className="text-sm text-muted-foreground">
                {i === 0 && "Keine gro√üen Probleme."}
                {i === 1 &&
                  "Starres Abfragen, unklare Felder, sehr zeitaufwendig."}
                {i === 2 &&
                  "Unklare Preislogik, schwer f√ºr Kunden verst√§ndlich."}
                {i === 3 &&
                  "Umst√§ndliches Zur√ºckspringen, Prozess neu starten n√∂tig."}
                {i === 4 && "Kaum Probleme beim Abschluss."}
              </p>
            </div>
            <div>
              <p className="font-medium">Opportunities</p>
              <p className="text-sm text-muted-foreground">
                {i === 0 && "Gespr√§chsleitf√§den f√ºr neue Berater:innen."}
                {i === 1 &&
                  "Adaptive Eingaben, Pre-Fill Felder, klare Sprache."}
                {i === 2 &&
                  "Bessere Preislogik visualisieren, Transparenz schaffen."}
                {i === 3 &&
                  "Flexible Eingabe√§nderungen erm√∂glichen."}
                {i === 4 && "Positive Abschlussmomente verst√§rken."}
              </p>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}


==== \src\components\CarInsurance\PersonaCards_Car - Kopie.tsx ====
import React from "react";

type Persona = {
  name: string;
  role: string;
  goals: string[];
  pains: string[];
};

type Props = {
  personas: Persona[];
};

export default function PersonaCards({ personas }: Props) {
  return (
    <div className="grid md:grid-cols-2 gap-6">
      {personas.map((p, i) => (
        <div
          key={i}
          className="rounded-2xl border bg-white p-6 shadow-md space-y-4"
        >
          <h3 className="text-xl font-semibold">{p.name}</h3>
          <p className="text-sm text-muted-foreground">{p.role}</p>
          <div>
            <h4 className="font-semibold text-blue-600">üéØ Goals</h4>
            <ul className="list-disc list-inside text-sm">
              {p.goals.map((g, j) => (
                <li key={j}>{g}</li>
              ))}
            </ul>
          </div>
          <div>
            <h4 className="font-semibold text-red-600">‚ö° Pain Points</h4>
            <ul className="list-disc list-inside text-sm">
              {p.pains.map((pain, j) => (
                <li key={j}>{pain}</li>
              ))}
            </ul>
          </div>
        </div>
      ))}
    </div>
  );
}


==== \src\components\CarInsurance\PersonaCards_Car.tsx ====
import React from "react";

type Persona = {
  name: string;
  role: string;
  goals: string[];
  pains: string[];
};

type Props = {
  personas: Persona[];
};

export default function PersonaCards({ personas }: Props) {
  return (
    <div className="grid md:grid-cols-2 gap-6">
      {personas.map((p, i) => (
        <div
          key={i}
          className="rounded-2xl border bg-white p-6 shadow-md space-y-4"
        >
          <h3 className="text-xl font-semibold">{p.name}</h3>
          <p className="text-sm text-muted-foreground">{p.role}</p>
          <div>
            <h4 className="font-semibold text-blue-600">üéØ Goals</h4>
            <ul className="list-disc list-inside text-sm">
              {p.goals.map((g, j) => (
                <li key={j}>{g}</li>
              ))}
            </ul>
          </div>
          <div>
            <h4 className="font-semibold text-red-600">‚ö° Pain Points</h4>
            <ul className="list-disc list-inside text-sm">
              {p.pains.map((pain, j) => (
                <li key={j}>{pain}</li>
              ))}
            </ul>
          </div>
        </div>
      ))}
    </div>
  );
}


==== \src\components\CarInsurance\PrototypeAnimation.tsx ====
import React from "react";
import { motion } from "framer-motion";

export default function PrototypeAnimation() {
  return (
    <div className="flex items-center justify-center gap-8 bg-gray-50 p-6 rounded-xl border">
      {/* Mock Desktop App */}
      <div className="w-80 h-56 bg-white rounded-lg shadow-md border flex flex-col">
        {/* Header */}
        <div className="h-6 bg-gray-200 rounded-t-lg flex items-center px-2">
          <div className="w-3 h-3 bg-red-400 rounded-full mr-1" />
          <div className="w-3 h-3 bg-yellow-400 rounded-full mr-1" />
          <div className="w-3 h-3 bg-green-400 rounded-full" />
        </div>
        {/* Body */}
        <div className="flex-1 p-4 space-y-3">
          <motion.div
            className="h-6 bg-gray-100 rounded"
            animate={{ backgroundColor: ["#f3f4f6", "#bfdbfe", "#f3f4f6"] }}
            transition={{ repeat: Infinity, duration: 3 }}
          />
          <motion.div
            className="h-6 bg-gray-100 rounded w-2/3"
            animate={{ backgroundColor: ["#f3f4f6", "#bfdbfe", "#f3f4f6"] }}
            transition={{ repeat: Infinity, duration: 3, delay: 1 }}
          />
          <motion.button
            className="h-8 bg-blue-500 text-white rounded px-3"
            animate={{ scale: [1, 0.95, 1] }}
            transition={{ repeat: Infinity, duration: 3, delay: 2 }}
          >
            Submit
          </motion.button>
        </div>
      </div>

      {/* Figuren schematisch */}
      <div className="flex flex-col items-center space-y-6">
        {/* Interviewer */}
        <div className="flex items-center gap-2">
          <div className="w-10 h-10 bg-gray-300 rounded-full" />
          <motion.div
            className="bg-gray-200 px-3 py-1 rounded-lg text-sm"
            animate={{ opacity: [0, 1, 0] }}
            transition={{ repeat: Infinity, duration: 6, delay: 0 }}
          >
            Can you explain this?
          </motion.div>
        </div>

        {/* Teilnehmer */}
        <div className="flex items-center gap-2">
          <div className="w-10 h-10 bg-gray-400 rounded-full" />
          <motion.div
            className="bg-blue-100 px-3 py-1 rounded-lg text-sm"
            animate={{ opacity: [0, 1, 0] }}
            transition={{ repeat: Infinity, duration: 6, delay: 3 }}
          >
            I‚Äôd click here‚Ä¶
          </motion.div>
        </div>
      </div>
    </div>
  );
}


==== \src\components\CarInsurance\PrototypeAnimationDetailed.tsx ====
import React, { useEffect, useState } from "react";
import { motion, useAnimation } from "framer-motion";

export default function PrototypeAnimationDetailed() {
  const [selectedVehicle, setSelectedVehicle] = useState<string | null>(null);
  const [selectedInsurance, setSelectedInsurance] = useState<string | null>(null);

  const cursorControls = useAnimation();

  // Ablaufsteuerung
  useEffect(() => {
    const runSequence = async () => {
      // Reset
      setSelectedVehicle(null);
      setSelectedInsurance(null);

      // Cursor sichtbar machen
      await cursorControls.start({ opacity: 1, x: 20, y: 40, transition: { duration: 0 } });

      // Step 1: zu Motorrad fahren
      await cursorControls.start({ x: 120, y: 40, transition: { duration: 1.5 } });
      setSelectedVehicle("Motorrad");

      // Klick-Animation
      await cursorControls.start({ scale: 1.3, transition: { duration: 0.2 } });
      await cursorControls.start({ scale: 1, transition: { duration: 0.2 } });

      // Step 2: zu Haftpflicht fahren
      await cursorControls.start({ x: 40, y: 120, transition: { duration: 1.5 } });
      setSelectedInsurance("Haftpflicht");

      await cursorControls.start({ scale: 1.3, transition: { duration: 0.2 } });
      await cursorControls.start({ scale: 1, transition: { duration: 0.2 } });

      // Step 3: zum Button fahren
      await cursorControls.start({ x: 160, y: 200, transition: { duration: 1.5 } });

      await cursorControls.start({ scale: 1.3, transition: { duration: 0.2 } });
      await cursorControls.start({ scale: 1, transition: { duration: 0.2 } });

      // Kurze Pause
      await new Promise((resolve) => setTimeout(resolve, 1000));

      // Wiederholen
      runSequence();
    };

    runSequence();
  }, [cursorControls]);

  return (
    <div className="flex flex-col md:flex-row items-start gap-8 bg-gray-50 p-6 rounded-xl border shadow-sm">
      {/* Formular */}
      <div className="relative w-full max-w-md bg-white rounded-lg shadow-md border p-6 space-y-6 overflow-hidden">
        {/* Fahrzeugtyp */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-1">Fahrzeugtyp</label>
          <div className="flex gap-2">
            {["PKW", "Motorrad", "Wohnmobil"].map((type) => (
              <div
                key={type}
                className={`px-3 py-1 rounded-md text-sm border transition-colors ${
                  selectedVehicle === type
                    ? "bg-blue-500 text-white border-blue-500"
                    : "bg-gray-100 border-gray-300"
                }`}
              >
                {type}
              </div>
            ))}
          </div>
        </div>

        {/* Versicherung */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-1">Versicherung</label>
          <div className="flex gap-2">
            {["Haftpflicht", "Teilkasko", "Vollkasko"].map((type) => (
              <div
                key={type}
                className={`px-3 py-1 rounded-md text-sm border transition-colors ${
                  selectedInsurance === type
                    ? "bg-blue-500 text-white border-blue-500"
                    : "bg-gray-100 border-gray-300"
                }`}
              >
                {type}
              </div>
            ))}
          </div>
        </div>

        {/* Button */}
        <button
          className={`mt-4 px-4 py-2 rounded transition-colors ${
            selectedVehicle && selectedInsurance
              ? "bg-blue-500 text-white"
              : "bg-gray-300 text-gray-600"
          }`}
        >
          Weiter
        </button>

        {/* Cursor als SVG */}
        <motion.svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          className="absolute w-6 h-6 fill-black"
          initial={{ opacity: 0 }}
          animate={cursorControls}
        >
          <path d="M3 2L21 12L13 14L15 22L7 10L3 2Z" />
        </motion.svg>
      </div>

      {/* Figuren & Sprechblasen */}
      <div className="flex flex-col items-start space-y-6">
        <div className="flex items-center gap-2">
          <div className="w-12 h-12 bg-gray-300 rounded-full" />
          <motion.div
            className="bg-gray-200 px-3 py-1 rounded-lg text-sm shadow-sm"
            animate={{ opacity: [0, 1, 0] }}
            transition={{ repeat: Infinity, duration: 6, delay: 0 }}
          >
            Welchen Fahrzeugtyp haben Sie?
          </motion.div>
        </div>

        <div className="flex items-center gap-2">
          <div className="w-12 h-12 bg-gray-400 rounded-full" />
          <motion.div
            className="bg-blue-100 px-3 py-1 rounded-lg text-sm shadow-sm"
            animate={{ opacity: [0, 1, 0] }}
            transition={{ repeat: Infinity, duration: 6, delay: 1.5 }}
          >
            Ich w√ºrde Motorrad w√§hlen.
          </motion.div>
        </div>

        <div className="flex items-center gap-2">
          <div className="w-12 h-12 bg-gray-300 rounded-full" />
          <motion.div
            className="bg-gray-200 px-3 py-1 rounded-lg text-sm shadow-sm"
            animate={{ opacity: [0, 1, 0] }}
            transition={{ repeat: Infinity, duration: 6, delay: 3 }}
          >
            Und welche Versicherungsart bevorzugen Sie?
          </motion.div>
        </div>

        <div className="flex items-center gap-2">
          <div className="w-12 h-12 bg-gray-400 rounded-full" />
          <motion.div
            className="bg-blue-100 px-3 py-1 rounded-lg text-sm shadow-sm"
            animate={{ opacity: [0, 1, 0] }}
            transition={{ repeat: Infinity, duration: 6, delay: 4.5 }}
          >
            Eine Haftpflicht.
          </motion.div>
        </div>
      </div>
    </div>
  );
}


==== \src\components\CarInsurance\WorkshopAnimation_Car.tsx ====
import React, { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";

export default function WorkshopAnimation_Car() {
  const [phase, setPhase] = useState<"affinity" | "journey">("affinity");

  // Wechsel alle 10 Sekunden
  useEffect(() => {
    const interval = setInterval(() => {
      setPhase((prev) => (prev === "affinity" ? "journey" : "affinity"));
    }, 10000);
    return () => clearInterval(interval);
  }, []);

  const affinityClusters = [
    {
      title: "Pain Points",
      notes: [
        { text: "Formulare zu lang", prio: 1 },
        { text: "Unklare Felder", prio: 3 },
        { text: "Kunde wird verwirrt", prio: 5 },
      ],
      color: "#FECACA", // rot
    },
    {
      title: "Needs",
      notes: [
        { text: "Schneller Abschluss", prio: 2 },
        { text: "Transparenz", prio: 4 },
        { text: "Einfache Sprache", prio: null },
      ],
      color: "#BBF7D0", // gr√ºn
    },
    {
      title: "Ideen",
      notes: [
        { text: "Adaptive Eingabe", prio: null },
        { text: "Tooltips", prio: null },
        { text: "Online-Verf√ºgbarkeit", prio: null },
      ],
      color: "#FEF08A", // gelb
    },
  ];

  const journeySteps = [
    {
      step: "Kundenanliegen verstehen",
      pain: "Berater muss alles manuell abfragen",
      opp: "Fr√ºhe Orientierung, adaptive Fragen",
      pos: { top: "10%", left: "10%" },
    },
    {
      step: "Eingabe im Tool",
      pain: "Alle Felder zwingend, auch irrelevante",
      opp: "Autom. Vorauswahl, Pflichtfelder reduzieren",
      pos: { top: "30%", left: "55%" }, // h√∂her gesetzt
    },
    {
      step: "Tarif-Besprechung",
      pain: "Schwer erkl√§rbare Fachbegriffe",
      opp: "Einfache Sprache, visuelle Vergleichshilfe",
      pos: { top: "70%", left: "20%" },
    },
    {
      step: "Abschluss",
      pain: "Umst√§ndliche Anpassungen im Tool",
      opp: "Flexible Nachbearbeitung ohne Neustart",
      pos: { top: "65%", left: "70%" },
    },
  ];

  return (
    <div className="w-full flex flex-col items-center space-y-6">
      <div className="relative w-full max-w-4xl h-96 border rounded-xl bg-white shadow-lg overflow-hidden">
        <AnimatePresence mode="wait">
          {/* Affinity Map */}
          {phase === "affinity" && (
            <motion.div
              key="affinity"
              className="w-full h-full p-6 grid grid-cols-3 gap-4"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
            >
              {affinityClusters.map((cluster, i) => (
                <div key={i} className="flex flex-col items-start space-y-2">
                  <h4 className="text-sm font-semibold">{cluster.title}</h4>
                  {cluster.notes.map((note, j) => (
                    <motion.div
                      key={j}
                      className="relative w-32 h-16 rounded-md shadow-sm flex items-center text-xs text-center px-2"
                      style={{ backgroundColor: cluster.color }}
                      initial={{ opacity: 0, y: -10 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ delay: j * 0.3 }}
                    >
                      {note.text}
                      {/* Prio Tags 1‚Äì5 */}
                      {note.prio && (
                        <motion.div
                          className="absolute -top-2 -right-2 bg-red-500 text-white text-[10px] px-2 py-0.5 rounded-full shadow"
                          initial={{ scale: 0, opacity: 0 }}
                          animate={{ scale: 1, opacity: 1 }}
                          transition={{ delay: j * 0.3 + 0.6 }}
                        >
                          Prio {note.prio}
                        </motion.div>
                      )}
                    </motion.div>
                  ))}
                </div>
              ))}
            </motion.div>
          )}

          {/* Journey Map */}
          {phase === "journey" && (
            <motion.div
              key="journey"
              className="w-full h-full relative"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
            >
              {journeySteps.map((s, i) => (
                <motion.div
                  key={i}
                  className="absolute flex flex-col space-y-2"
                  style={{ top: s.pos.top, left: s.pos.left }}
                  initial={{ opacity: 0, scale: 0.8 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ delay: i * 0.5 }}
                >
                  {/* Step */}
                  <div className="w-48 h-12 bg-blue-100 rounded-md shadow flex items-center text-center font-medium px-2">
                    {s.step}
                  </div>
                  {/* Pain & Opportunity */}
                  <div className="flex space-x-2">
                    <div className="w-36 h-10 bg-red-100 rounded-md shadow text-[11px] flex items-center text-center px-2">
                      ‚ùå {s.pain}
                    </div>
                    <div className="w-36 h-10 bg-green-100 rounded-md shadow text-[11px] flex items-center text-center px-2">
                      ‚úÖ {s.opp}
                    </div>
                  </div>
                </motion.div>
              ))}
            </motion.div>
          )}
        </AnimatePresence>
      </div>

      <p className="text-sm text-gray-500 text-center max-w-lg">
        Workshop-Artefakte: Affinity Maps mit Clustern & Priorisierung (1‚Äì5)
        sowie eine Customer Journey mit Pain Points & Opportunities.
      </p>
    </div>
  );
}


==== \src\components\SwissLife\Background.tsx ====
import React from "react";

export default function Background() {
  return (
    <div className="w-full border border-border rounded-2xl p-6 bg-background shadow-sm space-y-4">
      <p className="text-muted-foreground">
        Wie arbeiten umsatzstarke Makler:innen tats√§chlich ‚Äì und wo entstehen Reibungen?
        Ziel war ein belastbares Bild der Arbeitsrealit√§t, um Produkte & Services pr√§zise dort
        zu verbessern, wo sie Wirkung entfalten.
      </p>
      <div className="grid sm:grid-cols-2 gap-3 text-sm">
        <div className="p-4 border border-border rounded-lg bg-muted/30">
          <p className="font-medium">Fokus</p>
          <p className="text-muted-foreground">
            Beratung & Kundenbeziehung, Service-Erfahrungen, Tool-/Systemeinsatz, Dokumentation & Haftung,
            Weiterbildung und Zusammenarbeit.
          </p>
        </div>
        <div className="p-4 border border-border rounded-lg bg-muted/30">
          <p className="font-medium">Ergebnisrahmen</p>
          <p className="text-muted-foreground">
            Klar definierte Problemr√§ume, priorisierte Ansatzpunkte, konkrete Outputs (Personas, Journey, Insights)
            und eine validierte Roadmap.
          </p>
        </div>
      </div>
    </div>
  );
}


==== \src\components\SwissLife\CVPreview.tsx ====
import React, { useEffect, useMemo, useRef, useState } from "react";

type Role = {
  id: string;
  company: string;
  role: string;
  period: string;
  tags: string[];
  bullets?: string[];
};

const ROLES: Role[] = [
  {
    id: "exp-freelance",
    company: "Freelance",
    role: "UX Research Consultant",
    period: "2023 ‚Äì present",
    tags: ["Consulting", "B2C", "ResearchOps"],
    bullets: [
      "Optimized UX & analytics for shop flows ‚Üí better conversion.",
      "User tests/experiments ‚Üí informed presentation & pricing.",
      "Scaled research cadence (RITE, office hours) ‚Üí ~30% faster test cycles.",
      "MaxDiff (250+) ‚Üí data-driven prioritization.",
    ],
  },
  {
    id: "exp-atoss",
    company: "ATOSS Software SE",
    role: "UX Research Lead",
    period: "Jan 2025 ‚Äì May 2025",
    tags: ["Leadership", "Enterprise", "B2B"],
    bullets: [
      "Established lean research cadence ‚Üí 70% project coverage.",
      "Conjoint & surveys (>1,000) ‚Üí feature prioritization.",
      "Partnered with CX/Analytics; mentored cross-functional teams.",
    ],
  },
  {
    id: "exp-zooplus",
    company: "zooplus SE",
    role: "UX Research Lead",
    period: "Jul 2022 ‚Äì Dec 2024",
    tags: ["Leadership", "E-commerce", "ResearchOps"],
    bullets: [
      "ResearchOps governance, templates & enablement at scale.",
      "Faster insight cycles; higher consistency across studies.",
    ],
  },
  {
    id: "exp-swisslife",
    company: "Swiss Life",
    role: "Senior UX Researcher",
    period: "May 2020 ‚Äì Jun 2022",
    tags: ["Insurance", "B2B2C", "Quant"],
    bullets: [
      "B2B2C research (SAFe Epic Owner) ‚Üí informed 3 new features.",
      "Stakeholder workshops; iterative validation (RITE).",
    ],
  },
  {
    id: "exp-kaiserxlabs",
    company: "Kaiser X Labs (Allianz)",
    role: "UX Researcher",
    period: "Aug 2018 ‚Äì Apr 2020",
    tags: ["Insurance", "Quant", "Experiments"],
    bullets: [
      "Mixed methods (interviews, surveys, MaxDiff) ‚Üí clear priorities.",
      "Contextual research (e.g., ADAC) ‚Üí exposed redesign opportunities.",
    ],
  },
];

const allTags = Array.from(new Set(ROLES.flatMap((r) => r.tags))).sort();

export default function CVPreview() {
  const [selected, setSelected] = useState<Set<string>>(new Set());
  const [openIds, setOpenIds] = useState<Set<string>>(new Set());
  const [activeId, setActiveId] = useState<string | null>(null);

  const detailsRefs = useRef<Map<string, HTMLDetailsElement>>(new Map());
  const summaryRefs = useRef<Map<string, HTMLElement>>(new Map());
  const listRef = useRef<HTMLOListElement | null>(null);

  const filtered = useMemo(() => {
    return ROLES.filter(
      (r) => selected.size === 0 || Array.from(selected).some((tag) => r.tags.includes(tag))
    );
  }, [selected]);

  const allOpen = useMemo(
    () => filtered.length > 0 && filtered.every((r) => openIds.has(r.id)),
    [filtered, openIds]
  );

  useEffect(() => {
    const id = location.hash?.replace("#", "");
    if (!id) return;
    const el = detailsRefs.current.get(id);
    if (el) {
      el.open = true;
      setOpenIds((prev) => new Set(prev).add(id));
      setActiveId(id);
      setTimeout(() => el.scrollIntoView({ behavior: "smooth", block: "center" }), 10);
    }
  }, []);

  const handleKeyNav = (e: React.KeyboardEvent) => {
    if (!["ArrowDown", "ArrowUp", "Home", "End"].includes(e.key)) return;
    e.preventDefault();
    const ids = filtered.map((r) => r.id);
    const currentIndex = ids.findIndex((id) => summaryRefs.current.get(id) === document.activeElement);
    const focusAt = (idx: number) => summaryRefs.current.get(ids[idx])?.focus();
    if (e.key === "Home") return focusAt(0);
    if (e.key === "End") return focusAt(ids.length - 1);
    if (currentIndex === -1) return focusAt(0);
    if (e.key === "ArrowDown" && currentIndex < ids.length - 1) focusAt(currentIndex + 1);
    if (e.key === "ArrowUp" && currentIndex > 0) focusAt(currentIndex - 1);
  };

  const toggleTag = (tag: string) => {
    setSelected((prev) => {
      const next = new Set(prev);
      if (next.has(tag)) next.delete(tag);
      else next.add(tag);
      return next;
    });
  };

  const clearFilters = () => setSelected(new Set());

  const setAllOpenState = (open: boolean) => {
    filtered.forEach((r) => {
      const d = detailsRefs.current.get(r.id);
      if (d) d.open = open;
    });
    setOpenIds((prev) => {
      const next = new Set(prev);
      filtered.forEach((r) => (open ? next.add(r.id) : next.delete(r.id)));
      return next;
    });
    setActiveId(open ? filtered[0]?.id ?? null : null);
  };

  const onToggle = (id: string, isOpen: boolean) => {
    setOpenIds((prev) => {
      const next = new Set(prev);
      if (isOpen) next.add(id);
      else next.delete(id);
      return next;
    });
    if (isOpen) {
      setActiveId(id); // nur wenn offen
      history.replaceState(null, "", `#${id}`);
    } else {
      if (activeId === id) setActiveId(null); // beim Schlie√üen wieder d√ºnn
      if (location.hash === `#${id}`) history.replaceState(null, "", " ");
    }
  };

  return (
    <section id="cv" className="scroll-mt-24 border-t border-neutral-200 dark:border-neutral-800">
      <div className="container-responsive py-12">
        <header className="mb-6 flex flex-col gap-4 md:flex-row md:items-end md:justify-between">
          <div>
            <h2 className="text-2xl font-bold">CV snapshot</h2>
            <p className="mt-2 text-muted-foreground max-w-3xl">
              Filter by tags. Tip: use <span className="font-mono">‚Üë/‚Üì</span> to move,{" "}
              <span className="font-mono">Enter</span> to open.
            </p>
          </div>
          <div className="flex items-center gap-2">
            <button
              onClick={() => setAllOpenState(!allOpen)}
              className="rounded-xl border border-neutral-300 dark:border-neutral-700 px-3 py-2 text-sm hover:bg-neutral-50 dark:hover:bg-neutral-900"
              title={allOpen ? "Collapse all" : "Expand all"}
            >
              {allOpen ? "Collapse all" : "Expand all"}
            </button>
            {selected.size > 0 && (
              <button
                onClick={clearFilters}
                className="rounded-xl border border-neutral-300 dark:border-neutral-700 px-3 py-2 text-sm hover:bg-neutral-50 dark:hover:bg-neutral-900"
                title="Clear filters"
              >
                Clear
              </button>
            )}
          </div>
        </header>

        {/* Tag Filter */}
        <div className="mb-5 flex flex-wrap gap-2">
          {allTags.map((tag) => {
            const active = selected.has(tag);
            return (
              <button
                key={tag}
                onClick={() => toggleTag(tag)}
                className={`rounded-full border px-3 py-1.5 text-xs transition ${
                  active
                    ? "border-neutral-900 bg-neutral-900 text-white dark:border-white dark:bg-white dark:text-neutral-900"
                    : "border-neutral-300 dark:border-neutral-700 hover:bg-neutral-50 dark:hover:bg-neutral-900"
                }`}
                aria-pressed={active}
              >
                {tag}
              </button>
            );
          })}
        </div>

        {/* Timeline */}
        <ol
          ref={listRef}
          className="relative border-l border-neutral-200 dark:border-neutral-800 pl-8 space-y-5"
          onKeyDown={handleKeyNav}
        >
          {filtered.map((r) => (
            <li key={r.id} className="relative pl-6">
              {/* Bullet auf der Timeline */}
              <span
                className="absolute left-0 top-6 -translate-x-1/2 h-2.5 w-2.5 rounded-full bg-neutral-400 dark:bg-neutral-600"
                aria-hidden
              />
              <details
                ref={(el) => {
                  if (el) detailsRefs.current.set(r.id, el);
                }}
                id={r.id}
                className={`group w-full rounded-xl bg-white/60 dark:bg-neutral-950/60 backdrop-blur transition 
                  ${
                    activeId === r.id
                      ? "border-2 border-neutral-400 dark:border-neutral-600"
                      : "border border-neutral-200 dark:border-neutral-800"
                  }`}
                onToggle={(e) => onToggle(r.id, (e.target as HTMLDetailsElement).open)}
              >
                <summary
                  ref={(el) => {
                    if (el) summaryRefs.current.set(r.id, el);
                  }}
                  className="list-none cursor-pointer px-4 py-3 flex items-center justify-between gap-4 
                             outline-none focus:ring-2 focus:ring-neutral-400 dark:focus:ring-neutral-600 rounded-xl"
                  tabIndex={0}
                >
                  <div className="min-w-0">
                    <div className="font-semibold truncate">{r.company}</div>
                    <div className="text-sm text-neutral-600 dark:text-neutral-300 truncate">
                      {r.role} ¬∑ {r.period}
                    </div>
                    <div className="mt-1 flex flex-wrap gap-1.5">
                      {r.tags.map((t) => (
                        <span
                          key={t}
                          className="inline-flex items-center rounded-full border border-neutral-300 dark:border-neutral-700 px-2 py-0.5 text-[11px]"
                        >
                          {t}
                        </span>
                      ))}
                    </div>
                  </div>
                  {/* Pfeil doppelt so gro√ü */}
                  <div
                    className="shrink-0 transition group-open:rotate-180 text-2xl"
                    aria-hidden
                    title="Toggle details"
                  >
                    ‚ñæ
                  </div>
                </summary>

                {r.bullets && r.bullets.length > 0 && (
                  <div className="px-4 pb-4">
                    <ul className="space-y-2 text-sm text-neutral-700 dark:text-neutral-300">
                      {r.bullets.map((b, j) => (
                        <li key={j} className="flex gap-2">
                          <span aria-hidden>‚Ä¢</span>
                          <span>{b}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
              </details>
            </li>
          ))}

          {filtered.length === 0 && (
            <li className="text-sm text-neutral-600 dark:text-neutral-300">
              No results. Try removing some tags.
            </li>
          )}
        </ol>

        <div className="mt-6">
          <a
            href="/cv"
            className="inline-flex items-center rounded-2xl px-5 py-3 text-sm font-semibold border border-neutral-300 dark:border-neutral-700 hover:bg-neutral-50 dark:hover:bg-neutral-900"
          >
            See full CV
          </a>
        </div>
      </div>
    </section>
  );
}


==== \src\components\SwissLife\DesignThinking.tsx ====
import React from "react";

const steps = [
  {
    no: "1",
    title: "Discover",
    bullets: [
      "Kontext-Interviews vor Ort (Maklerb√ºros)",
      "Arbeitsrealit√§t & H√ºrden im Alltag verstehen",
      "Erste Hypothesen & Themenfelder sammeln",
    ],
  },
  {
    no: "2",
    title: "Define",
    bullets: [
      "Infinity Map & Clustering (Grounded Theory light)",
      "Themen b√ºndeln, Muster erkennen",
      "Problemr√§ume & Ziele sch√§rfen",
    ],
  },
  {
    no: "3",
    title: "Ideate",
    bullets: [
      "Ansatzpunkte f√ºr Tools & Services",
      "Skizzen, Abl√§ufe, Checklisten-Entw√ºrfe",
      "‚ÄöWeniger ist mehr‚Äò als Leitlinie",
    ],
  },
  {
    no: "4",
    title: "Validate",
    bullets: [
      "Abgleich mit Makler:innen",
      "Kano-Umfrage zur Priorisierung",
      "Quali-Insights quantitativ abgesichert",
    ],
  },
  {
    no: "5",
    title: "Decide",
    bullets: [
      "Roadmap nach Wert/Umsetzbarkeit",
      "Quick Wins vs. gr√∂√üere Initiativen",
      "Messbare n√§chste Schritte definieren",
    ],
  },
];

export default function DesignThinking() {
  return (
    <div className="grid md:grid-cols-5 gap-4">
      {steps.map((s) => (
        <div key={s.no} className="border border-border rounded-2xl p-5 bg-background shadow-sm">
          <div className="flex items-center gap-3 mb-2">
            <div className="w-8 h-8 rounded-full bg-blue-600 text-white grid place-items-center font-semibold">
              {s.no}
            </div>
            <h4 className="font-semibold">{s.title}</h4>
          </div>
          <ul className="list-disc pl-5 text-sm text-muted-foreground space-y-1">
            {s.bullets.map((b) => (
              <li key={b}>{b}</li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  );
}


==== \src\components\SwissLife\Impact.tsx ====
import React from "react";

export default function Impact() {
  return (
    <ul className="list-disc pl-6 space-y-2 text-muted-foreground">
      <li>Priorisierte Anforderungen f√ºr Produkt & Service (Vergleichbarkeit, Statuskommunikation, Doku-Hilfen).</li>
      <li>Quick Wins identifiziert und umgesetzt (Vorlagen, Checklisten, Onboarding-Materialien).</li>
      <li>Sales-Material fokussierter: Vertrauen & Klarheit statt Informations√ºberladung.</li>
      <li>N√§chste Schritte: Prototyping zentraler Tool-Funktionen & Feldtests mit GP.</li>
    </ul>
  );
}


==== \src\components\SwissLife\Insights.tsx ====
import React from "react";

const groups = [
  {
    title: "Kundenberatung",
    items: [
      "Beziehung als langfristiges Investment",
      "Spannung: ‚Äögut beraten‚Äò vs. ‚Äöwirtschaftlich arbeiten‚Äò",
      "Unsicherheit, ob sich hoher Aufwand rechnet",
    ],
  },
  {
    title: "Service",
    items: [
      "Verl√§sslichkeit ist erfolgskritisch",
      "Abh√§ngigkeiten zu Versicherern als Risiko",
      "Transparente Statuskommunikation reduziert Nachfragen",
    ],
  },
  {
    title: "Beratungsgespr√§ch",
    items: [
      "Kompetenz ist nicht ersetzbar",
      "Fokus statt Feature-Feuerwerk (‚Äöweniger ist mehr‚Äò)",
      "Chemie/Vertrauen entscheidet",
    ],
  },
  {
    title: "Tools & Systeme",
    items: [
      "Professionelles Auftreten braucht passende Tools",
      "Vergleichbarkeit & saubere Pr√§sentation",
      "Medienbr√ºche abbauen",
    ],
  },
];

export default function Insights() {
  return (
    <div className="grid md:grid-cols-2 gap-4">
      {groups.map((g) => (
        <div key={g.title} className="border border-border rounded-2xl p-5 bg-background shadow-sm">
          <h4 className="font-semibold mb-2">{g.title}</h4>
          <ul className="list-disc pl-5 text-sm text-muted-foreground space-y-1">
            {g.items.map((it) => (
              <li key={it}>{it}</li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  );
}


==== \src\components\SwissLife\Journey.tsx ====
import React from "react";

const phases = [
  { key: "1", label: "Ansprache", action: "Kontakt initiieren, Vertrauen aufbauen" },
  { key: "2", label: "Kennenlernen", action: "Bedarf & Ziele kl√§ren" },
  { key: "3", label: "Datenerfassung", action: "Daten & Nachweise sammeln, dokumentieren" },
  { key: "4", label: "Produkterstellung", action: "Angebote/Varianten vorbereiten" },
  { key: "5", label: "Beratung", action: "Optionen erkl√§ren, Risiken & Nutzen abw√§gen" },
  { key: "6", label: "Abschluss", action: "Entscheidung, Vertrag, Formalia" },
  { key: "7", label: "Datenpflege", action: "Nachbetreuung, Anpassungen, Servicef√§lle" },
];

const pains = [
  "Aufwand, unklare Zust√§ndigkeiten",
  "Divergierende Erwartungen",
  "Hoher Doku-Aufwand & Haftungsangst",
  "Intransparente Vergleichbarkeit",
  "‚ÄöWeniger ist mehr‚Äò schwer durchzuhalten",
  "Formalia & Medienbr√ºche",
  "Servicezeiten, R√ºckfragen, Nachtr√§ge"
];

const opps = [
  "Klarer Pitch & Materialien",
  "Gespr√§chsleitf√§den & Erwartungsmanagement",
  "Doku-Hilfen, Vorlagen, Checklisten",
  "Vergleichstools & Pr√§sentationsqualit√§t",
  "Visualisierte Preis-/Leistungslogik",
  "Digitale Unterschrift, Status-Tracking",
  "Proaktive Service-SLAs & Self-Service"
];

export default function Journey() {
  return (
    <div className="w-full overflow-x-auto border border-border rounded-2xl p-4 bg-background shadow-sm">
      <table className="min-w-full text-sm text-center rounded-2xl overflow-hidden">
        <thead>
          <tr className="bg-muted/40">
            <th className="border border-border p-3 w-36"></th>
            {phases.map((s) => (
              <th key={s.key} className="border border-border p-3 font-semibold">{s.label}</th>
            ))}
          </tr>
        </thead>
        <tbody>
          <tr>
            <td className="border border-border font-medium p-3">Actions</td>
            {phases.map((s) => (
              <td key={s.key} className="border border-border p-3 align-top">
                <p>{s.action}</p>
              </td>
            ))}
          </tr>
          <tr>
            <td className="border border-border font-medium p-3">Pain Points</td>
            {pains.map((txt, i) => (
              <td key={i} className="border border-border p-3 align-top text-muted-foreground">{txt}</td>
            ))}
          </tr>
          <tr>
            <td className="border border-border font-medium p-3">Opportunities</td>
            {opps.map((txt, i) => (
              <td key={i} className="border border-border p-3 align-top text-muted-foreground">{txt}</td>
            ))}
          </tr>
        </tbody>
      </table>
    </div>
  );
}


==== \src\components\SwissLife\KanoSummary.tsx ====
import React from "react";

export default function KanoSummary() {
  return (
    <div className="w-full border border-border rounded-2xl p-6 bg-background shadow-sm">
      <div className="grid md:grid-cols-3 gap-4">
        <div className="p-4 border border-border rounded-lg bg-white">
          <p className="text-sm font-medium mb-1">Must-be</p>
          <ul className="list-disc pl-5 text-sm text-muted-foreground space-y-1">
            <li>Transparente Statuskommunikation & verl√§ssliche Erreichbarkeit</li>
            <li>Saubere, schnelle Dokumentation (Vorlagen/Checklisten)</li>
          </ul>
        </div>
        <div className="p-4 border border-border rounded-lg bg-white">
          <p className="text-sm font-medium mb-1">Performance</p>
          <ul className="list-disc pl-5 text-sm text-muted-foreground space-y-1">
            <li>Vergleichbarkeit & Pr√§sentationsqualit√§t von Angeboten</li>
            <li>Reibungsarme Anbindung an Versicherungssysteme</li>
          </ul>
        </div>
        <div className="p-4 border border-border rounded-lg bg-white">
          <p className="text-sm font-medium mb-1">Delighters</p>
          <ul className="list-disc pl-5 text-sm text-muted-foreground space-y-1">
            <li>Digitale Unterschrift & Status-Tracking</li>
            <li>Proaktive Hinweise/Benachrichtigungen (Self-Service)</li>
          </ul>
        </div>
      </div>
      <p className="text-xs text-muted-foreground mt-4">
        Hinweis: Zusammenfassung der Priorisierung aus der Kano-Validierung; konkrete Items und Werte liegen intern vor.
      </p>
    </div>
  );
}


==== \src\components\SwissLife\Methods.tsx ====
import React from "react";

export default function Methods() {
  return (
    <div className="w-full border border-border rounded-2xl p-6 bg-background shadow-sm space-y-6">
      <div className="grid sm:grid-cols-3 gap-4">
        <div className="p-4 border border-border rounded-lg bg-muted/30">
          <p className="text-sm text-muted-foreground">Stichprobe</p>
          <p className="font-semibold">Kontext-Interviews (7)</p>
          <p className="text-sm text-muted-foreground">GF & Mitarbeitende, Mix nach Gr√∂√üe/Region (~90‚Ä≤)</p>
        </div>
        <div className="p-4 border border-border rounded-lg bg-muted/30">
          <p className="text-sm text-muted-foreground">Feldzeit</p>
          <p className="font-semibold">18.‚Äì21. Aug 2020</p>
          <p className="text-sm text-muted-foreground">vor Ort & remote</p>
        </div>
        <div className="p-4 border border-border rounded-lg bg-muted/30">
          <p className="text-sm text-muted-foreground">Auswertung</p>
          <p className="font-semibold">Grounded Theory (light)</p>
          <p className="text-sm text-muted-foreground">Infinity Map, Clustering, Themenpriorisierung</p>
        </div>
      </div>

      <div className="grid md:grid-cols-2 gap-4">
        <div className="p-4 border border-border rounded-lg bg-white">
          <p className="font-medium mb-2">Leitfragen (Auszug)</p>
          <ul className="list-disc pl-5 text-sm text-muted-foreground space-y-1">
            <li>Wie laufen Beratung & Nachbetreuung ab ‚Äì wo hakt es?</li>
            <li>Welche Service- und Systemabh√§ngigkeiten bremsen?</li>
            <li>Wie hoch ist der Doku-/Haftungsaufwand im Alltag?</li>
            <li>Welche Tools wirken nach au√üen ‚Äûprofessionell‚Äú?</li>
          </ul>
        </div>
        <div className="p-4 border border-border rounded-lg bg-white">
          <p className="font-medium mb-2">Validierung</p>
          <p className="text-sm text-muted-foreground">
            Priorisierung per Kano-Umfrage: Must-be/Performance/Delighters ‚Üí Qualit√§ts-Insights
            quantitativ abgesichert und in Roadmap √ºberf√ºhrt.
          </p>
        </div>
      </div>
    </div>
  );
}


==== \src\components\SwissLife\Model.tsx ====
import React from "react";
import { ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from "recharts";

const data = Array.from({ length: 21 }).map((_, i) => {
  // Zeitbudget Z von 0..100 (in Schritten)
  const x = i * 5; // %
  // Zwei hypothetische Nutzenfunktionen (abnehmender Grenznutzen)
  const qualA = 0.02 * x - 0.00012 * x * x + 2;     // bessere Service-/Systemqualit√§t (A)
  const qualB = 0.018 * x - 0.00014 * x * x + 1.8;  // verschlechterte Rahmenbedingungen (B)
  return { x, qualA: Math.max(0, qualA), qualB: Math.max(0, qualB) };
});

export default function Model() {
  return (
    <div className="w-full border border-border rounded-2xl p-6 bg-background shadow-sm space-y-4">
      <p className="text-muted-foreground text-sm">
        Vereinfachtes Modell: Beratungsqualit√§t entsteht aus dem Zeitbudget f√ºr Bestands- und Neukundenarbeit.
        Verschlechtert sich Service/Systemqualit√§t, sinkt das effektive Budget‚Äîdie erreichbare Beratungsqualit√§t f√§llt (Kurve B).
      </p>
      <ResponsiveContainer width="100%" height={260}>
        <LineChart data={data} margin={{ top: 10, right: 16, left: 0, bottom: 10 }}>
          <CartesianGrid strokeDasharray="3 3" stroke="#E5E7EB" />
          <XAxis dataKey="x" tick={{ fontSize: 12 }} tickLine={false} axisLine={{ stroke: "#E5E7EB" }} label={{ value: "Zeitbudget Z (%)", position: "insideBottom", offset: -4 }} />
          <YAxis tick={{ fontSize: 12 }} tickLine={false} axisLine={{ stroke: "#E5E7EB" }} label={{ value: "Beratungsqualit√§t", angle: -90, position: "insideLeft" }} />
          <Tooltip contentStyle={{ fontSize: 12 }} />
          <Line type="monotone" dataKey="qualA" stroke="#2563EB" strokeWidth={3} dot={false} name="A: gute Rahmenbedingungen" />
          <Line type="monotone" dataKey="qualB" stroke="#93C5FD" strokeWidth={3} dot={false} name="B: schlechtere Rahmenbedingungen" />
        </LineChart>
      </ResponsiveContainer>
    </div>
  );
}


==== \src\components\SwissLife\Personas.tsx ====
import React from "react";

type Persona = {
  name: string;
  title: string;
  traits: string[];
  needs: string[];
  quote?: string;
};

const personas: Persona[] = [
  {
    name: "Thomas",
    title: "Der Veteran (52)",
    traits: ["gr√ºndlich", "vertrauensbasiert", "risikoavers"],
    needs: ["verl√§ssliche Zusammenarbeit", "alles aus einer Hand", "geringer Doku-Overhead"],
    quote: "Ehrliche, saubere Beratung‚Äîaber bitte ohne Papierkrieg."
  },
  {
    name: "Markus",
    title: "Der Gesch√§ftsmann (42)",
    traits: ["strukturiert", "effizienzgetrieben", "zahlenaffin"],
    needs: ["klare Vergleichbarkeit", "professionelles Auftreten", "skalierbare Prozesse"],
    quote: "Gute Vorbereitung spart 50% der Gespr√§chszeit."
  },
  {
    name: "Stefan",
    title: "Der Idealist (38)",
    traits: ["kundennahe Betreuung", "Empfehlungsfokus", "Einzelk√§mpfer"],
    needs: ["intuitive Tools", "schnelle Servicewege", "verl√§ssliche Doku-Hilfen"],
    quote: "Empfehlungen sind meine W√§hrung‚Äîdaf√ºr muss alles sitzen."
  }
];

export default function Personas() {
  return (
    <div className="grid md:grid-cols-3 gap-4">
      {personas.map((p) => (
        <div key={p.name} className="border border-border rounded-2xl p-5 bg-background shadow-sm space-y-3">
          <div>
            <p className="text-sm text-muted-foreground">Persona</p>
            <h4 className="font-semibold">{p.title}</h4>
          </div>
          <div>
            <p className="text-sm font-medium">Charakteristika</p>
            <p className="text-sm text-muted-foreground">{p.traits.join(" ‚Ä¢ ")}</p>
          </div>
          <div>
            <p className="text-sm font-medium">Bedarfe</p>
            <ul className="list-disc pl-5 text-sm text-muted-foreground space-y-1">
              {p.needs.map((n) => <li key={n}>{n}</li>)}
            </ul>
          </div>
          {p.quote && <p className="text-sm italic text-muted-foreground">‚Äû{p.quote}‚Äú</p>}
        </div>
      ))}
    </div>
  );
}


==== \src\components\ZooplusPricing\ActionIcons.tsx ====
import React from "react";

export function IconRealizeProblem() {
  return (
    <div className="flex justify-center">
      <svg width="80" height="60" viewBox="0 0 80 60" fill="none">
        {/* Textfeld-Karte */}
        <rect x="5" y="15" width="60" height="30" rx="6" fill="#F3F4F6" stroke="#374151" strokeWidth="2" />
        <text x="15" y="35" fontSize="12" fill="#111827">Text...</text>
        {/* Alert-Badge */}
        <circle cx="65" cy="40" r="8" fill="#EF4444" />
        <text
          x="65"
          y="40"
          fontSize="12"
          fill="white"
          fontWeight="bold"
          textAnchor="middle"
          dominantBaseline="central"
        >
          !
        </text>
      </svg>
    </div>
  );
}

/** Workaround: Google-Suchleiste mit Lupe (gr√∂√üer, ohne √úberschneidung) */
export function IconWorkaround() {
  return (
    <div className="flex justify-center">
      <svg width="120" height="60" viewBox="0 0 120 60" fill="none">
        {/* Suchfeld */}
        <rect x="10" y="18" width="100" height="24" rx="12" fill="#FFFFFF" stroke="#374151" strokeWidth="2" />
        {/* Platzhalter-Text ‚Äì beginnt links und endet deutlich vor der Lupe */}
        <text x="20" y="34" fontSize="12" fill="#9CA3AF">google search‚Ä¶</text>
        {/* Lupe rechts im Feld */}
        <circle cx="96" cy="30" r="7" stroke="#2563EB" strokeWidth="2" />
        <line x1="100" y1="34" x2="108" y2="42" stroke="#2563EB" strokeWidth="2" />
      </svg>
    </div>
  );
}

export function IconManualDelete() {
  return (
    <div className="flex justify-center">
      <svg width="80" height="60" viewBox="0 0 80 60" fill="none">
        <rect x="5" y="15" width="70" height="30" rx="6" fill="#F3F4F6" stroke="#374151" strokeWidth="2" />
        <rect x="15" y="28" width="40" height="6" fill="#60A5FA" />
        <line x1="55" y1="25" x2="55" y2="45" stroke="#2563EB" strokeWidth="3" markerEnd="url(#arrow)" />
        <defs>
          <marker id="arrow" markerWidth="6" markerHeight="6" refX="3" refY="3" orient="auto">
            <path d="M0,0 L0,6 L6,3 z" fill="#2563EB" />
          </marker>
        </defs>
      </svg>
    </div>
  );
}

export function IconEmptyField() {
  return (
    <div className="flex justify-center">
      <svg width="80" height="60" viewBox="0 0 80 60" fill="none">
        {/* Gleiche Karte wie bei Icon 1 */}
        <rect x="5" y="15" width="60" height="30" rx="6" fill="#F3F4F6" stroke="#374151" strokeWidth="2" />
        <text x="15" y="35" fontSize="12" fill="#111827">Text...</text>
        {/* Gr√ºnes Success-Badge (zentrierter Haken) */}
        <circle cx="65" cy="40" r="8" fill="#22C55E" />
        <text
          x="65"
          y="40"
          fontSize="12"
          fill="white"
          fontWeight="bold"
          textAnchor="middle"
          dominantBaseline="central"
        >
          ‚úì
        </text>
      </svg>
    </div>
  );
}


==== \src\components\ZooplusPricing\Artefacts.tsx ====
import React from "react";

export default function Artefacts() {
  return (
    <section className="space-y-6">
      <h2 className="text-xl font-semibold">Artefakte</h2>
      <div className="grid md:grid-cols-2 gap-6">
        <div className="rounded-xl border p-6 bg-white shadow-sm space-y-2">
          <h3 className="font-semibold">MaxDiff Survey (n=120)</h3>
          <p className="text-sm text-muted-foreground">
            Nutzer:innen priorisierten Pricing-Komponenten nach Relevanz. 
            Ergebnis: Rabatte & Gesamtpreis wurden als wichtigster Faktor gew√§hlt, 
            w√§hrend Details wie Basispreis oder Kilopreis weniger Gewicht hatten.
          </p>
        </div>

        <div className="rounded-xl border p-6 bg-white shadow-sm space-y-2">
          <h3 className="font-semibold">Eye-Tracking Heatmap</h3>
          <p className="text-sm text-muted-foreground">
            Heatmaps zeigten, dass Nutzer:innen den Gesamtpreis und 
            Rabatt-Informationen stark fokussierten. Zusatzinfos wie 
            ‚ÄûUVP‚Äú oder ‚Äûab‚Äú-Preise wurden oft √ºbersehen oder falsch interpretiert.
          </p>
        </div>

        <div className="rounded-xl border p-6 bg-white shadow-sm space-y-2">
          <h3 className="font-semibold">Visual Summary</h3>
          <p className="text-sm text-muted-foreground">
            Zusammenfassung der zentralen Ergebnisse: 
            Preislogik muss transparenter kommuniziert werden, 
            ‚ÄûBest Choice‚Äú-Hervorhebung wird als Entscheidungshilfe gesch√§tzt, 
            Tooltips m√ºssen klarer gestaltet werden.
          </p>
        </div>
      </div>
    </section>
  );
}


==== \src\components\ZooplusPricing\Background.tsx ====
import React from "react";

export default function Background() {
  return (
    <section className="space-y-3">
      <h2 className="text-xl font-semibold">Kontext & Herausforderung</h2>
      <p className="text-muted-foreground">
        Im Zuge des Redesigns von zooplus wurden wir beauftragt, die
        Preisdarstellung auf der Website zu √ºberarbeiten. Die bisherige
        Pricing-Komponente wurde von Nutzer:innen teilweise als unklar und
        schwer verst√§ndlich empfunden.
      </p>
      <p className="text-muted-foreground">
        Wichtig: Es handelte sich nicht um eine offene Exploration, sondern um
        ein <strong>vergleichendes Usability Testing</strong>. Mehrere bereits
        ausgearbeitete Varianten der Preisdarstellung wurden konkret
        gegeneinander gepr√ºft, um festzustellen, welche L√∂sung aus
        Kundensicht am besten funktioniert.
      </p>
      <p className="text-muted-foreground">
        Getestet wurde in realen Nutzungskontexten der Seite, u. a. auf
        Produktdetailseiten, in der Mehrbildansicht sowie in Recommendation
        Engines. Ziel: eine Preisdarstellung, die schneller verstanden wird,
        Vertrauen st√§rkt und Entscheidungen erleichtert.
      </p>
    </section>
  );
}


==== \src\components\ZooplusPricing\DiscussionGuide.tsx ====
import React from "react";

export default function DiscussionGuide() {
  return (
    <div className="w-full border border-border rounded-2xl p-6 bg-background shadow-md">
      <div className="grid md:grid-cols-2 gap-6">
        {/* Linker Block: √úberblick */}
        <div className="space-y-4">
          <div className="p-4 border border-border rounded-lg bg-muted/30">
            <h4 className="font-semibold">Einstieg</h4>
            <ul className="list-disc pl-5 text-sm text-muted-foreground">
              <li>Begr√º√üung & Aufkl√§rung (Ziel, Datenschutz, Incentive)</li>
              <li>Warming-Up: Shopping-Erfahrungen allgemein</li>
            </ul>
          </div>
          <div className="p-4 border border-border rounded-lg bg-muted/30">
            <h4 className="font-semibold">Kernfragen</h4>
            <ul className="list-disc pl-5 text-sm text-muted-foreground">
              <li>Preisinformationen finden & verstehen</li>
              <li>Unklarheiten & Stolpersteine</li>
              <li>Vertrauen in Preisangaben</li>
            </ul>
          </div>
          <div className="p-4 border border-border rounded-lg bg-muted/30">
            <h4 className="font-semibold">Abschluss</h4>
            <ul className="list-disc pl-5 text-sm text-muted-foreground">
              <li>Gesamteindruck der Preisdarstellung</li>
              <li>Verbesserungsvorschl√§ge</li>
            </ul>
          </div>
        </div>

        {/* Rechter Block: Beispiel-Ausschnitt wie im echten Usability-Test */}
        <div className="relative p-6 border border-dashed border-border rounded-lg bg-white shadow-inner">
          <div className="absolute -top-4 left-6 px-2 bg-background text-xs font-semibold uppercase text-muted-foreground">
            Beispielausschnitt
          </div>

          <div className="space-y-5 text-sm">
            {/* Task Nummerierung */}
            <div>
              <p className="font-semibold text-blue-600">Task 3:</p>
              <p className="text-muted-foreground">
                Vergleichen Sie zwei Produktvarianten und entscheiden Sie, welche
                Sie bevorzugen w√ºrden ‚Äì und warum.
              </p>
            </div>

            {/* Erfolgskriterien */}
            <div>
              <p className="font-medium">Erfolgskriterien:</p>
              <ul className="space-y-1 mt-1">
                <li className="flex items-center gap-2">
                  <input type="checkbox" className="w-4 h-4" />
                  <span>Findet beide Varianten selbstst√§ndig</span>
                </li>
                <li className="flex items-center gap-2">
                  <input type="checkbox" className="w-4 h-4" />
                  <span>Kann Unterschiede korrekt beschreiben</span>
                </li>
                <li className="flex items-center gap-2">
                  <input type="checkbox" className="w-4 h-4" />
                  <span>Trifft eine begr√ºndete Auswahl</span>
                </li>
              </ul>
            </div>

            {/* Follow-up Fragen */}
            <div>
              <p className="font-medium">Eventuelle Nachfragen:</p>
              <ul className="list-disc pl-5 text-muted-foreground space-y-1">
                <li>Was hat Ihre Entscheidung beeinflusst?</li>
                <li>Gab es Punkte, die unklar oder verwirrend waren?</li>
                <li>
                  W√ºrden Sie diese Darstellung auch in einer Kaufsituation verstehen?
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}


==== \src\components\ZooplusPricing\Findings.tsx ====
import React from "react";

export default function Findings() {
  return (
    <section className="space-y-4">
      <h2 className="text-xl font-semibold">Ergebnisse & Insights</h2>

      <div className="grid md:grid-cols-2 gap-3">
        <div className="rounded-xl border p-4 bg-white">
          <h3 className="font-semibold text-blue-700 mb-2">Wahrnehmung & Klarheit</h3>
          <p className="text-sm text-gray-700">
            Klarere und modernere Preiswahrnehmung bei den favorisierten Varianten, jedoch
            Unsicherheiten bei Zusatzkosten / Bedingungen (z. B. Versand, Services).
          </p>
        </div>
        <div className="rounded-xl border p-4 bg-white">
          <h3 className="font-semibold text-blue-700 mb-2">Interaktion</h3>
          <p className="text-sm text-gray-700">
            Gesamthaft gute Bedienbarkeit. Irritationen: uneinheitliche Tooltips,
            redundante Formulierungen, ablenkende Sekund√§rinfos in bestimmten Kontexten.
          </p>
        </div>
        <div className="rounded-xl border p-4 bg-white">
          <h3 className="font-semibold text-blue-700 mb-2">Vergleichsf√§higkeit</h3>
          <p className="text-sm text-gray-700">
            Eine kompakte Vergleichsansicht mit 3‚Äì4 differenzierenden Merkmalen half
            Nutzer:innen, schneller zu w√§hlen. Zu viele Details verlangsamen Entscheidungen.
          </p>
        </div>
        <div className="rounded-xl border p-4 bg-white">
          <h3 className="font-semibold text-blue-700 mb-2">Vertrauen</h3>
          <p className="text-sm text-gray-700">
            Transparente Preislogik und klare Kommunikation von Zusatzkosten steigerten
            Vertrauen und reduzierten R√ºckfragen.
          </p>
        </div>
      </div>

      <div className="space-y-2">
        <h3 className="font-semibold">Empfohlene Ma√ünahmen</h3>
        <ul className="list-disc pl-6 text-sm text-muted-foreground space-y-1">
          <li>Klartext statt Fachjargon; pr√§zise Label f√ºr Preisbestandteile.</li>
          <li>Hervorhebung der wichtigsten Kostenpunkte; Einheitlichkeit bei Tooltips.</li>
          <li>Vergleichsmodus (3‚Äì4 Merkmale) statt langer Flie√ütexte.</li>
          <li>Empfohlene Option visuell deutlich markieren (‚ÄûBest Choice‚Äú).</li>
        </ul>
      </div>
    </section>
  );
}


==== \src\components\ZooplusPricing\Heatmap.tsx ====
import React, { useEffect, useRef } from "react";

export default function Heatmap() {
  const canvasRef = useRef<HTMLCanvasElement | null>(null);

  useEffect(() => {
    const canvas = canvasRef.current;
    if (!canvas) return;
    const ctx = canvas.getContext("2d");
    if (!ctx) return;

    const spots = [
      { x: 350, y: 140, r: 50 },  // Preisbereich
      { x: 150, y: 120, r: 70 },  // Produktbild
      { x: 360, y: 230, r: 40 },  // CTA
      { x: 260, y: 330, r: 80 },  // Beschreibung
    ];

    const colors = [
      { color: "rgba(59,10,145,0.3)", offset: 120 },
      { color: "rgba(37,99,235,0.25)", offset: 90 },
      { color: "rgba(34,197,94,0.25)", offset: 70 },
      { color: "rgba(253,224,71,0.3)", offset: 50 },
      { color: "rgba(249,115,22,0.35)", offset: 30 },
      { color: "rgba(220,38,38,0.4)", offset: 15 },
    ];

    ctx.clearRect(0, 0, canvas.width, canvas.height);

    spots.forEach((spot) => {
      colors.forEach((layer) => {
        const radius = spot.r + layer.offset;
        const gradient = ctx.createRadialGradient(
          spot.x, spot.y, 0, spot.x, spot.y, radius
        );
        gradient.addColorStop(0, layer.color);
        gradient.addColorStop(1, "transparent");

        ctx.fillStyle = gradient;
        ctx.beginPath();
        ctx.arc(spot.x, spot.y, radius, 0, 2 * Math.PI);
        ctx.fill();
      });
    });
  }, []);

  return (
    <div className="w-full border border-border rounded-2xl p-6 bg-background shadow-md">
      <div className="flex flex-col md:flex-row gap-8 items-start">
        {/* Heatmap links */}
        <div className="relative w-full md:w-2/3 max-w-2xl border border-gray-200 rounded-lg overflow-hidden bg-white shadow-sm">
          <div className="px-4 py-2 bg-muted/40 border-b border-gray-200 text-sm font-medium">
            PDP-Heatmap (Beispiel, simuliert)
          </div>

          {/* Mockup PDP */}
          <div className="grid grid-cols-2 gap-4 p-4">
            <div className="h-40 bg-gray-100 border border-gray-300 rounded-md flex items-center justify-center text-gray-400">
              Produktbild
            </div>
            <div className="flex flex-col space-y-3">
              <div className="h-6 w-3/4 bg-gray-100 rounded"></div>
              <div className="h-5 w-1/2 bg-gray-100 rounded"></div>
              <div className="h-16 w-full bg-gray-100 rounded"></div>
              <button className="px-4 py-2 bg-gray-200 rounded-md w-32 text-gray-500">
                CTA-Button
              </button>
            </div>
          </div>
          <div className="px-4 pb-4">
            <div className="h-16 w-full bg-gray-100 rounded"></div>
          </div>

          {/* Heatmap Overlay */}
          <canvas
            ref={canvasRef}
            width={600}
            height={450}
            className="absolute inset-0 w-full h-full pointer-events-none"
          />
        </div>

        {/* Ergebnis rechts */}
        <div className="md:w-1/3 space-y-4">
          <p className="text-muted-foreground text-sm leading-relaxed">
            Ergebnis: Der Preisbereich stand im Zentrum der Aufmerksamkeit,
            dennoch gab es Missverst√§ndnisse bei einzelnen Preiskomponenten.
            Produktbilder dominierten den Ersteindruck, w√§hrend CTA und
            Beschreibung zwar wahrgenommen, aber weniger intensiv betrachtet wurden.
          </p>
        </div>
      </div>
    </div>
  );
}


==== \src\components\ZooplusPricing\Hypotheses.tsx ====
import React from "react";

export default function Hypotheses() {
  return (
    <section className="space-y-3">
      <h2 className="text-xl font-semibold">Hypothesen</h2>
      <ul className="list-disc pl-6 space-y-1 text-muted-foreground">
        <li>Nutzer:innen verstehen die Preisstruktur ohne zus√§tzliche Erkl√§rtexte.</li>
        <li>Die neue visuelle Darstellung erh√∂ht Klarheit und Vertrauen.</li>
        <li>Transparente Zusatzkosten reduzieren Unsicherheiten und Abbr√ºche.</li>
      </ul>
    </section>
  );
}


==== \src\components\ZooplusPricing\Impact.tsx ====
import React from "react";

export default function Impact() {
  return (
    <div className="border border-border rounded-2xl p-6 bg-background shadow-sm space-y-3">
      <ul className="list-disc pl-6 space-y-1 text-muted-foreground">
        <li>H√∂here Klarheit & Vertrauen in die Preislogik.</li>
        <li>Quick Wins: pr√§zisere Tooltips & transparente Zusatzkosten.</li>
        <li>Fundierte Basis f√ºr Rollout & Iterationen im Redesign.</li>
        <li>Follow-up: A/B-Tests mit finalen Varianten zur Quantifizierung.</li>
      </ul>
    </div>
  );
}


==== \src\components\ZooplusPricing\Methods.tsx ====
import React from "react";

export default function Methods() {
  return (
    <section className="space-y-4">
      <h2 className="text-xl font-semibold">Forschungsdesign & Methoden</h2>
      <div className="grid sm:grid-cols-2 gap-3">
        <div className="card p-4">Remote Usability Tests (GER)</div>
        <div className="card p-4">Vergleichende Evaluation mehrerer Pricing-Varianten</div>
        <div className="card p-4">
          Test in unterschiedlichen Kontexten (PDP, Mehrbildansicht, Recommendation Engine)
        </div>
        <div className="card p-4">
          Leitfadeninterviews zu Preiswahrnehmung, Klarheit & Vertrauen
        </div>
      </div>

      <div className="rounded-2xl border border-border p-4 bg-muted/40">
        <p className="text-sm text-muted-foreground">
          Studiencharakter: prim√§r <strong>summativ</strong> (fertige Varianten wurden
          direkt gepr√ºft), mit <strong>formativen Elementen</strong> (Ergebnisse flossen
          in Auswahl & Feinschliff der finalen Darstellung ein). Grundlage:
          Human-Centered Design (HCD) ‚Äì reale Nutzungsszenarien, iterative Abw√§gung.
        </p>
      </div>
    </section>
  );
}


==== \src\components\ZooplusPricing\SectionIcon.tsx ====
import React from "react";
import { Tag, Target, FlaskConical, BookOpen, Map, BarChart3, Eye, Lightbulb } from "lucide-react";

type SectionIconProps = {
  name: string;
  className?: string;
};

export default function SectionIcon({ name, className }: SectionIconProps) {
  const icons: Record<string, JSX.Element> = {
    title: <Tag className="w-7 h-7 text-blue-600" />,
    context: <Target className="w-6 h-6 text-blue-600" />,
    methods: <FlaskConical className="w-6 h-6 text-blue-600" />,
    guide: <BookOpen className="w-6 h-6 text-blue-600" />,
    journey: <Map className="w-6 h-6 text-blue-600" />,
    visawi: <BarChart3 className="w-6 h-6 text-blue-600" />,
    heatmap: <Eye className="w-6 h-6 text-blue-600" />,
    insights: <Lightbulb className="w-6 h-6 text-blue-600" />,
    impact: <Target className="w-6 h-6 text-blue-600" />,
  };

  return <span className={`inline-flex items-center mr-2 ${className || ""}`}>{icons[name]}</span>;
}


==== \src\components\ZooplusPricing\UserJourney_Icons.tsx ====
import React from "react";

export function IconHomepage() {
  return (
    <div className="flex justify-center">
      <svg width="100" height="60" viewBox="0 0 100 60" fill="none">
        {/* Startseite-Rahmen */}
        <rect x="5" y="10" width="90" height="40" rx="6" fill="#F3F4F6" stroke="#374151" strokeWidth="2" />
        {/* Header-Balken */}
        <rect x="10" y="15" width="80" height="6" fill="#D1D5DB" />
        {/* Content-Block */}
        <rect x="10" y="25" width="50" height="20" fill="#E5E7EB" />
        {/* Lupe */}
        <circle cx="80" cy="35" r="7" stroke="#2563EB" strokeWidth="2" />
        <line x1="84" y1="39" x2="90" y2="45" stroke="#2563EB" strokeWidth="2" />
      </svg>
    </div>
  );
}

export function IconPLP() {
  return (
    <div className="flex justify-center">
      <svg width="100" height="60" viewBox="0 0 100 60" fill="none">
        {/* Produktkarte 1 */}
        <rect x="10" y="15" width="30" height="30" rx="4" fill="#F3F4F6" stroke="#374151" strokeWidth="2" />
        <rect x="15" y="40" width="20" height="5" fill="#60A5FA" />
        {/* Produktkarte 2 */}
        <rect x="50" y="15" width="30" height="30" rx="4" fill="#F3F4F6" stroke="#374151" strokeWidth="2" />
        <rect x="55" y="40" width="20" height="5" fill="#2563EB" />
        {/* Vergleichspfeil */}
        <line x1="40" y1="30" x2="50" y2="30" stroke="#2563EB" strokeWidth="2" markerEnd="url(#arrow)" />
        <defs>
          <marker id="arrow" markerWidth="6" markerHeight="6" refX="5" refY="3" orient="auto">
            <path d="M0,0 L0,6 L6,3 z" fill="#2563EB" />
          </marker>
        </defs>
      </svg>
    </div>
  );
}

export function IconPDP() {
  return (
    <div className="flex justify-center">
      <svg width="100" height="60" viewBox="0 0 100 60" fill="none">
        {/* Produktdetailseite */}
        <rect x="10" y="10" width="80" height="40" rx="6" fill="#F3F4F6" stroke="#374151" strokeWidth="2" />
        {/* Produktbild */}
        <rect x="15" y="15" width="20" height="20" fill="#E5E7EB" />
        {/* Varianten-Liste */}
        <rect x="40" y="15" width="45" height="6" fill="#60A5FA" />
        <rect x="40" y="25" width="45" height="6" fill="#2563EB" />
        <rect x="40" y="35" width="45" height="6" fill="#93C5FD" />
      </svg>
    </div>
  );
}

export function IconCart() {
  return (
    <div className="flex justify-center">
      <svg width="100" height="60" viewBox="0 0 100 60" fill="none">
        {/* Warenkorb */}
        <rect x="10" y="10" width="80" height="40" rx="6" fill="#F3F4F6" stroke="#374151" strokeWidth="2" />
        {/* Produktzeilen */}
        <rect x="15" y="15" width="70" height="6" fill="#E5E7EB" />
        <rect x="15" y="25" width="70" height="6" fill="#E5E7EB" />
        <rect x="15" y="35" width="70" height="6" fill="#E5E7EB" />
        {/* Preisangaben rechts */}
        <rect x="65" y="15" width="20" height="6" fill="#60A5FA" />
        <rect x="65" y="25" width="20" height="6" fill="#2563EB" />
        <rect x="65" y="35" width="20" height="6" fill="#93C5FD" />
      </svg>
    </div>
  );
}


==== \src\components\ZooplusPricing\UserJourney_P.tsx ====
import React from "react";
import { ResponsiveContainer, LineChart, Line } from "recharts";
import { IconHomepage, IconPLP, IconPDP, IconCart } from "./UserJourney_Icons";

// Journey-Stages mit Icons f√ºr Actions
const stages = [
  {
    key: "tp1",
    label: "Homepage",
    action: "Inform, discover prices and offers.",
    pain: "Keine gro√üen Probleme ‚Äì Nutzer:innen verstehen Preise als ersten √úberblick.",
    opp: "Preise st√§rker als Qualit√§tsindikator inszenieren (Trust-Building).",
    icon: <IconHomepage />,
  },
  {
    key: "tp2",
    label: "PLP",
    action: "Compare products and prices.",
    pain: "Unklarheit √ºber Preiskomponenten ‚Äì Abo vs. Promo, Strike vs. From vs. RRP.",
    opp: "Preiskomponenten vereinheitlichen, Jargon vermeiden, konsistente Darstellung.",
    icon: <IconPLP />,
  },
  {
    key: "tp3",
    label: "PDP",
    action: "Buy, inform about variants and prices.",
    pain: "Hohe kognitive Last ‚Äì schwer zu berechnen, welches Angebot (Menge, Rabatt, Basispreis, Abo) am besten ist.",
    opp: "Vergleichslogik vereinfachen, klare Hervorhebung von Best-Choice, Reduktion redundanter Infos.",
    icon: <IconPDP />,
  },
  {
    key: "tp4",
    label: "Cart",
    action: "Buy, review products and prices.",
    pain: "Kaum Probleme ‚Äì Darstellung ist klar, Erwartungen werden best√§tigt.",
    opp: "Checkout als Vertrauensmoment nutzen ‚Äì Sicherheit/Trust-Elemente verst√§rken, Cross-Selling platzieren.",
    icon: <IconCart />,
  },
];

// Emotions-Kurve (1=negativ, 2=neutral, 3=positiv)
const emotions = [
  { value: 3, emoji: "üòä" }, // Homepage positiv
  { value: 2, emoji: "üòï" }, // PLP gemischt
  { value: 1, emoji: "üòü" }, // PDP frustrierend
  { value: 3, emoji: "üòå" }, // Cart erleichternd/positiv
];

export default function UserJourney_P() {
  return (
    <div className="w-full overflow-x-auto border border-border rounded-2xl p-4 bg-background shadow-sm">
      {/* Desktop-Version */}
      <div className="hidden md:block">
        <table className="min-w-full text-sm text-center rounded-2xl overflow-hidden">
          <thead>
            <tr className="bg-muted/40">
              <th className="border border-border p-3 w-32"></th>
              {stages.map((s) => (
                <th
                  key={s.key}
                  className="border border-border p-3 font-semibold"
                >
                  {s.label}
                </th>
              ))}
            </tr>
          </thead>
          <tbody>
            {/* Actions */}
            <tr>
              <td className="border border-border font-medium p-3">Actions</td>
              {stages.map((s) => (
                <td key={s.key} className="border border-border p-3 align-top">
                  <div className="flex flex-col items-center space-y-2">
                    {s.icon}
                    <p>{s.action}</p>
                  </div>
                </td>
              ))}
            </tr>

            {/* Emotions */}
            <tr>
              <td className="border border-border font-medium p-3">Emotions</td>
              <td colSpan={stages.length} className="border border-border p-3">
                <div className="h-40 relative">
                  <ResponsiveContainer width="100%" height="100%">
                    <LineChart
                      data={emotions.map((e, i) => ({ idx: i, value: e.value }))}
                    >
                      <Line
                        type="monotone"
                        dataKey="value"
                        stroke="#2563EB"
                        strokeWidth={3}
                        dot={{ r: 0 }}
                        isAnimationActive={false}
                      />
                    </LineChart>
                  </ResponsiveContainer>
                  {/* Smileys exakt auf Linie platzieren */}
                  <div className="absolute inset-0 grid grid-cols-4">
                    {emotions.map((e, i) => (
                      <div
                        key={i}
                        className="flex justify-center"
                        style={{
                          transform: `translateY(${(3 - e.value) * 25}px)`,
                        }}
                      >
                        <span className="text-2xl">{e.emoji}</span>
                      </div>
                    ))}
                  </div>
                </div>
              </td>
            </tr>

            {/* Pain Points */}
            <tr>
              <td className="border border-border font-medium p-3">Pain Points</td>
              {stages.map((s) => (
                <td key={s.key} className="border border-border p-3 align-top">
                  {s.pain}
                </td>
              ))}
            </tr>

            {/* Opportunities */}
            <tr>
              <td className="border border-border font-medium p-3">Opportunities</td>
              {stages.map((s) => (
                <td key={s.key} className="border border-border p-3 align-top">
                  {s.opp}
                </td>
              ))}
            </tr>
          </tbody>
        </table>
      </div>

      {/* Mobile-Version */}
      <div className="md:hidden space-y-6">
        {stages.map((s, i) => (
          <div
            key={s.key}
            className="border border-border rounded-2xl p-4 space-y-3"
          >
            {/* Nummerierter Kreis + √úberschrift */}
            <div className="flex items-center gap-3">
              <div className="w-8 h-8 flex items-center justify-center rounded-full bg-blue-600 text-white font-bold">
                {i + 1}
              </div>
              <h3 className="font-semibold">{s.label}</h3>
            </div>

            <div>
              <p className="font-medium">Actions</p>
              <div className="flex flex-col items-center space-y-2">
                {s.icon}
                <p>{s.action}</p>
              </div>
            </div>
            <div>
              <p className="font-medium">Emotions</p>
              <span className="text-2xl">{emotions[i].emoji}</span>
            </div>
            <div>
              <p className="font-medium">Pain Points</p>
              <p className="text-sm text-muted-foreground">{s.pain}</p>
            </div>
            <div>
              <p className="font-medium">Opportunities</p>
              <p className="text-sm text-muted-foreground">{s.opp}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}


==== \src\components\ZooplusPricing\VisAWI.tsx ====
import React from "react";
import {
  ResponsiveContainer,
  BarChart,
  Bar,
  XAxis,
  YAxis,
  Tooltip,
  CartesianGrid,
} from "recharts";

const data = [
  { dimension: "Simplicity", score: 5.8, avg: 5.2 },
  { dimension: "Diversity", score: 4.9, avg: 4.8 },
  { dimension: "Craftsmanship", score: 5.6, avg: 5.0 },
  { dimension: "Colorfulness", score: 5.2, avg: 4.9 },
];

export default function VisAWI() {
  return (
    <div className="w-full border border-border rounded-2xl p-6 bg-background shadow-md">
      <h3 className="text-xl font-semibold mb-4">
        VisAWI Ergebnisse (Visual Aesthetics of Websites Inventory)
      </h3>
      <p className="text-muted-foreground mb-6 text-sm leading-relaxed">
        Vergleich der gemessenen Werte (zooplus Pricing Study) mit publizierten
        Referenzwerten f√ºr Web-Studien (VisAWI-S). Skala: 1 (gering) ‚Äì 7 (hoch).
      </p>

      <ResponsiveContainer width="100%" height={280}>
        <BarChart
          data={data}
          margin={{ top: 10, right: 10, left: 10, bottom: 30 }}
          barCategoryGap="25%"
        >
          <CartesianGrid strokeDasharray="3 3" stroke="#E5E7EB" vertical={false} />
          <XAxis
            dataKey="dimension"
            tick={{ fontSize: 13, fontWeight: 500, fill: "#374151" }}
            interval={0}
            tickMargin={14}
            axisLine={{ stroke: "#E5E7EB" }}
            tickLine={false}
          />
          <YAxis
            domain={[1, 7]}
            ticks={[1, 2, 3, 4, 5, 6, 7]}
            axisLine={{ stroke: "#E5E7EB" }}
            tickLine={false}
            tick={{ fontSize: 12, fill: "#6B7280" }}
          />
          <Tooltip
            contentStyle={{
              backgroundColor: "white",
              border: "1px solid #E5E7EB",
              borderRadius: "6px",
              boxShadow: "0 2px 6px rgba(0,0,0,0.05)",
              fontSize: "13px",
            }}
            cursor={{ fill: "rgba(96,165,250,0.1)" }}
            formatter={(value: number) => value.toFixed(1)}
          />
          {/* Dein Wert */}
          <Bar
            dataKey="score"
            fill="#2563EB"
            radius={[6, 6, 0, 0]}
            maxBarSize={70}
          />
          {/* Referenzwert */}
          <Bar
            dataKey="avg"
            fill="#93C5FD"
            radius={[6, 6, 0, 0]}
            maxBarSize={70}
          />
        </BarChart>
      </ResponsiveContainer>

      {/* Legende und Quelle unten */}
      <div className="mt-6 space-y-3 text-base">
        <p className="flex items-center">
          <span className="inline-block w-3 h-3 rounded-full bg-[#2563EB] mr-2"></span>
          <span className="text-[#2563EB] font-medium">zooplus Pricing Study</span> ‚Äì Ergebnisse aus der eigenen Studie.
        </p>
        <p className="flex items-center">
          <span className="inline-block w-3 h-3 rounded-full bg-[#93C5FD] mr-2"></span>
          <span className="text-[#93C5FD] font-medium">Referenzwerte (VisAWI-S)</span> ‚Äì publizierte Mittelwerte aus Web-Studien.
        </p>
        <p className="text-sm text-muted-foreground">
          Quelle:{" "}
          <a
            href="https://meinald.de/forschung/visawi/"
            target="_blank"
            rel="noopener noreferrer"
            className="underline hover:text-blue-600"
          >
            meinald.de/forschung/visawi
          </a>{" "}
          (Thielsch & Moshagen).
        </p>
      </div>
    </div>
  );
}


==== \src\components\ActionIcons.tsx ====
import React from "react";

export function IconRealizeProblem() {
  return (
    <div className="flex justify-center">
      <svg width="80" height="60" viewBox="0 0 80 60" fill="none">
        {/* Textfeld-Karte */}
        <rect x="5" y="15" width="60" height="30" rx="6" fill="#F3F4F6" stroke="#374151" strokeWidth="2" />
        <text x="15" y="35" fontSize="12" fill="#111827">Text...</text>
        {/* Alert-Badge */}
        <circle cx="65" cy="40" r="8" fill="#EF4444" />
        <text
          x="65"
          y="40"
          fontSize="12"
          fill="white"
          fontWeight="bold"
          textAnchor="middle"
          dominantBaseline="central"
        >
          !
        </text>
      </svg>
    </div>
  );
}

/** Workaround: Google-Suchleiste mit Lupe (gr√∂√üer, ohne √úberschneidung) */
export function IconWorkaround() {
  return (
    <div className="flex justify-center">
      <svg width="120" height="60" viewBox="0 0 120 60" fill="none">
        {/* Suchfeld */}
        <rect x="10" y="18" width="100" height="24" rx="12" fill="#FFFFFF" stroke="#374151" strokeWidth="2" />
        {/* Platzhalter-Text ‚Äì beginnt links und endet deutlich vor der Lupe */}
        <text x="20" y="34" fontSize="12" fill="#9CA3AF">google search‚Ä¶</text>
        {/* Lupe rechts im Feld */}
        <circle cx="96" cy="30" r="7" stroke="#2563EB" strokeWidth="2" />
        <line x1="100" y1="34" x2="108" y2="42" stroke="#2563EB" strokeWidth="2" />
      </svg>
    </div>
  );
}

export function IconManualDelete() {
  return (
    <div className="flex justify-center">
      <svg width="80" height="60" viewBox="0 0 80 60" fill="none">
        <rect x="5" y="15" width="70" height="30" rx="6" fill="#F3F4F6" stroke="#374151" strokeWidth="2" />
        <rect x="15" y="28" width="40" height="6" fill="#60A5FA" />
        <line x1="55" y1="25" x2="55" y2="45" stroke="#2563EB" strokeWidth="3" markerEnd="url(#arrow)" />
        <defs>
          <marker id="arrow" markerWidth="6" markerHeight="6" refX="3" refY="3" orient="auto">
            <path d="M0,0 L0,6 L6,3 z" fill="#2563EB" />
          </marker>
        </defs>
      </svg>
    </div>
  );
}

export function IconEmptyField() {
  return (
    <div className="flex justify-center">
      <svg width="80" height="60" viewBox="0 0 80 60" fill="none">
        {/* Gleiche Karte wie bei Icon 1 */}
        <rect x="5" y="15" width="60" height="30" rx="6" fill="#F3F4F6" stroke="#374151" strokeWidth="2" />
        <text x="15" y="35" fontSize="12" fill="#111827">Text...</text>
        {/* Gr√ºnes Success-Badge (zentrierter Haken) */}
        <circle cx="65" cy="40" r="8" fill="#22C55E" />
        <text
          x="65"
          y="40"
          fontSize="12"
          fill="white"
          fontWeight="bold"
          textAnchor="middle"
          dominantBaseline="central"
        >
          ‚úì
        </text>
      </svg>
    </div>
  );
}


==== \src\components\BeforeAfter.tsx ====
import React from "react";

type BeforeAfterProps = {
  before: string[];
  after: string[];
};

export default function BeforeAfter({ before, after }: BeforeAfterProps) {
  return (
    <div className="grid md:grid-cols-2 gap-6">
      <div className="rounded-xl border bg-red-50 p-6">
        <h4 className="font-semibold text-red-700 mb-3">Before</h4>
        <ul className="list-disc list-inside space-y-1 text-sm text-gray-700">
          {before.map((b, i) => (
            <li key={i}>{b}</li>
          ))}
        </ul>
      </div>
      <div className="rounded-xl border bg-green-50 p-6">
        <h4 className="font-semibold text-green-700 mb-3">After</h4>
        <ul className="list-disc list-inside space-y-1 text-sm text-gray-700">
          {after.map((a, i) => (
            <li key={i}>{a}</li>
          ))}
        </ul>
      </div>
    </div>
  );
}


==== \src\components\CVPreview.tsx ====
import React, { useEffect, useMemo, useRef, useState } from "react";

type Role = {
  id: string;
  company: string;
  role: string;
  period: string;
  tags: string[];
  bullets?: string[];
};

const ROLES: Role[] = [
  {
    id: "exp-freelance",
    company: "Freelance",
    role: "UX Research Consultant",
    period: "2023 ‚Äì present",
    tags: ["Consulting", "B2C", "ResearchOps"],
    bullets: [
      "Optimized UX & analytics for shop flows ‚Üí better conversion.",
      "User tests/experiments ‚Üí informed presentation & pricing.",
      "Scaled research cadence (RITE, office hours) ‚Üí ~30% faster test cycles.",
      "MaxDiff (250+) ‚Üí data-driven prioritization.",
    ],
  },
  {
    id: "exp-atoss",
    company: "ATOSS Software SE",
    role: "UX Research Lead",
    period: "Jan 2025 ‚Äì May 2025",
    tags: ["Leadership", "Enterprise", "B2B"],
    bullets: [
      "Established lean research cadence ‚Üí 70% project coverage.",
      "Conjoint & surveys (>1,000) ‚Üí feature prioritization.",
      "Partnered with CX/Analytics; mentored cross-functional teams.",
    ],
  },
  {
    id: "exp-zooplus",
    company: "zooplus SE",
    role: "UX Research Lead",
    period: "Jul 2022 ‚Äì Dec 2024",
    tags: ["Leadership", "E-commerce", "ResearchOps"],
    bullets: [
      "ResearchOps governance, templates & enablement at scale.",
      "Faster insight cycles; higher consistency across studies.",
    ],
  },
  {
    id: "exp-swisslife",
    company: "Swiss Life",
    role: "Senior UX Researcher",
    period: "May 2020 ‚Äì Jun 2022",
    tags: ["Insurance", "B2B2C", "Quant"],
    bullets: [
      "B2B2C research (SAFe Epic Owner) ‚Üí informed 3 new features.",
      "Stakeholder workshops; iterative validation (RITE).",
    ],
  },
  {
    id: "exp-kaiserxlabs",
    company: "Kaiser X Labs (Allianz)",
    role: "UX Researcher",
    period: "Aug 2018 ‚Äì Apr 2020",
    tags: ["Insurance", "Quant", "Experiments"],
    bullets: [
      "Mixed methods (interviews, surveys, MaxDiff) ‚Üí clear priorities.",
      "Contextual research (e.g., ADAC) ‚Üí exposed redesign opportunities.",
    ],
  },
];

const allTags = Array.from(new Set(ROLES.flatMap((r) => r.tags))).sort();

export default function CVPreview() {
  const [selected, setSelected] = useState<Set<string>>(new Set());
  const [openIds, setOpenIds] = useState<Set<string>>(new Set());
  const [activeId, setActiveId] = useState<string | null>(null);

  const detailsRefs = useRef<Map<string, HTMLDetailsElement>>(new Map());
  const summaryRefs = useRef<Map<string, HTMLElement>>(new Map());
  const listRef = useRef<HTMLOListElement | null>(null);

  const filtered = useMemo(() => {
    return ROLES.filter(
      (r) => selected.size === 0 || Array.from(selected).some((tag) => r.tags.includes(tag))
    );
  }, [selected]);

  const allOpen = useMemo(
    () => filtered.length > 0 && filtered.every((r) => openIds.has(r.id)),
    [filtered, openIds]
  );

  useEffect(() => {
    const id = location.hash?.replace("#", "");
    if (!id) return;
    const el = detailsRefs.current.get(id);
    if (el) {
      el.open = true;
      setOpenIds((prev) => new Set(prev).add(id));
      setActiveId(id);
      setTimeout(() => el.scrollIntoView({ behavior: "smooth", block: "center" }), 10);
    }
  }, []);

  const handleKeyNav = (e: React.KeyboardEvent) => {
    if (!["ArrowDown", "ArrowUp", "Home", "End"].includes(e.key)) return;
    e.preventDefault();
    const ids = filtered.map((r) => r.id);
    const currentIndex = ids.findIndex((id) => summaryRefs.current.get(id) === document.activeElement);
    const focusAt = (idx: number) => summaryRefs.current.get(ids[idx])?.focus();
    if (e.key === "Home") return focusAt(0);
    if (e.key === "End") return focusAt(ids.length - 1);
    if (currentIndex === -1) return focusAt(0);
    if (e.key === "ArrowDown" && currentIndex < ids.length - 1) focusAt(currentIndex + 1);
    if (e.key === "ArrowUp" && currentIndex > 0) focusAt(currentIndex - 1);
  };

  const toggleTag = (tag: string) => {
    setSelected((prev) => {
      const next = new Set(prev);
      if (next.has(tag)) next.delete(tag);
      else next.add(tag);
      return next;
    });
  };

  const clearFilters = () => setSelected(new Set());

  const setAllOpenState = (open: boolean) => {
    filtered.forEach((r) => {
      const d = detailsRefs.current.get(r.id);
      if (d) d.open = open;
    });
    setOpenIds((prev) => {
      const next = new Set(prev);
      filtered.forEach((r) => (open ? next.add(r.id) : next.delete(r.id)));
      return next;
    });
    setActiveId(open ? filtered[0]?.id ?? null : null);
  };

  const onToggle = (id: string, isOpen: boolean) => {
    setOpenIds((prev) => {
      const next = new Set(prev);
      if (isOpen) next.add(id);
      else next.delete(id);
      return next;
    });
    if (isOpen) {
      setActiveId(id); // nur wenn offen
      history.replaceState(null, "", `#${id}`);
    } else {
      if (activeId === id) setActiveId(null); // beim Schlie√üen wieder d√ºnn
      if (location.hash === `#${id}`) history.replaceState(null, "", " ");
    }
  };

  return (
    <section id="cv" className="scroll-mt-24 border-t border-neutral-200 dark:border-neutral-800">
      <div className="container-responsive py-12">
        <header className="mb-6 flex flex-col gap-4 md:flex-row md:items-end md:justify-between">
          <div>
            <h2 className="text-2xl font-bold">CV snapshot</h2>
            <p className="mt-2 text-muted-foreground max-w-3xl">
              Filter by tags. Tip: use <span className="font-mono">‚Üë/‚Üì</span> to move,{" "}
              <span className="font-mono">Enter</span> to open.
            </p>
          </div>
          <div className="flex items-center gap-2">
            <button
              onClick={() => setAllOpenState(!allOpen)}
              className="rounded-xl border border-neutral-300 dark:border-neutral-700 px-3 py-2 text-sm hover:bg-neutral-50 dark:hover:bg-neutral-900"
              title={allOpen ? "Collapse all" : "Expand all"}
            >
              {allOpen ? "Collapse all" : "Expand all"}
            </button>
            {selected.size > 0 && (
              <button
                onClick={clearFilters}
                className="rounded-xl border border-neutral-300 dark:border-neutral-700 px-3 py-2 text-sm hover:bg-neutral-50 dark:hover:bg-neutral-900"
                title="Clear filters"
              >
                Clear
              </button>
            )}
          </div>
        </header>

        {/* Tag Filter */}
        <div className="mb-5 flex flex-wrap gap-2">
          {allTags.map((tag) => {
            const active = selected.has(tag);
            return (
              <button
                key={tag}
                onClick={() => toggleTag(tag)}
                className={`rounded-full border px-3 py-1.5 text-xs transition ${
                  active
                    ? "border-neutral-900 bg-neutral-900 text-white dark:border-white dark:bg-white dark:text-neutral-900"
                    : "border-neutral-300 dark:border-neutral-700 hover:bg-neutral-50 dark:hover:bg-neutral-900"
                }`}
                aria-pressed={active}
              >
                {tag}
              </button>
            );
          })}
        </div>

        {/* Timeline */}
        <ol
          ref={listRef}
          className="relative border-l border-neutral-200 dark:border-neutral-800 pl-8 space-y-5"
          onKeyDown={handleKeyNav}
        >
          {filtered.map((r) => (
            <li key={r.id} className="relative pl-6">
              {/* Bullet auf der Timeline */}
              <span
                className="absolute left-0 top-6 -translate-x-1/2 h-2.5 w-2.5 rounded-full bg-neutral-400 dark:bg-neutral-600"
                aria-hidden
              />
              <details
                ref={(el) => {
                  if (el) detailsRefs.current.set(r.id, el);
                }}
                id={r.id}
                className={`group w-full rounded-xl bg-white/60 dark:bg-neutral-950/60 backdrop-blur transition 
                  ${
                    activeId === r.id
                      ? "border-2 border-neutral-400 dark:border-neutral-600"
                      : "border border-neutral-200 dark:border-neutral-800"
                  }`}
                onToggle={(e) => onToggle(r.id, (e.target as HTMLDetailsElement).open)}
              >
                <summary
                  ref={(el) => {
                    if (el) summaryRefs.current.set(r.id, el);
                  }}
                  className="list-none cursor-pointer px-4 py-3 flex items-center justify-between gap-4 
                             outline-none focus:ring-2 focus:ring-neutral-400 dark:focus:ring-neutral-600 rounded-xl"
                  tabIndex={0}
                >
                  <div className="min-w-0">
                    <div className="font-semibold truncate">{r.company}</div>
                    <div className="text-sm text-neutral-600 dark:text-neutral-300 truncate">
                      {r.role} ¬∑ {r.period}
                    </div>
                    <div className="mt-1 flex flex-wrap gap-1.5">
                      {r.tags.map((t) => (
                        <span
                          key={t}
                          className="inline-flex items-center rounded-full border border-neutral-300 dark:border-neutral-700 px-2 py-0.5 text-[11px]"
                        >
                          {t}
                        </span>
                      ))}
                    </div>
                  </div>
                  {/* Pfeil doppelt so gro√ü */}
                  <div
                    className="shrink-0 transition group-open:rotate-180 text-2xl"
                    aria-hidden
                    title="Toggle details"
                  >
                    ‚ñæ
                  </div>
                </summary>

                {r.bullets && r.bullets.length > 0 && (
                  <div className="px-4 pb-4">
                    <ul className="space-y-2 text-sm text-neutral-700 dark:text-neutral-300">
                      {r.bullets.map((b, j) => (
                        <li key={j} className="flex gap-2">
                          <span aria-hidden>‚Ä¢</span>
                          <span>{b}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
              </details>
            </li>
          ))}

          {filtered.length === 0 && (
            <li className="text-sm text-neutral-600 dark:text-neutral-300">
              No results. Try removing some tags.
            </li>
          )}
        </ol>

        <div className="mt-6">
          <a
            href="/cv"
            className="inline-flex items-center rounded-2xl px-5 py-3 text-sm font-semibold border border-neutral-300 dark:border-neutral-700 hover:bg-neutral-50 dark:hover:bg-neutral-900"
          >
            See full CV
          </a>
        </div>
      </div>
    </section>
  );
}


==== \src\components\DoubleDiamond.tsx ====
import React from "react";
import { motion } from "framer-motion";

type Phase = "discover" | "define" | "develop" | "deliver";

type Props = {
  active: Phase;
  /** Optional: kompaktere Darstellung ohne das globale Default zu √§ndern */
  size?: "lg" | "md" | "sm";
};

const PRESETS = {
  lg: {
    bar: "h-20 md:h-32",
    diamond: "w-14 h-14 md:w-20 md:h-20",
    text: "text-xs md:text-sm",
    margin: "my-12 md:my-32",
    px: "px-6 md:px-16",
  },
  md: {
    bar: "h-12 md:h-20",
    diamond: "w-12 h-12 md:w-16 md:h-16",
    text: "text-[11px] md:text-xs",
    margin: "my-10 md:my-24",
    px: "px-6 md:px-12",
  },
  sm: {
    bar: "h-8 md:h-12",
    diamond: "w-10 h-10 md:w-12 md:h-12",
    text: "text-[10px] md:text-[11px]",
    margin: "my-8 md:my-16",
    px: "px-5 md:px-10",
  },
} as const;

export default function DoubleDiamond({ active, size = "lg" }: Props) {
  const phases: { key: Phase; label: string }[] = [
    { key: "discover", label: "Discover" },
    { key: "define", label: "Define" },
    { key: "develop", label: "Develop" },
    { key: "deliver", label: "Deliver" },
  ];

  const preset = PRESETS[size];

  return (
    <div className={`relative w-full ${preset.margin}`}>
      {/* Balken als Trennlinie */}
      <div
        className={`absolute top-1/2 left-0 w-full ${preset.bar} bg-gray-100 rounded-md -translate-y-1/2`}
      />

      {/* Diamonds */}
      <div className={`flex justify-between items-center relative ${preset.px}`}>
        {phases.map((p) => {
          const isActive = active === p.key;
          return (
            <motion.div
              key={p.key}
              className={`${preset.diamond} rotate-45 flex items-center justify-center border-2 shadow-sm rounded-md`}
              animate={{
                backgroundColor: isActive ? "#2563EB" : "#E5E7EB",
                borderColor: isActive ? "#2563EB" : "#D1D5DB",
                scale: isActive ? 1.15 : 1,
              }}
              transition={{
                duration: 0.5,
                delay: isActive ? 0.15 : 0,
                ease: "easeInOut",
                type: "spring",
                stiffness: 200,
                damping: 20,
              }}
            >
              <span
                className={`rotate-[-45deg] font-medium ${
                  isActive ? "text-white" : "text-gray-600"
                } ${preset.text}`}
              >
                {p.label}
              </span>
            </motion.div>
          );
        })}
      </div>
    </div>
  );
}


==== \src\components\Footer.tsx ====
import { Link } from "react-router-dom";

export default function Footer() {
  const year = new Date().getFullYear();
  return (
    <footer className="mt-12 border-t border-border">
      <div className="container-responsive py-8 flex flex-col sm:flex-row items-center justify-between gap-4">
        <p className="text-sm text-muted-foreground">
          ¬© {year} Felix Bruckmeier ‚Äî All rights reserved.
        </p>
        <nav className="flex items-center gap-4 text-sm">
          <Link
            className="text-muted-foreground hover:text-foreground hover:underline"
            to="/imprint"
          >
            Imprint
          </Link>
          <Link
            className="text-muted-foreground hover:text-foreground hover:underline"
            to="/privacy"
          >
            Privacy
          </Link>
        </nav>
      </div>
    </footer>
  );
}


==== \src\components\HouseDiagram.tsx ====
import React from "react";
import { useTranslation } from "react-i18next";
import { Link } from "react-router-dom";

// Einheitliche Kachelh√∂he (Dach = 1x, Fundament = 0.5x)
const TILE_H = "176px";

export default function HouseDiagram() {
  const { t } = useTranslation();
  const pillars =
    (t("expertise.pillars", { returnObjects: true }) as Array<{ title: string; caption?: string }>) ?? [];

  const routesByIndex = [
    "expertise/ux-strategy",
    "expertise/strategic-ux-research",
    "expertise/researchops",
    "expertise/team-leadership",
    "expertise/impact-measurement",
  ];

  return (
    <div className="w-full" style={{ ["--tile-h" as any]: TILE_H }}>
      {/* Roof */}
      <div className="relative mx-auto max-w-6xl h-[var(--tile-h)]">
        <svg className="w-full h-full" viewBox="0 0 100 50" preserveAspectRatio="none" aria-hidden>
          <polygon
            points="50,2 98,48 2,48"
            fill="currentColor"
            className="text-neutral-900 dark:text-white"
          />
        </svg>
        {/* Overlay-Text */}
        <div className="absolute inset-0 flex items-center justify-center">
          <span className="text-base font-semibold text-white dark:text-neutral-900">
            {t("expertise.roof")}
          </span>
        </div>
      </div>

      {/* Tiles */}
      <div className="mt-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4">
        {pillars.slice(0, 5).map((p, i) => {
          const to = routesByIndex[i] ?? "expertise";
          return (
            <Link
              key={i}
              to={to}
              className="block focus:outline-none focus:ring-2 focus:ring-neutral-400 dark:focus:ring-neutral-600 rounded-2xl"
            >
              <div
                className="
                  h-full min-h-[var(--tile-h)]
                  rounded-2xl border border-border
                  p-4 shadow-sm hover:shadow-md transition-shadow
                  bg-white text-neutral-900
                  dark:bg-neutral-950 dark:text-neutral-100
                "
              >
                <div className="text-base font-semibold leading-snug">{p.title}</div>
                {p.caption ? (
                  <div className="mt-2 text-sm text-neutral-600 dark:text-neutral-300">
                    {p.caption}
                  </div>
                ) : null}
              </div>
            </Link>
          );
        })}
      </div>

      {/* Foundation (halbe Kachelh√∂he) */}
      <div className="mt-6">
        <div
          className="
            mx-auto max-w-6xl
            rounded-full
            text-center border border-border
            bg-neutral-900 text-white
            dark:bg-white dark:text-neutral-900
            text-base font-semibold
          "
          style={{
            height: "calc(var(--tile-h) / 2)",
            display: "grid",
            placeItems: "center",
          }}
        >
          <span className="px-4">{t("expertise.foundation")}</span>
        </div>
      </div>

      {/* Value Proposition */}
      <p className="mt-4 text-center text-base font-semibold text-muted-foreground max-w-3xl mx-auto">
        {t("expertise.valueProp")}
      </p>
    </div>
  );
}


==== \src\components\ImpactCalculator.tsx ====
import React, { useState } from "react";

export default function ImpactCalculator() {
  const [usersPerDay, setUsersPerDay] = useState<number>(1000000); // Default
  const [affectedPercent, setAffectedPercent] = useState<number>(2); // Default 2 %
  const [secondsLost, setSecondsLost] = useState<number>(10); // Default 10 Sek
  const [costPerMonth, setCostPerMonth] = useState<number>(5000); // Default ‚Ç¨ pro Person-Monat

  const [result, setResult] = useState<{
    years: number;
    months: number;
    cost: number;
  } | null>(null);

  const calculate = () => {
    const affectedUsers = usersPerDay * (affectedPercent / 100);
    const secondsPerDay = affectedUsers * secondsLost;
    const secondsPerYear = secondsPerDay * 365;

    const years = secondsPerYear / (60 * 60 * 24 * 365); // Sekunden ‚Üí Jahre
    const months = years * 12; // Jahre ‚Üí Monate
    const cost = months * costPerMonth; // Personenmonate * ‚Ç¨

    setResult({
      years,
      months,
      cost,
    });
  };

  return (
    <div className="rounded-2xl border border-border p-6 space-y-6">
      <h3 className="text-lg font-semibold">Impact Calculator</h3>

      {/* Eingaben */}
      <div className="grid md:grid-cols-2 gap-4">
        <label className="flex flex-col text-sm text-left">
          Nutzer pro Tag
          <input
            type="number"
            value={usersPerDay}
            onChange={(e) => setUsersPerDay(Number(e.target.value))}
            className="mt-1 border rounded-md p-2"
          />
        </label>

        <label className="flex flex-col text-sm text-left">
          Anteil betroffen (%) 
          <input
            type="number"
            value={affectedPercent}
            onChange={(e) => setAffectedPercent(Number(e.target.value))}
            className="mt-1 border rounded-md p-2"
          />
        </label>

        <label className="flex flex-col text-sm text-left">
          Zeitverlust pro Fall (Sekunden)
          <input
            type="number"
            value={secondsLost}
            onChange={(e) => setSecondsLost(Number(e.target.value))}
            className="mt-1 border rounded-md p-2"
          />
        </label>

        <label className="flex flex-col text-sm text-left">
          Kosten pro Personen-Monat (‚Ç¨)
          <input
            type="number"
            value={costPerMonth}
            onChange={(e) => setCostPerMonth(Number(e.target.value))}
            className="mt-1 border rounded-md p-2"
          />
        </label>
      </div>

      {/* Button */}
      <button
        onClick={calculate}
        className="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md shadow"
      >
        Berechnen
      </button>

      {/* Ergebnis */}
      {result && (
        <div className="p-4 rounded-lg bg-muted/40 border border-border text-center space-y-2">
          <p className="text-xl font-bold">
            ‚âà {result.years.toFixed(0)} Jahre pro Jahr
          </p>
          <p className="text-sm text-muted-foreground">
            (entspricht ‚âà {result.months.toFixed(0)} Personen-Monaten <br />
            ‚âà {result.cost.toLocaleString("de-DE", {
              style: "currency",
              currency: "EUR",
              maximumFractionDigits: 0,
            })})
          </p>
        </div>
      )}
    </div>
  );
}


==== \src\components\ImpactGrid.tsx ====
import React from "react";

type Metric = {
  label: string;
  description: string;
};

type Props = {
  metrics: Metric[];
};

export default function ImpactGrid({ metrics }: Props) {
  return (
    <div className="grid md:grid-cols-2 gap-6">
      {metrics.map((m, i) => (
        <div
          key={i}
          className="rounded-xl border bg-white p-6 shadow-sm hover:shadow-md transition"
        >
          <h4 className="font-semibold text-blue-700 mb-2">{m.label}</h4>
          <p className="text-sm text-gray-600">{m.description}</p>
        </div>
      ))}
    </div>
  );
}


==== \src\components\InsightCard.tsx ====
import React from "react";

type InsightProps = {
  title: string;
  evidence: string;
  implication: string;
};

export default function InsightCard({ title, evidence, implication }: InsightProps) {
  return (
    <div className="rounded-2xl border bg-white p-6 shadow-md space-y-4">
      <h4 className="text-lg font-bold text-blue-700">{title}</h4>
      <div>
        <p className="font-semibold text-gray-800">Evidence</p>
        <p className="text-sm text-gray-600">{evidence}</p>
      </div>
      <div>
        <p className="font-semibold text-gray-800">Implication</p>
        <p className="text-sm text-gray-600">{implication}</p>
      </div>
    </div>
  );
}


==== \src\components\JourneyMap.tsx ====
import React from "react";
import { ResponsiveContainer, LineChart, Line } from "recharts";
import {
  IconRealizeProblem,
  IconWorkaround,
  IconManualDelete,
  IconEmptyField,
} from "./ActionIcons";

const stages = [
  {
    key: "realize",
    label: "Realize Problem",
    action: "Bemerkung: Nachricht zu lang",
    icon: <IconRealizeProblem />,
  },
  {
    key: "workaround",
    label: "Workaround suchen",
    action: "User googelt Shortcut oder Hilfe",
    icon: <IconWorkaround />,
  },
  {
    key: "manual",
    label: "Manuell l√∂schen",
    action: "Alles markieren & scrollen",
    icon: <IconManualDelete />,
  },
  {
    key: "empty",
    label: "Feld ist leer",
    action: "Neu anfangen zu tippen",
    icon: <IconEmptyField />,
  },
];

// Emotions-Verlauf + Smileys
const emotions = [
  { value: 2, emoji: "üòê" }, // neutral
  { value: 1, emoji: "üò†" }, // negativ
  { value: 1, emoji: "üò†" }, // negativ
  { value: 3, emoji: "üôÇ" }, // positiv
];

export default function UserJourneyMap() {
  return (
    <div className="w-full overflow-x-auto border border-border rounded-2xl p-4 bg-background shadow-sm">
      {/* Desktop-Version */}
      <div className="hidden md:block">
        <table className="min-w-full text-sm text-center rounded-2xl overflow-hidden">
          <thead>
            <tr className="bg-muted/40">
              <th className="border border-border p-3 w-32"></th>
              {stages.map((s) => (
                <th key={s.key} className="border border-border p-3 font-semibold">
                  {s.label}
                </th>
              ))}
            </tr>
          </thead>
          <tbody>
            {/* Actions */}
            <tr>
              <td className="border border-border font-medium p-3">Actions</td>
              {stages.map((s) => (
                <td key={s.key} className="border border-border p-3 align-top">
                  {s.icon}
                  <p className="mt-2">{s.action}</p>
                </td>
              ))}
            </tr>

            {/* Emotions */}
            <tr>
              <td className="border border-border font-medium p-3">Emotions</td>
              <td colSpan={stages.length} className="border border-border p-3">
                <div className="h-40 relative">
                  <ResponsiveContainer width="100%" height="100%">
                    <LineChart data={emotions.map((e, i) => ({ idx: i, value: e.value }))}>
                      <Line
                        type="monotone"
                        dataKey="value"
                        stroke="#2563EB"
                        strokeWidth={3}
                        dot={{ r: 0 }}
                        isAnimationActive={false}
                      />
                    </LineChart>
                  </ResponsiveContainer>
                  {/* Smileys exakt auf Linie platzieren */}
                  <div className="absolute inset-0 grid grid-cols-4">
                    {emotions.map((e, i) => (
                      <div
                        key={i}
                        className="flex justify-center"
                        style={{
                          transform: `translateY(${(3 - e.value) * 25}px)`,
                        }}
                      >
                        <span className="text-2xl">{e.emoji}</span>
                      </div>
                    ))}
                  </div>
                </div>
              </td>
            </tr>

            {/* Pain Points */}
            <tr>
              <td className="border border-border font-medium p-3">Pain Points</td>
              {stages.map((s, i) => (
                <td key={s.key} className="border border-border p-3 align-top">
                  {i === 0 && "Keine Delete-Funktion sichtbar"}
                  {i === 1 && "Zeitverlust durch Googeln"}
                  {i === 2 && "M√ºhsames Scrollen & Markieren"}
                  {i === 3 && "Erneute Eingabe n√∂tig"}
                </td>
              ))}
            </tr>

            {/* Opportunities */}
            <tr>
              <td className="border border-border font-medium p-3">Opportunities</td>
              {stages.map((s, i) => (
                <td key={s.key} className="border border-border p-3 align-top">
                  {i === 0 && "Fr√ºhes Feedback zur Textl√§nge"}
                  {i === 1 && "Hilfestellungen direkt im UI"}
                  {i === 2 && "Besserer Input-Reset-Mechanismus"}
                  {i === 3 && "Motivation f√ºr Delete-Button"}
                </td>
              ))}
            </tr>
          </tbody>
        </table>
      </div>

      {/* Mobile-Version */}
      <div className="md:hidden space-y-6">
        {stages.map((s, i) => (
          <div key={s.key} className="border border-border rounded-2xl p-4 space-y-3">
            {/* Nummerierter Kreis + √úberschrift */}
            <div className="flex items-center gap-3">
              <div className="w-8 h-8 flex items-center justify-center rounded-full bg-blue-600 text-white font-bold">
                {i + 1}
              </div>
              <h3 className="font-semibold">{s.label}</h3>
            </div>

            <div>
              <p className="font-medium">Actions</p>
              <div className="flex items-center gap-2">
                {s.icon}
                <span>{s.action}</span>
              </div>
            </div>
            <div>
              <p className="font-medium">Emotions</p>
              <span className="text-2xl">{emotions[i].emoji}</span>
            </div>
            <div>
              <p className="font-medium">Pain Points</p>
              <p className="text-sm text-muted-foreground">
                {i === 0 && "Keine Delete-Funktion sichtbar"}
                {i === 1 && "Zeitverlust durch Googeln"}
                {i === 2 && "M√ºhsames Scrollen & Markieren"}
                {i === 3 && "Erneute Eingabe n√∂tig"}
              </p>
            </div>
            <div>
              <p className="font-medium">Opportunities</p>
              <p className="text-sm text-muted-foreground">
                {i === 0 && "Fr√ºhes Feedback zur Textl√§nge"}
                {i === 1 && "Hilfestellungen direkt im UI"}
                {i === 2 && "Besserer Input-Reset-Mechanismus"}
                {i === 3 && "Motivation f√ºr Delete-Button"}
              </p>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}


==== \src\components\JourneyPoster.tsx ====
import React from "react";

type Step = {
  phase: string;
  pain: string;
  opportunity: string;
};

type JourneyProps = {
  title: string;
  steps: Step[];
};

export default function JourneyPoster({ title, steps }: JourneyProps) {
  return (
    <div className="rounded-2xl border bg-white p-8 shadow-lg space-y-8">
      <h3 className="text-2xl font-bold">{title}</h3>
      <div className="grid md:grid-cols-5 gap-4">
        {steps.map((s, i) => (
          <div
            key={i}
            className="flex flex-col justify-between rounded-xl border bg-gray-50 p-4"
          >
            <h4 className="font-semibold text-lg text-gray-800 mb-2">
              {s.phase}
            </h4>
            <div>
              <p className="text-red-600 font-medium">Pain:</p>
              <p className="text-sm text-gray-700 mb-2">{s.pain}</p>
              <p className="text-green-600 font-medium">Opportunity:</p>
              <p className="text-sm text-gray-700">{s.opportunity}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}


==== \src\components\LanguageToggle.tsx ====
import { useTranslation } from "react-i18next";

export default function LanguageToggle() {
  const { i18n } = useTranslation();
  const curr = i18n.language.startsWith("de") ? "de" : "en";
  const next = curr === "de" ? "en" : "de";
  return (
    <button
      className="px-3 py-2 rounded-lg border border-neutral-300 dark:border-neutral-700
                 hover:bg-muted transition text-sm
                 text-neutral-700 dark:text-neutral-300"
      onClick={() => i18n.changeLanguage(next)}
      aria-label="Toggle language"
      title={curr === "de" ? "Switch to English" : "Auf Deutsch umschalten"}
    >
      {curr.toUpperCase()}
    </button>
  );
}


==== \src\components\Navbar.tsx ====
import { Link, useLocation } from "react-router-dom";
import { useEffect, useRef, useState } from "react";
import { useTranslation } from "react-i18next";
import ThemeToggle from "@/components/ThemeToggle";
import LanguageToggle from "@/components/LanguageToggle";

const NAV = ["about","expertise","projects","cv","craft","contact"] as const;

const SUBNAV: Record<string, { id: string; labelKey: string; path: string }[]> = {
  projects: [
    { id: "car-insurance", labelKey: "projects.adac", path: "/projects/car-insurance" },
    { id: "zooplus-reops", labelKey: "projects.reops", path: "/projects/zooplus-reops" },
    { id: "swiss-life", labelKey: "projects.sl", path: "/projects/swiss-life-b2b2c" },
    { id: "zooplus-pricing", labelKey: "projects.pricing", path: "/projects/zooplus-pricing" },
    { id: "delete-case", labelKey: "projects.deleteCase", path: "/projects/delete-case" }, // üëà neu
  ],
  expertise: [
    { id: "ux-strategy", labelKey: "expertise.uxStrategy", path: "/expertise/ux-strategy" },
    { id: "strategic-ux-research", labelKey: "expertise.strategicUxResearch", path: "/expertise/strategic-ux-research" },
    { id: "researchops", labelKey: "expertise.researchOps", path: "/expertise/researchops" },
    { id: "team-leadership", labelKey: "expertise.teamLeadership", path: "/expertise/team-leadership" },
    { id: "impact-measurement", labelKey: "expertise.impactMeasurement", path: "/expertise/impact-measurement" },
  ],
  cv: [
    { id: "cv-full", labelKey: "nav.cvFull", path: "/cv" }
  ]
};

export default function NavBar() {
  const { t } = useTranslation();
  const { pathname, hash } = useLocation();
  const onHome = pathname === "/";
  const [active, setActive] = useState<string>("");
  const [open, setOpen] = useState(false);

  useEffect(() => {
    const prev = document.documentElement.style.scrollBehavior;
    document.documentElement.style.scrollBehavior = "smooth";
    return () => { document.documentElement.style.scrollBehavior = prev; };
  }, []);

  const observerRef = useRef<IntersectionObserver | null>(null);
  useEffect(() => {
    if (!onHome) return;
    const sections = NAV.map(id => document.getElementById(id)).filter(Boolean) as HTMLElement[];
    if (observerRef.current) observerRef.current.disconnect();
    observerRef.current = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const id = entry.target.getAttribute("id") || "";
          setActive(id);
          history.replaceState(null, "", `#${id}`);
        }
      });
    }, { threshold: 0.5, rootMargin: "-20% 0px -50% 0px" });
    sections.forEach(sec => observerRef.current?.observe(sec));
    return () => observerRef.current?.disconnect();
  }, [onHome]);

  const hrefFor = (id: string) => (onHome ? `#${id}` : `/#${id}`);
  useEffect(() => { setOpen(false); }, [hash, pathname]);

  return (
    <header className="sticky top-0 z-50 border-b border-neutral-200 dark:border-neutral-800 bg-white/80 dark:bg-[var(--color-bg-dark)]/80 backdrop-blur">
      <nav className="container-responsive h-16 flex items-center justify-between">
        <Link
          to="/#header"
          className="flex items-center gap-2 font-bold text-sm md:text-base
                     text-neutral-800 dark:text-neutral-200"
        >
          <img src="/favicon.png" alt="FB logo" className="h-6 w-6 rounded-md" />
          <span>Felix Bruckmeier</span>
        </Link>

        <ul className="hidden md:flex items-center gap-4 text-sm">
          {NAV.map((id) => (
            <li key={id} className="relative group">
              <a
                href={hrefFor(id)}
                aria-current={active === id ? "page" : undefined}
                className={`px-1 py-2 ${active === id ? "font-semibold underline underline-offset-4" : ""} 
                            text-neutral-700 dark:text-neutral-300 hover:text-black dark:hover:text-white`}
              >
                {t(`nav.${id}`)}
              </a>
              {SUBNAV[id] && (
                <ul className="absolute left-0 top-full hidden group-hover:block bg-white dark:bg-neutral-900 shadow-lg rounded-md mt-1 py-2 w-56 border border-border">
                  {SUBNAV[id].map((sub) => (
                    <li key={sub.id}>
                      <Link
                        to={sub.path}
                        className="block px-4 py-2 text-sm text-neutral-700 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-800"
                      >
                        {t(sub.labelKey)}
                      </Link>
                    </li>
                  ))}
                </ul>
              )}
            </li>
          ))}
          <li className="pl-2"><LanguageToggle /></li>
          <li><ThemeToggle /></li>
        </ul>

        <button
          aria-label="Open menu"
          className="md:hidden inline-flex items-center justify-center h-10 w-10 rounded-md border border-neutral-300 dark:border-neutral-700
                     text-neutral-800 dark:text-neutral-200"
          onClick={() => setOpen(v=>!v)}
        >
          <div className={`transition-transform ${open ? "rotate-45" : ""}`}>
            <div className="w-5 h-0.5 bg-current mb-1"></div>
            <div className={`w-5 h-0.5 bg-current ${open ? "opacity-0" : ""}`}></div>
            <div className="w-5 h-0.5 bg-current mt-1"></div>
          </div>
        </button>
      </nav>

      {open && (
        <div className="md:hidden border-t border-neutral-200 dark:border-neutral-800 bg-white dark:bg-[var(--color-bg-dark)]">
          <div className="container-responsive py-3 space-y-2">
            {NAV.map((id) => (
              <div key={id}>
                <a href={hrefFor(id)} className="block py-2 text-neutral-800 dark:text-neutral-200">{t(`nav.${id}`)}</a>
                {SUBNAV[id] && (
                  <div className="pl-4 space-y-1">
                    {SUBNAV[id].map((sub) => (
                      <Link
                        key={sub.id}
                        to={sub.path}
                        className="block py-1 text-sm text-neutral-700 dark:text-neutral-300"
                      >
                        {t(sub.labelKey)}
                      </Link>
                    ))}
                  </div>
                )}
              </div>
            ))}
            <div className="flex gap-3 pt-2"><LanguageToggle /><ThemeToggle /></div>
          </div>
        </div>
      )}
    </header>
  );
}


==== \src\components\PersonaCard.tsx ====
import React from "react";

type PersonaProps = {
  name: string;
  role: string;
  age: number;
  location: string;
  goals: string[];
  pains: string[];
  needs: string[];
};

export default function PersonaCard({
  name,
  role,
  age,
  location,
  goals,
  pains,
  needs,
}: PersonaProps) {
  return (
    <div className="rounded-2xl border bg-white p-6 shadow-sm hover:shadow-md transition">
      <h3 className="text-xl font-semibold mb-1">{name}</h3>
      <p className="text-sm text-gray-500 mb-4">
        {role} ¬∑ {age} ¬∑ {location}
      </p>

      <div className="grid md:grid-cols-3 gap-6">
        <div>
          <h4 className="font-semibold mb-2 text-blue-600">üéØ Goals</h4>
          <ul className="list-disc list-inside space-y-1 text-sm text-gray-700">
            {goals.map((g, i) => (
              <li key={i}>{g}</li>
            ))}
          </ul>
        </div>
        <div>
          <h4 className="font-semibold mb-2 text-red-600">‚ö° Pain Points</h4>
          <ul className="list-disc list-inside space-y-1 text-sm text-gray-700">
            {pains.map((p, i) => (
              <li key={i}>{p}</li>
            ))}
          </ul>
        </div>
        <div>
          <h4 className="font-semibold mb-2 text-green-600">‚úÖ Needs</h4>
          <ul className="list-disc list-inside space-y-1 text-sm text-gray-700">
            {needs.map((n, i) => (
              <li key={i}>{n}</li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  );
}


==== \src\components\PersonaPoster.tsx ====
import React from "react";

type PersonaProps = {
  name: string;
  role: string;
  age: number;
  location: string;
  quote: string;
  goals: string[];
  pains: string[];
  needs: string[];
};

const PersonaPoster: React.FC<PersonaProps> = ({
  name,
  role,
  age,
  location,
  quote,
  goals,
  pains,
  needs,
}) => {
  return (
    <div className="rounded-2xl border bg-white p-8 shadow-lg max-w-4xl mx-auto space-y-8">
      {/* Header */}
      <div className="flex flex-col md:flex-row items-start gap-6">
        {/* Avatar */}
        <div className="w-32 h-32 rounded-full bg-gray-200 flex items-center justify-center text-gray-500 text-lg font-semibold">
          Foto
        </div>
        {/* Basics */}
        <div className="flex-1 space-y-2">
          <h3 className="text-2xl font-bold">{name}</h3>
          <p className="text-gray-600">
            {role} ¬∑ {age} Jahre ¬∑ {location}
          </p>
          <blockquote className="italic text-blue-700 border-l-4 border-blue-400 pl-4 mt-4">
            ‚Äû{quote}‚Äú
          </blockquote>
        </div>
      </div>

      {/* Details */}
      <div className="grid md:grid-cols-3 gap-6">
        <div className="bg-blue-50 rounded-xl p-4 border border-blue-100">
          <h4 className="font-semibold text-blue-700 mb-2">üéØ Goals</h4>
          <ul className="list-disc list-inside space-y-1 text-sm text-gray-700">
            {goals.map((g, i) => (
              <li key={i}>{g}</li>
            ))}
          </ul>
        </div>
        <div className="bg-red-50 rounded-xl p-4 border border-red-100">
          <h4 className="font-semibold text-red-700 mb-2">‚ö° Pain Points</h4>
          <ul className="list-disc list-inside space-y-1 text-sm text-gray-700">
            {pains.map((p, i) => (
              <li key={i}>{p}</li>
            ))}
          </ul>
        </div>
        <div className="bg-green-50 rounded-xl p-4 border border-green-100">
          <h4 className="font-semibold text-green-700 mb-2">‚úÖ Needs</h4>
          <ul className="list-disc list-inside space-y-1 text-sm text-gray-700">
            {needs.map((n, i) => (
              <li key={i}>{n}</li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  );
};

export default PersonaPoster;


==== \src\components\PrototypeTimeline.tsx ====
import React from "react";

type Iteration = {
  version: string;
  learnings: string[];
};

type Props = {
  items: Iteration[];
};

export default function PrototypeTimeline({ items }: Props) {
  return (
    <div className="rounded-2xl border bg-white p-8 shadow-lg space-y-8">
      <h3 className="text-2xl font-bold">Prototyping & Tests</h3>
      <div className="grid md:grid-cols-3 gap-6">
        {items.map((it, i) => (
          <div key={i} className="rounded-xl border bg-gray-50 p-6 space-y-3">
            <h4 className="font-semibold text-blue-700">{it.version}</h4>
            <ul className="list-disc list-inside text-sm text-gray-700 space-y-1">
              {it.learnings.map((l, j) => (
                <li key={j}>{l}</li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </div>
  );
}


==== \src\components\ThemeToggle.tsx ====
import { useEffect, useState } from "react";

type Mode = "light" | "dark";

function getInitialTheme(): Mode {
  const stored = localStorage.getItem("theme");
  if (stored === "light" || stored === "dark") return stored;
  return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}

export default function ThemeToggle() {
  const [theme, setTheme] = useState<Mode>(getInitialTheme());

  useEffect(() => {
    const root = document.documentElement;
    if (theme === "dark") {
      root.classList.add("dark");
      root.style.colorScheme = "dark";
    } else {
      root.classList.remove("dark");
      root.style.colorScheme = "light";
    }
    localStorage.setItem("theme", theme);
  }, [theme]);

  return (
    <button
      aria-label="Toggle theme"
      onClick={() => setTheme(theme === "dark" ? "light" : "dark")}
      className="rounded-md border border-neutral-300 dark:border-neutral-700 px-2 py-1 text-xs
                 text-neutral-700 dark:text-neutral-300"
      title={theme === "dark" ? "Switch to light" : "Switch to dark"}
    >
      {theme === "dark" ? "Light" : "Dark"}
    </button>
  );
}


==== \src\hooks\main.tsx ====
import React from "react";
import ReactDOM from "react-dom/client";
import { StrictMode } from "react";
import { BrowserRouter } from "react-router-dom";
import App from "@/App";
import "@/i18n";
import "./index.css";

/* GitHub Pages 404 Redirect ‚Üí urspr√ºnglichen Pfad wiederherstellen */
const redirect = sessionStorage.getItem("redirect");
if (redirect) {
  sessionStorage.removeItem("redirect");
  // Wichtig: vor dem ersten Render, damit BrowserRouter direkt die richtige URL nimmt
  const url = new URL(redirect, window.location.origin);
  window.history.replaceState(null, "", url.pathname + url.search);
}

ReactDOM.createRoot(document.getElementById("root")!).render(
  <StrictMode>
    <BrowserRouter>
      <App />
    </BrowserRouter>
  </StrictMode>
);


==== \src\hooks\useActivePhase.ts ====
import { useEffect, useState } from "react";

export function useActivePhase() {
  const [active, setActive] = useState<"discover" | "define" | "develop" | "deliver">("discover");

  useEffect(() => {
    const sections = ["discover", "define", "develop", "deliver"];

    const observers = sections.map((id) => {
      const el = document.getElementById(id);
      if (!el) return null;

      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              setActive(id as typeof active);
            }
          });
        },
        { threshold: 0.3 } // aktiv wenn mind. 30% sichtbar
      );

      observer.observe(el);
      return observer;
    });

    return () => {
      observers.forEach((o) => o?.disconnect());
    };
  }, []);

  return active;
}


==== \src\i18n\de.json ====
{
  "captions": {
    "adacPricing": "Vorher/Nachher Pricing-Komponente (ADAC): Klarere Tarifstruktur, reduzierte kognitive Last.",
    "adacHeatmap": "Heatmap (Vorher): Klick-Hotspots auf irrelevanten Elementen ‚Üí zeigt Orientierungsprobleme.",
    "reopsMatrix": "ResearchOps-Matrix (zooplus): 6 Wirkungsbereiche als Governance-Rahmen.",
    "reopsDashboard": "ReOps Dashboard/Template Library (zooplus): Wiederverwendbarkeit & Konsistenz.",
    "swissJourney": "Customer Journey Map (Swiss Life): Stufen, Touchpoints, Pain Points, Opportunities.",
    "swissConjoint": "Conjoint-Ergebnis: relative Wichtigkeiten von Produktfeatures.",
    "pricingMaxdiff": "MaxDiff-Ergebnisse (zooplus): Priorisierung der Preismodul-Features.",
    "pricingHeatmap": "Eye-Tracking/Heatmap (zooplus): Blickfokus auf Kernpreisinformationen nach Redesign."
  }
}


==== \src\i18n\en.json ====
{
  "captions": {
    "adacPricing": "Before/After pricing component (ADAC): clearer plan structure, reduced cognitive load.",
    "adacHeatmap": "Heatmap (Before): click hotspots on non-core elements \u2192 reveals orientation issues.",
    "reopsMatrix": "ResearchOps matrix (zooplus): six impact areas as governance frame.",
    "reopsDashboard": "ReOps dashboard/template library (zooplus): reusability & consistency.",
    "swissJourney": "Customer journey map (Swiss Life): stages, touchpoints, pain points, opportunities.",
    "swissConjoint": "Conjoint results: relative importance of product features.",
    "pricingMaxdiff": "MaxDiff results (zooplus): prioritization of pricing module features.",
    "pricingHeatmap": "Eye-tracking/heatmap (zooplus): gaze focus on core price info after redesign."
  }
}


==== \src\locales\de.json ====
{
  "nav": {
    "about": "About",
    "expertise": "Expertise",
    "projects": "Projects",
    "cv": "CV",
    "craft": "Craft",
    "contact": "Contact"
  },
  "hero": {
    "claim": "UX Research Leadership mit Fokus auf Strategie, ResearchOps & Wirkungsmessung",
    "intro": "Ich leite Research-Teams, skaliere ResearchOps und verankere die Nutzer:innen-Perspektive in der Produktstrategie. Mein Fokus: Entscheidungen beschleunigen, Wirkung belegen und nachhaltige Produkte gestalten."
  },
  "about": {
    "title": "About",
    "text": "UX Research Leader mit Hintergrund in √ñkonometrie & Produktentwicklung. Ich verbinde Qual & Quant, reduziere Risiko und verankere die Nutzer:innen-Perspektive in der Produktstrategie."
  },
  "expertise": {
    "title": "Expertise",
    "roof": "Sustainable Products",
    "foundation": "User-Centered Value Creation",
    "valueProp": "I help companies build sustainable products by transforming deep user insights into actionable strategies. My mission is to scale the user's voice and empower organizations to make user-centered decisions.",
    "pillars": [
      {
        "title": "Research Strategy",
        "caption": "Discovery-Programme an Business-Zielen ausrichten"
      },
      {
        "title": "Needs ‚Üí Product Strategy",
        "caption": "Insights in Roadmaps √ºbersetzen"
      },
      {
        "title": "Process & Tooling",
        "caption": "Effiziente, skalierbare Praxis"
      },
      {
        "title": "Team Leadership",
        "caption": "Mentoring, Standards, Exzellenz"
      },
      {
        "title": "Proving ROI",
        "caption": "Wirkung messen & kommunizieren"
      }
    ]
  },
  "projects": {
    "title": "Projects",
    "adac": "ADAC ‚Äî Car Insurance Quote Flow",
    "reops": "zooplus ‚Äî ResearchOps Scaling",
    "sl": "Swiss Life ‚Äî B2B2C UX Research",
    "pricing": "zooplus ‚Äî Pricing Usability Testing"
  },
  "cv": {
    "title": "CV",
    "teaserTitle": "Kurzprofil & Stationen",
    "teaserList": [
      "Lead/Director UX Research ‚Äì Enterprise & B2C",
      "ResearchOps Aufbau & Skalierung",
      "OKR-verbundene Research-Roadmaps",
      "Coaching & Enablement f√ºr Produktteams"
    ],
    "btn": "Zur CV-Seite",
    "pageIntro": "Vollst√§ndiger Lebenslauf (als PDF eingebettet).",
    "pdfAlt": "CV PDF"
  },
  "craft": {
    "title": "Craft",
    "text": "Research als Handwerk: wiederholbar, verbesserbar, mit hohen Qualit√§tsstandards."
  },
  "contact": {
    "title": "Contact",
    "cta": "üìû Contact me ‚Äî I'm eager to learn about your challenges...",
    "cta2": "Book Your Call Now ‚Äî Schedule a Discovery Call",
    "cta3": "Click to easily book a 60-minute call directly in my calendar."
  }
}


==== \src\locales\en.json ====
{
  "nav": {
    "about": "About",
    "expertise": "Expertise",
    "projects": "Projects",
    "cv": "CV",
    "craft": "Craft",
    "contact": "Contact"
  },
  "hero": {
    "claim": "UX Research Leadership with focus on Strategy, ResearchOps & Impact Measurement",
    "intro": "I lead research teams, scale ResearchOps, and embed the user perspective into product strategy. My focus: accelerating decisions, proving impact, and building sustainable products."
  },
  "about": {
    "title": "About",
    "text": "UX Research leader with a background in econometrics and product development. I combine qual & quant to de-risk decisions and embed the user's voice into product strategy."
  },
  "expertise": {
    "title": "Expertise",
    "roof": "Sustainable Products",
    "foundation": "User-Centered Value Creation",
    "valueProp": "I help companies build sustainable products by transforming deep user insights into actionable strategies. My mission is to scale the user's voice and empower organizations to make user-centered decisions.",
    "pillars": [
      {
        "title": "Research Strategy",
        "caption": "Discovery programs aligned to business goals"
      },
      {
        "title": "Needs ‚Üí Product Strategy",
        "caption": "Translate insights into roadmaps"
      },
      {
        "title": "Process & Tooling",
        "caption": "Efficient, scalable practice"
      },
      {
        "title": "Team Leadership",
        "caption": "Mentorship, standards, excellence"
      },
      {
        "title": "Proving ROI",
        "caption": "Measure and communicate impact"
      }
    ]
  },
  "projects": {
    "title": "Projects",
    "adac": "ADAC ‚Äî Car Insurance Quote Flow",
    "reops": "zooplus ‚Äî ResearchOps Scaling",
    "sl": "Swiss Life ‚Äî B2B2C UX Research",
    "pricing": "zooplus ‚Äî Pricing Usability Testing"
  },
  "cv": {
    "title": "CV",
    "teaserTitle": "Snapshot & Roles",
    "teaserList": [
      "Lead/Director UX Research ‚Äì Enterprise & B2C",
      "ResearchOps setup & scaling",
      "OKR-linked research roadmaps",
      "Coaching & enablement for product teams"
    ],
    "btn": "Go to CV page",
    "pageIntro": "Full r√©sum√© (embedded PDF).",
    "pdfAlt": "CV PDF"
  },
  "craft": {
    "title": "Craft",
    "text": "Research as craft: repeatable, improvable practice with strong quality standards."
  },
  "contact": {
    "title": "Contact",
    "cta": "üìû Contact me ‚Äî I'm eager to learn about your challenges...",
    "cta2": "Book Your Call Now ‚Äî Schedule a Discovery Call",
    "cta3": "Click to easily book a 60-minute call directly in my calendar."
  }
}


==== \src\pages\expertise\ImpactMeasurement.tsx ====
import React from 'react'

const Page: React.FC = () => (
  <div className="container-responsive py-12 space-y-4">
    <h1 className="text-3xl font-semibold">Impact Measurement</h1>
    <p className="text-muted-foreground">Content coming soon. Replace with real case details (Situation ‚Üí Research ‚Üí Decisions ‚Üí Impact).</p>
  </div>
)
export default Page


==== \src\pages\expertise\ResearchOps.tsx ====
import React from 'react'

const Page: React.FC = () => (
  <div className="container-responsive py-12 space-y-4">
    <h1 className="text-3xl font-semibold">ResearchOps</h1>
    <p className="text-muted-foreground">Content coming soon. Replace with real case details (Situation ‚Üí Research ‚Üí Decisions ‚Üí Impact).</p>
  </div>
)
export default Page


==== \src\pages\expertise\StrategicUXResearch.tsx ====
import React from 'react'

const Page: React.FC = () => (
  <div className="container-responsive py-12 space-y-4">
    <h1 className="text-3xl font-semibold">Strategic UX Research</h1>
    <p className="text-muted-foreground">Content coming soon. Replace with real case details (Situation ‚Üí Research ‚Üí Decisions ‚Üí Impact).</p>
  </div>
)
export default Page


==== \src\pages\expertise\TeamLeadership.tsx ====
import React from 'react'

const Page: React.FC = () => (
  <div className="container-responsive py-12 space-y-4">
    <h1 className="text-3xl font-semibold">Team Leadership & Mentoring</h1>
    <p className="text-muted-foreground">Content coming soon. Replace with real case details (Situation ‚Üí Research ‚Üí Decisions ‚Üí Impact).</p>
  </div>
)
export default Page


==== \src\pages\expertise\UXStrategy.tsx ====
import React from 'react'

const Page: React.FC = () => (
  <div className="container-responsive py-12 space-y-4">
    <h1 className="text-3xl font-semibold">UX Strategy</h1>
    <p className="text-muted-foreground">Content coming soon. Replace with real case details (Situation ‚Üí Research ‚Üí Decisions ‚Üí Impact).</p>
  </div>
)
export default Page


==== \src\pages\projects\CarInsurance.tsx ====
import React from "react";
import DoubleDiamond from "@/components/DoubleDiamond";
import JourneyMap_Car from "@/components/CarInsurance/JourneyMap_Car";
import BeforeAfter_Car from "@/components/CarInsurance/BeforeAfter_Car";
import ImpactGrid_Car from "@/components/CarInsurance/ImpactGrid_Car";
import PrototypeAnimationDetailed from "@/components/CarInsurance/PrototypeAnimationDetailed";
import WorkshopAnimation_Car from "@/components/CarInsurance/WorkshopAnimation_Car";
import { useActivePhase } from "@/hooks/useActivePhase";

export default function CarInsurance() {
  const activePhase = useActivePhase();

  return (
    <div className="container-responsive py-16 space-y-40">
      {/* Header */}
      <header className="space-y-6">
        <h1 className="text-4xl font-bold">
          üöó ADAC ‚Äì Enhancing the Performance of Insurance Advisors
        </h1>
        <p className="text-foreground max-w-3xl leading-relaxed">
          We collaborated with ADAC to modernize their outdated Kfz insurance
          advisory software, focusing on usability, efficiency, and user trust.
        </p>
      </header>

      {/* Kontext & Herausforderung */}
      <section className="space-y-6">
        <h2 className="text-2xl font-semibold">üìå Kontext & Herausforderung</h2>
        <p className="text-foreground leading-relaxed">
          ADAC advisors in branches used an outdated tool to guide customers
          through Kfz insurance consultations. This led to long, intransparent
          sessions, unclear form fields, and high cognitive load in busy branch
          environments.
        </p>
      </section>

      {/* Einf√ºhrung ins Vorgehen */}
      <section className="space-y-6">
        <h2 className="text-2xl font-semibold">
          üåç Produktentwicklung mit Design Thinking: Ein ganzheitlicher Ansatz
        </h2>
        <p className="text-foreground max-w-3xl leading-relaxed">
          The Design Thinking process is a flexible, iterative, user-centric
          framework to tackle complex challenges through deep user understanding
          and continuous prototyping. In our case, we follow the Double Diamond
          model: exploring the problem space (Discover & Define) and iterating
          in the solution space (Develop & Deliver).
        </p>
      </section>

      {/* Sticky DoubleDiamond ‚Äì nur Desktop */}
      <div className="hidden md:block sticky top-22 z-40 bg-white shadow-md">
        <DoubleDiamond active={activePhase} />
      </div>

      {/* Discover */}
      <section id="discover" className="space-y-10">
        <div className="md:hidden mb-6">
          <DoubleDiamond active="discover" />
        </div>

        <h2 className="text-2xl font-semibold">üîç Discover ‚Äì Research Approach</h2>

        {/* Methodik */}
        <div className="space-y-6">
          <h3 className="text-xl font-semibold">Methodik: Kontextuelle Interviews</h3>
          <p className="text-foreground leading-relaxed">
            Um den realen Beratungskontext zu verstehen, f√ºhrten wir deutschlandweit
            kontextuelle Interviews direkt in ADAC-Filialen durch. Dabei nahmen wir an
            echten Beratungsgespr√§chen teil, beobachteten die Nutzung der bestehenden
            Software und hielten detaillierte Notizen fest. Jedes Interview dauerte
            zwischen 90 und 120 Minuten und folgte einem strukturierten Leitfaden.
          </p>
          <p className="text-foreground leading-relaxed">
            Ziel war es, die allt√§glichen Arbeitsbedingungen der Beraterinnen und Berater
            abzubilden ‚Äì inklusive Zeitdruck, Kundenerwartungen und den Herausforderungen
            einer oft unruhigen Filialumgebung.
          </p>
        </div>

        {/* Leitfragen */}
        <div className="space-y-6 mt-8">
          <h3 className="text-xl font-semibold">Leitfragen</h3>
          <ul className="list-disc list-inside space-y-2 text-muted-foreground">
            <li>Wie navigieren Beraterinnen und Berater Kunden Schritt f√ºr Schritt durch das Tool?</li>
            <li>Welche Aufgaben und Eingaben sind f√ºr den Abschluss einer Kfz-Versicherung kritisch?</li>
            <li>Wo treten Reibungen, Missverst√§ndnisse oder Verz√∂gerungen auf?</li>
            <li>Wie wirkt sich die Umgebung (Lautst√§rke, Zeitdruck) auf das Gespr√§ch aus?</li>
            <li>Welche Strategien wenden Beraterinnen und Berater an, um Probleme im Gespr√§ch zu umgehen?</li>
          </ul>
        </div>
      </section>

      {/* Define */}
      <section id="define" className="space-y-10">
        <div className="md:hidden mb-6">
          <DoubleDiamond active="define" />
        </div>
        <h2 className="text-2xl font-semibold">üó∫ Define Phase</h2>
        <p className="text-foreground leading-relaxed">
          From the research data we synthesized personas and created a detailed
          Counseling Journey Map to visualize advisor workflows, pain points,
          and opportunities.
        </p>
        <JourneyMap_Car />
      </section>

      {/* Develop */}
      <section id="develop" className="space-y-10">
        <div className="md:hidden mb-6">
          <DoubleDiamond active="develop" />
        </div>
        <h2 className="text-2xl font-semibold">üé® Develop ‚Äì From Insights to Design</h2>

        {/* Workshops */}
        <div className="space-y-6">
          <h3 className="text-xl font-semibold">Stakeholder Workshops</h3>
          <p className="text-foreground leading-relaxed">
            We ran workshops with ADAC stakeholders to ensure transparency,
            share research findings, answer questions, and prioritize key
            opportunities. This created strong alignment across teams.
          </p>
          <WorkshopAnimation_Car />
        </div>

        {/* Design Principles */}
        <div className="space-y-6">
          <h3 className="text-xl font-semibold">Design Principles</h3>
          <ul className="list-disc list-inside space-y-2 text-muted-foreground">
            <li>Pre-fill fields to reduce manual input</li>
            <li>Support orientation with clear navigation</li>
            <li>Reduce complexity of forms and workflows</li>
            <li>Minimize drop-offs with smooth, intuitive flows</li>
          </ul>
        </div>

        {/* Prototyping */}
        <div className="space-y-6">
          <h3 className="text-xl font-semibold">Prototyping</h3>
          <p className="text-foreground leading-relaxed">
            We iteratively moved from low-fidelity wireframes to interactive
            click dummies, validating each step with ADAC advisors through
            usability tests. Feedback guided refinements in navigation,
            language, and structure.
          </p>
          <PrototypeAnimationDetailed />
        </div>
      </section>

      {/* Deliver */}
      <section id="deliver" className="space-y-10">
        <div className="md:hidden mb-6">
          <DoubleDiamond active="deliver" />
        </div>

        <h2 className="text-2xl font-semibold">üìà Deliver & Impact</h2>

        <div className="grid md:grid-cols-2 gap-6">
          {/* Advisor Confidence mit Before/After */}
          <div className="rounded-xl border bg-white p-6 shadow-sm hover:shadow-md transition">
            <h4 className="font-semibold text-blue-700 mb-2">
              üßë‚Äçüíª Advisor Confidence
            </h4>
            <div className="text-sm text-foreground space-y-4">
              <p>Klare Masken, weniger Blind-Eingaben.</p>
              <BeforeAfter_Car
                before={[
                  "Starre Frageb√∂gen ‚Äì alle Felder zwingend auszuf√ºllen",
                  "Unklare Fachbegriffe",
                  "Langsame, fehleranf√§llige Navigation",
                ]}
                after={[
                  "Adaptiver Ablauf ‚Äì kontextsensitive Fragen",
                  "Einfache, verst√§ndliche Sprache",
                  "Vereinfachte Navigation mit klaren Schritten",
                ]}
              />
            </div>
          </div>

          {/* Drei kompaktere Impacts */}
          <div className="space-y-6">
            <div className="rounded-xl border bg-white p-6 shadow-sm hover:shadow-md transition">
              <h4 className="font-semibold text-blue-700 mb-2">
                ‚è± Gespr√§chsdauer
              </h4>
              <p className="text-sm text-foreground">
                Reduziert von 60‚Äì90 Minuten auf 30‚Äì45 Minuten.
              </p>
            </div>

            <div className="rounded-xl border bg-white p-6 shadow-sm hover:shadow-md transition">
              <h4 className="font-semibold text-blue-700 mb-2">
                ü§ù Kundenzufriedenheit
              </h4>
              <p className="text-sm text-foreground">
                Transparente Beratung, h√∂heres Vertrauen.
              </p>
            </div>

            <div className="rounded-xl border bg-white p-6 shadow-sm hover:shadow-md transition">
              <h4 className="font-semibold text-blue-700 mb-2">üåê Innovation</h4>
              <p className="text-sm text-foreground">
                Versicherungsrechner nun auch online f√ºr Privatpersonen
                verf√ºgbar.
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* Link */}
      <footer className="pt-12">
        <a
          href="https://www.adac.de/produkte/versicherungen/kfz-versicherungen/"
          className="underline text-blue-600 hover:text-blue-800"
          target="_blank"
          rel="noopener noreferrer"
        >
          Live: ADAC Kfz-Versicherung
        </a>
      </footer>
    </div>
  );
}


==== \src\pages\projects\DeleteCase.tsx ====
import React, { useState } from "react";
import { useI18n } from "@/i18n";
import UserJourneyMap from "@/components/JourneyMap";
import InsightCard from "@/components/InsightCard";

// Hilfsfunktion f√ºr Zeitformatierung
function formatTime(seconds: number): string {
  if (seconds < 60) return `${seconds.toFixed(0)} Sekunden`;
  const minutes = seconds / 60;
  if (minutes < 60) return `${minutes.toFixed(0)} Minuten`;
  const hours = minutes / 60;
  if (hours < 24) return `${hours.toFixed(0)} Stunden`;
  const days = hours / 24;
  if (days < 30) return `${days.toFixed(0)} Tage`;
  const months = days / 30;
  if (months < 12) return `${months.toFixed(0)} Monate`;
  const years = months / 12;
  if (years < 10) {
    const y = Math.floor(years);
    const m = Math.round((years - y) * 12);
    return `${y} Jahre ${m > 0 ? `und ${m} Monate` : ""}`;
  }
  return `${years.toFixed(0)} Jahre`;
}

const DeleteCase: React.FC = () => {
  const { t } = useI18n();

  const [users, setUsers] = useState<number | undefined>(100); // default 100
  const [timeLoss, setTimeLoss] = useState<number | undefined>(10); // default 10 Sekunden
  const [costPerDay, setCostPerDay] = useState<number | undefined>(400); // default 400 ‚Ç¨/Tag
  const [result, setResult] = useState<{ time: string; cost: number } | null>(null);
  const [error, setError] = useState<string | null>(null);

  const calculate = () => {
    if (!users && !timeLoss) {
      setError("Bitte Anzahl der User und Zeitverlust eingeben.");
      setResult(null);
      return;
    }
    if (!users) {
      setError("Bitte Anzahl der User eingeben.");
      setResult(null);
      return;
    }
    if (!timeLoss) {
      setError("Bitte Zeitverlust pro User eingeben.");
      setResult(null);
      return;
    }

    setError(null);

    // Gesamtzeitverlust in Sekunden (pro Jahr)
    const lostSeconds = users * timeLoss * 365;

    // Formatierte Zeit
    const formattedTime = formatTime(lostSeconds);

    // Kosten: verlorene Zeit in Arbeitstage (1 Tag = 8h)
    let cost = 0;
    if (costPerDay && costPerDay > 0) {
      const lostWorkDays = lostSeconds / (60 * 60 * 8);
      cost = lostWorkDays * costPerDay;
    }

    setResult({
      time: formattedTime,
      cost,
    });
  };

  return (
    <div className="container-responsive py-16 space-y-16">
      {/* Header */}
      <header className="space-y-3">
        <h1 className="text-3xl font-semibold">Delete Message Button ‚Äì UX Case</h1>
        <p className="text-muted-foreground">
          Rolle: UX Researcher ¬∑ Beispiel f√ºr Micro-Interaction mit gro√üem Impact.
        </p>
      </header>

      {/* Kontext */}
      <section className="space-y-6">
        <h2 className="text-2xl font-bold">Kontext</h2>
        <p className="text-muted-foreground">
          Nutzer:innen haben aktuell keine M√∂glichkeit, eine begonnene Eingabe
          schnell zu l√∂schen. Stattdessen m√ºssen sie Workarounds finden wie
          Scrollen, Alles markieren, oder m√ºhsames Entfernen. Dieser kleine
          Friktionspunkt summiert sich zu einem massiven Zeitverlust auf
          Millionen von Usern pro Tag.
        </p>
      </section>

      {/* Journey Map */}
      <section className="space-y-6">
        <h2 className="text-2xl font-bold">User Journey</h2>
        <UserJourneyMap />
      </section>

      {/* Insights */}
      <section className="space-y-6">
        <h2 className="text-2xl font-bold">User Insights</h2>
        <div className="grid md:grid-cols-3 gap-6">
          <InsightCard
            title="Hohe Frustration"
            evidence="User berichten: 'Es nervt, alles manuell l√∂schen zu m√ºssen.'"
            implication="Delete-Button reduziert Frust und steigert Zufriedenheit."
          />
          <InsightCard
            title="Zeitverlust"
            evidence="√ò 10 Sekunden pro Fall; hochgerechnet enorm."
            implication="Ein Klick spart Millionen Stunden j√§hrlich."
          />
          <InsightCard
            title="Workarounds belasten"
            evidence="Suchen nach Shortcuts oder Googeln unterbricht Flow."
            implication="Inline-L√∂sungen sind schneller und nahtlos."
          />
        </div>
      </section>

      {/* Impact */}
      <section className="space-y-6">
        <h2 className="text-2xl font-bold">Impact</h2>
        <p className="text-muted-foreground">
          Selbst konservativ gesch√§tzt summiert sich der Zeitverlust auf √ºber{" "}
          <strong>231 Jahre</strong>. Ein einzelner Delete-Button vermeidet
          unn√∂tige Reibung und verbessert die User Experience drastisch.
        </p>

        {/* Interaktiver Rechner */}
        <div className="p-6 border border-border rounded-2xl bg-muted/30 space-y-4">
          <h3 className="font-semibold">Interaktiver Impact-Rechner</h3>
          <div className="grid md:grid-cols-3 gap-4">
            <label className="flex flex-col text-sm">
              Anzahl User pro Tag
              <input
                type="number"
                value={users ?? ""}
                onChange={(e) =>
                  setUsers(e.target.value ? Number(e.target.value) : undefined)
                }
                className="mt-1 p-2 border border-border rounded-md"
                placeholder="z. B. 100"
              />
            </label>
            <label className="flex flex-col text-sm">
              Zeitverlust pro User (Sekunden)
              <input
                type="number"
                value={timeLoss ?? ""}
                onChange={(e) =>
                  setTimeLoss(e.target.value ? Number(e.target.value) : undefined)
                }
                className="mt-1 p-2 border border-border rounded-md"
                placeholder="z. B. 10"
              />
            </label>
            <label className="flex flex-col text-sm">
              Kosten pro Person/Tag (‚Ç¨)
              <input
                type="number"
                value={costPerDay ?? ""}
                onChange={(e) =>
                  setCostPerDay(e.target.value ? Number(e.target.value) : undefined)
                }
                className="mt-1 p-2 border border-border rounded-md"
                placeholder="z. B. 400"
              />
            </label>
          </div>

          <button
            onClick={calculate}
            className="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md shadow"
          >
            Berechnen
          </button>

          {error && <p className="text-red-600 text-sm">{error}</p>}

          {result && !error && (
            <div className="p-4 rounded-lg bg-white dark:bg-neutral-900 border border-border text-center space-y-2">
              <p className="text-xl font-bold">
                Gesch√§tzter Zeitverlust: {result.time} pro Jahr
              </p>
              {result.cost > 0 && (
                <p className="text-sm text-muted-foreground">
                  (‚âà{" "}
                  {result.cost.toLocaleString("de-DE", {
                    style: "currency",
                    currency: "EUR",
                    maximumFractionDigits: 0,
                  })}{" "}
                  j√§hrliche Kosten)
                </p>
              )}
            </div>
          )}
        </div>
      </section>
    </div>
  );
};

export default DeleteCase;


==== \src\pages\projects\SwissLife.tsx ====
import React from "react";
import DoubleDiamond from "@/components/DoubleDiamond";
import { useActivePhase } from "@/hooks/useActivePhase";

// SwissLife-spezifische Bausteine
import Background from "@/components/SwissLife/Background";
import Methods from "@/components/SwissLife/Methods";
import Insights from "@/components/SwissLife/Insights";
import Personas from "@/components/SwissLife/Personas";
import Journey from "@/components/SwissLife/Journey";
import Model from "@/components/SwissLife/Model";
import Impact from "@/components/SwissLife/Impact";

const SwissLife: React.FC = () => {
  // identisch zum Muster in CarInsurance: Hook bestimmt aktive Phase per Scroll
  const activePhase = useActivePhase();

  return (
    <article className="container-responsive py-16 space-y-40">
      {/* Hero */}
      <header className="space-y-6">
        <h1 className="text-4xl font-bold">Swiss Life ‚Äî B2B2C UX Research (Makler:innen)</h1>
        <p className="text-foreground max-w-3xl leading-relaxed">
          Kontextuelle Interviews & Feldbesuche, Synthese mit Clustern (Grounded Theory),
          Priorisierung per Kano ‚Äî als Design-Thinking Use Case entlang des Double Diamond.
        </p>
      </header>

      {/* Kontext & Zielsetzung */}
      <section className="space-y-6" id="context">
        <h2 className="text-2xl font-semibold">Kontext & Zielsetzung</h2>
        <Background />
      </section>

      {/* Vorgehen (Info) */}
      <section className="space-y-6">
        <h2 className="text-2xl font-semibold">Vorgehen im Design-Thinking-Rahmen</h2>
        <p className="text-foreground max-w-3xl leading-relaxed">
          Double Diamond: Problemraum (Discover/Define) ‚Üí L√∂sungsraum (Develop/Deliver).
          So kombinieren wir tiefes Prozessverst√§ndnis mit priorisierten Ma√ünahmen.
        </p>
      </section>

      {/* Sticky DoubleDiamond ‚Äì wie in CarInsurance: KEINE Box / KEIN bg / KEIN border */}
      <div className="hidden md:block sticky top-20 z-40">
        <DoubleDiamond active={activePhase} />
      </div>

      {/* DISCOVER */}
      <section id="discover" className="space-y-10 scroll-mt-28">
        {/* Mobile: schmaler Diamond */}
        <div className="md:hidden mb-6">
          <DoubleDiamond active="discover" />
        </div>
        <h2 className="text-2xl font-semibold">Discover ‚Äî Kontextuelle Interviews & Feldbesuche</h2>
        <Methods />
      </section>

      {/* DEFINE */}
      <section id="define" className="space-y-10 scroll-mt-28">
        <div className="md:hidden mb-6">
          <DoubleDiamond active="define" />
        </div>
        <h2 className="text-2xl font-semibold">Define ‚Äî Synthese & Priorisierung</h2>
        <Insights />
        <Model />
      </section>

      {/* DEVELOP */}
      <section id="develop" className="space-y-10 scroll-mt-28">
        <div className="md:hidden mb-6">
          <DoubleDiamond active="develop" />
        </div>
        <h2 className="text-2xl font-semibold">Develop ‚Äî Artefakte & Modelle</h2>
        <div className="space-y-10">
          <Personas />
          <Journey />
        </div>
      </section>

      {/* DELIVER */}
      <section id="deliver" className="space-y-10 scroll-mt-28">
        <div className="md:hidden mb-6">
          <DoubleDiamond active="deliver" />
        </div>
        <h2 className="text-2xl font-semibold">Deliver ‚Äî Impact & N√§chste Schritte</h2>
        <Impact />
      </section>
    </article>
  );
};

export default SwissLife;


==== \src\pages\projects\UXMethodCards.tsx ====
import React from 'react'

const Page: React.FC = () => (
  <div className="container-responsive py-12 space-y-4">
    <h1 className="text-3xl font-semibold">UX Method Cards</h1>
    <p className="text-muted-foreground">Content coming soon. Replace with real case details (Situation ‚Üí Research ‚Üí Decisions ‚Üí Impact).</p>
  </div>
)
export default Page


==== \src\pages\projects\WinningUXStrategy.tsx ====
import React from 'react'

const Page: React.FC = () => (
  <div className="container-responsive py-12 space-y-4">
    <h1 className="text-3xl font-semibold">A Winning UX Strategy</h1>
    <p className="text-muted-foreground">Content coming soon. Replace with real case details (Situation ‚Üí Research ‚Üí Decisions ‚Üí Impact).</p>
  </div>
)
export default Page


==== \src\pages\projects\ZooplusPricing.tsx ====
import React from "react";
import Background from "@/components/ZooplusPricing/Background";
import Methods from "@/components/ZooplusPricing/Methods";
import Hypotheses from "@/components/ZooplusPricing/Hypotheses";
import DiscussionGuide from "@/components/ZooplusPricing/DiscussionGuide";
import UserJourney_P from "@/components/ZooplusPricing/UserJourney_P";
import VisAWI from "@/components/ZooplusPricing/VisAWI";
import Heatmap from "@/components/ZooplusPricing/Heatmap";
import Findings from "@/components/ZooplusPricing/Findings";
import Impact from "@/components/ZooplusPricing/Impact";
import SectionIcon from "@/components/ZooplusPricing/SectionIcon";

const ZooplusPricing: React.FC = () => {
  return (
    <article className="container-responsive py-16 space-y-20">
      {/* Hero / Intro */}
      <section className="space-y-6">
        <div className="flex items-center gap-3">
          <SectionIcon name="title" />
          <h1 className="text-4xl font-bold">zooplus ‚Äî Pricing Usability Testing</h1>
        </div>
        <p className="text-muted-foreground">
          Rolle: UX Research Lead (2023‚Äì2024) ¬∑ Studientyp:{" "}
          <strong>Summative Usability Evaluation (vergleichend)</strong> mit
          formativen Elementen.
        </p>
        <p className="max-w-3xl text-base text-muted-foreground">
          Vergleichendes Usability Testing mehrerer Preisdarstellungsvarianten
          im Rahmen des Redesigns. Ziel: herausfinden, welche Darstellung
          Nutzer:innen am besten verstehen und der Preislogik am meisten vertrauen.
        </p>
      </section>

      {/* Projekt√ºberblick */}
      <section className="space-y-12">
        <h2 className="flex items-center text-2xl font-semibold">
          <SectionIcon name="context" /> Kontext & Zielsetzung
        </h2>
        <Background />
      </section>

      {/* Vorgehen */}
      <section className="space-y-12">
        <h2 className="flex items-center text-2xl font-semibold">
          <SectionIcon name="methods" /> Vorgehen & Methoden
        </h2>
        <Methods />
        <Hypotheses />

        {/* Diskussionsleitfaden */}
        <div className="space-y-4">
          <h3 className="text-xl font-semibold">Diskussionsleitfaden</h3>
          <DiscussionGuide />
        </div>
      </section>

      {/* Outputs & Artefacts */}
      <section className="space-y-12">
        <h2 className="flex items-center text-2xl font-semibold">
          <SectionIcon name="journey" /> Outputs & Artefacts
        </h2>

        {/* Journey */}
        <div>
          <h3 className="text-xl font-semibold mb-3">User Journey (Pricing Perception)</h3>
          <p className="text-muted-foreground mb-4">
            Darstellung der Wahrnehmung entlang der Journey ‚Äì von der Homepage √ºber
            PLP und PDP bis zum Warenkorb. Zeigt, wo Preise verstanden werden und
            wo Missverst√§ndnisse entstehen.
          </p>
          <UserJourney_P />
        </div>

        {/* VisAWI */}
        <div>
          <h3 className="text-xl font-semibold mb-3">VisAWI Ergebnisse</h3>
          <p className="text-muted-foreground mb-4">
            Neben der funktionalen Pr√ºfung wurde die visuelle Qualit√§t bewertet.
            Dies dient als R√ºckversicherung, dass die getestete Variante auch
            √§sthetisch konsistent und vertrauensw√ºrdig wirkt.
          </p>
          <VisAWI />
        </div>

        {/* Heatmap */}
        <div>
          <h3 className="text-xl font-semibold mb-3">PDP-Heatmap (simuliert)</h3>
          <p className="text-muted-foreground mb-4">
            Die simulierte Heatmap zeigt, welche Bereiche auf der
            Produktdetailseite am st√§rksten fixiert wurden. Ziel war es zu pr√ºfen,
            ob Preiskomponenten (Abo, Promo, durchgestrichene Preise) klar erfasst
            werden oder hinter Produktbildern zur√ºcktreten.
          </p>
          <Heatmap />
        </div>
      </section>

      {/* Insights & Synthese */}
      <section className="space-y-12">
        <h2 className="flex items-center text-2xl font-semibold">
          <SectionIcon name="insights" /> Insights & Synthese
        </h2>
        <Findings />
      </section>

      {/* Impact & N√§chste Schritte */}
      <section className="space-y-12">
        <h2 className="flex items-center text-2xl font-semibold">
          <SectionIcon name="impact" /> Impact & N√§chste Schritte
        </h2>
        <Impact />
      </section>
    </article>
  );
};

export default ZooplusPricing;



==== \src\pages\projects\ZooplusReOps.tsx ====
import React from 'react'
import { useI18n } from '@/i18n'
import imgMatrix from '@/assets/artefacts/zooplus-reops-matrix.png'
import imgDash from '@/assets/artefacts/zooplus-dashboard.png'

const Page: React.FC = () => {
  const { t } = useI18n()
  return (
    <div className="container-responsive py-12 space-y-10">
      <header className="space-y-3">
        <h1 className="text-3xl font-semibold">zooplus ‚Äî ResearchOps Scaling</h1>
        <p className="text-muted-foreground">Rolle: UX Research Lead (2022‚Äì2024).</p>
      </header>

      <section className="space-y-3">
        <h2 className="text-xl font-semibold">Kontext & Herausforderung</h2>
        <p className="text-muted-foreground">20+ parallele Projekte, inkonsistente Methoden, h√∂here Koordinationskosten ‚Äì Bedarf an skalierten ResearchOps.</p>
      </section>

      <section className="space-y-4">
        <h2 className="text-xl font-semibold">Forschungsdesign & Methoden</h2>
        <ul className="grid sm:grid-cols-2 gap-3">
          <li className='card p-4'>Stakeholder-Interviews (n=15)</li>
          <li className='card p-4'>Tool-Benchmarking (Maze, Baymard, Mouseflow)</li>
          <li className='card p-4'>Affinity-Mapping Workshops</li>
          <li className='card p-4'>ResearchOps Maturity Matrix & Governance-Framework</li>
        </ul>
      </section>

      <section className="space-y-6">
        <h2 className="text-xl font-semibold">Artefakte</h2>

<figure className="space-y-2">
  <img src={ imgMatrix } alt={t('captions.reopsMatrix')} className="w-full rounded-2xl border border-border" />
  <figcaption className="text-sm text-muted-foreground">{t('captions.reopsMatrix')}</figcaption>
</figure>


<figure className="space-y-2">
  <img src={ imgDash } alt={t('captions.reopsDashboard')} className="w-full rounded-2xl border border-border" />
  <figcaption className="text-sm text-muted-foreground">{t('captions.reopsDashboard')}</figcaption>
</figure>

      </section>

      <section className="space-y-3">
        <h2 className="text-xl font-semibold">Synthese & Entscheidungen</h2>
        <ul className="list-disc pl-6 space-y-1 text-muted-foreground">
          <li>‚Ä¢ Einf√ºhrung eines ReOps-Governance-Frameworks (6 Wirkungsbereiche)</li>
<li>‚Ä¢ Template-Library & Trainings zur Demokratisierung von Research</li>
<li>‚Ä¢ Definition von SLA/Intake-Prozessen f√ºr Priorisierung</li>
        </ul>
      </section>

      <section className="space-y-3">
        <h2 className="text-xl font-semibold">Impact</h2>
        <ul className="list-disc pl-6 space-y-1 text-muted-foreground">
          <li>‚Ä¢ +40 % Nutzung der Templates</li>
<li>‚Ä¢ 25 % schnellere Insight-Zyklen</li>
<li>‚Ä¢ H√∂here Konsistenz & Qualit√§t der Studien</li>
        </ul>
      </section>
    </div>
  )
}

export default Page


==== \src\pages\About.tsx ====
import React from "react";
import { useI18n } from "@/i18n";

const About: React.FC = () => {
  const { t } = useI18n();

  return (
    <main className="min-h-screen bg-background text-foreground">
      {/* Header */}
      <section className="container-responsive py-14 md:py-20 border-b border-border">
        <h1 className="text-4xl md:text-5xl font-extrabold leading-tight tracking-tight">
          {t("about.title")}
        </h1>
        <p className="mt-3 text-muted-foreground max-w-3xl">{t("about.lead")}</p>
      </section>

      {/* Kacheln */}
      <section className="container-responsive py-12 grid gap-6 md:grid-cols-3">
        {/* Career Interests */}
        <div className="rounded-2xl border border-border p-6">
          <h2 className="text-lg font-semibold">Career Interests</h2>
          <p className="mt-3 text-sm text-muted-foreground leading-relaxed">
            I am passionate about scaling ResearchOps, advancing UX maturity in
            organizations, and integrating user-centered decision making at
            strategic levels. My interests include leadership in research,
            triangulation of methods, and sustainable product development.
          </p>
        </div>

        {/* Background */}
        <div className="rounded-2xl border border-border p-6">
          <h2 className="text-lg font-semibold">Background</h2>
          <p className="mt-3 text-sm text-muted-foreground leading-relaxed">
            I hold a Master‚Äôs degree in Economics from the University of Augsburg.
            Over the past decade, I have worked across industries including
            e-commerce, insurance, and finance, driving research strategies,
            leading teams, and building organizational capabilities in UX
            Research.
          </p>
        </div>

        {/* Personal Note */}
        <div className="rounded-2xl border border-border p-6">
          <h2 className="text-lg font-semibold">Personal Note</h2>
          <p className="mt-3 text-sm text-muted-foreground leading-relaxed">
            I see research as both <strong>craft and strategy</strong>: it is
            repeatable, improvable, and essential for enabling confident,
            user-centered product decisions.
          </p>
        </div>
      </section>
    </main>
  );
};

export default About;


==== \src\pages\Contact.tsx ====
import React from 'react'

const Contact: React.FC = () => (
  <div className="container-responsive py-12 space-y-6">
    <h1 className="text-3xl font-semibold">Contact</h1>
    <p className="text-muted-foreground">Happy to connect. Reach out via email or LinkedIn.</p>
    <div className="flex gap-3">
      <a className="btn" href="mailto:felix.bruckmeier@gmail.com">Email</a>
      <a className="btn btn-secondary" href="https://www.linkedin.com/in/felix-bruckmeier" target="_blank" rel="noreferrer">LinkedIn</a>
    </div>
  </div>
)
export default Contact


==== \src\pages\Craft.tsx ====
import React from 'react'

const Page: React.FC = () => (
  <div className="container-responsive py-12 space-y-4">
    <h1 className="text-3xl font-semibold">Craft & Research</h1>
    <p className="text-muted-foreground">Content coming soon. Replace with real case details (Situation ‚Üí Research ‚Üí Decisions ‚Üí Impact).</p>
  </div>
)
export default Page


==== \src\pages\CV.tsx ====
export default function CV() {
  return (
    <main className="min-h-screen bg-background text-foreground">
      {/* Header */}
      <section className="container-responsive py-14 md:py-20 border-b border-border">
        <h1 className="text-4xl md:text-5xl font-extrabold leading-tight tracking-tight">
          Curriculum Vitae
        </h1>
        <p className="mt-3 text-muted-foreground max-w-3xl">
          UX Research Leadership ¬∑ Strategy ¬∑ ResearchOps ¬∑ Impact Measurement
        </p>
      </section>

      {/* Content Grid */}
      <section className="container-responsive py-12 grid gap-12 md:grid-cols-[0.8fr_1.2fr]">
        {/* Sidebar */}
        <aside className="space-y-10">
          {/* Strengths */}
          <div>
            <h2 className="text-xl font-bold">Strengths & Focus</h2>
            <ul className="mt-3 space-y-2 text-muted-foreground text-sm">
              <li>Approach: Asking the right questions, clarity in research</li>
              <li>Expertise: Mixed-methods, strategy alignment, ResearchOps</li>
              <li>Engagement: Empowering teams, stakeholder collaboration</li>
            </ul>
          </div>

          {/* Tools */}
          <div>
            <h2 className="text-xl font-bold">Tools</h2>
            <ul className="mt-3 space-y-2 text-muted-foreground text-sm">
              <li>Testing: Maze, Lookback, UserZoom</li>
              <li>Design & Collaboration: Figma, Miro, Jira, Confluence</li>
              <li>Survey & Quant: Qualtrics, Alchemer, Excel, R, SPSS</li>
            </ul>
          </div>

          {/* Education */}
          <div>
            <h2 className="text-xl font-bold">Education</h2>
            <ul className="mt-3 space-y-2 text-muted-foreground text-sm">
              <li>
                <strong>Master of Science in Economics</strong>  
                University of Regensburg, 2014
              </li>
              <li>
                <strong>Bachelor of Science in Economics</strong>  
                University of Regensburg, 2012
              </li>
            </ul>
          </div>

          {/* Supported by */}
          <div>
            <h2 className="text-xl font-bold">Supported by</h2>
            <ul className="mt-3 space-y-2 text-muted-foreground text-sm">
              <li>ResearchOps Community</li>
              <li>Experience Leadership Club</li>
            </ul>
          </div>
        </aside>

        {/* Experience */}
        <div className="space-y-12">
          <div>
            <h2 className="text-xl font-bold">Professional Experience</h2>
          </div>

          {/* ATOSS */}
          <div>
            <h3 className="font-semibold">
              Lead UX Research (Freelance) ‚Äî ATOSS ¬∑ Jan 2025 ‚Äì May 2025
            </h3>
            <ul className="mt-2 text-sm text-muted-foreground space-y-1">
              <li>Established research strategy and ResearchOps practices</li>
              <li>Ran discovery and usability studies across enterprise software</li>
              <li>Collaborated with product and design leadership on UX maturity</li>
            </ul>
          </div>

          {/* zooplus */}
          <div>
            <h3 className="font-semibold">
              Lead UX Research ‚Äî zooplus ¬∑ Jul 2022 ‚Äì Dec 2024
            </h3>
            <ul className="mt-2 text-sm text-muted-foreground space-y-1">
              <li>Built and scaled ResearchOps framework and governance</li>
              <li>Conducted mixed-methods studies (conjoint, MaxDiff, usability)</li>
              <li>Led Communities of Practice and mentored junior researchers</li>
              <li>Aligned research roadmap with OKRs and product vision</li>
            </ul>
          </div>

          {/* Swiss Life */}
          <div>
            <h3 className="font-semibold">
              Senior UX Researcher ‚Äî Swiss Life ¬∑ May 2020 ‚Äì Jun 2022
            </h3>
            <ul className="mt-2 text-sm text-muted-foreground space-y-1">
              <li>Planned and executed strategic research in B2B2C domain</li>
              <li>Delivered insights to de-risk product decisions</li>
              <li>Embedded user voice into strategy through qualitative & quantitative methods</li>
            </ul>
          </div>

          {/* Kaiser X Labs */}
          <div>
            <h3 className="font-semibold">
              UX Researcher ‚Äî Kaiser X Labs (Allianz) ¬∑ Aug 2018 ‚Äì Apr 2020
            </h3>
            <ul className="mt-2 text-sm text-muted-foreground space-y-1">
              <li>Supported product teams with discovery and evaluative research</li>
              <li>Applied Design Thinking methods in innovation context</li>
              <li>Ran usability testing and interviews with cross-national participants</li>
            </ul>
          </div>

          {/* empiriecom */}
          <div>
            <h3 className="font-semibold">
              UX Researcher ‚Äî empiriecom (BAUR/OTTO Group) ¬∑ Feb 2016 ‚Äì Jul 2018
            </h3>
            <ul className="mt-2 text-sm text-muted-foreground space-y-1">
              <li>Delivered UX insights for e-commerce platforms</li>
              <li>Developed survey designs, user interviews, and analytics reports</li>
              <li>Collaborated with designers and PMs on product improvements</li>
            </ul>
          </div>
        </div>
      </section>
    </main>
  );
}


==== \src\pages\Expertise.tsx ====
import React from 'react'
import { Link } from 'react-router-dom'
import { useI18n } from '@/i18n'

const tiles = [
  { to: '/expertise/ux-strategy', title: 'UX Strategy', desc: 'Double Diamond, prioritization & decision systems' },
  { to: '/expertise/researchops', title: 'ResearchOps', desc: 'Maturity, governance, tooling, enablement' },
  { to: '/expertise/impact-measurement', title: 'Impact Measurement', desc: 'CLTV & churn models, HEART' },
  { to: '/expertise/team-leadership', title: 'Team Leadership', desc: 'Role clarity, mentoring, communities' },
  { to: '/expertise/strategic-ux-research', title: 'Strategic UX Research', desc: 'OKRs, strategic studies, RITE' },
]

const Expertise: React.FC = () => {
  const { t } = useI18n()
  return (
    <div className="container-responsive py-12">
      <h1 className="text-3xl font-semibold mb-6">{t('expertise.title')}</h1>
      <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
        {tiles.map(tile => (
          <Link key={tile.to} to={tile.to} className="card p-5 hover:shadow-lg transition-shadow">
            <h3 className="text-lg font-semibold">{tile.title}</h3>
            <p className="text-sm text-muted-foreground mt-1">{tile.desc}</p>
          </Link>
        ))}
      </div>
    </div>
  )
}
export default Expertise


==== \src\pages\Home.tsx ====
import { useEffect, useRef, useState } from "react";
import { useTranslation } from "react-i18next";
import { Link } from "react-router-dom";
import HouseDiagram from "@/components/HouseDiagram";
import CVPreview from "@/components/CVPreview";
import profileImg from "@/assets/profile-felix.png";
import calendarImg from "@/assets/calendar-discovery.png";

function AboutSection() {
  const boxesRef = useRef<(HTMLDivElement | null)[]>([]);
  const leftRef = useRef<HTMLDivElement | null>(null);

  const [activeIndex, setActiveIndex] = useState<number | null>(null);
  const [offsetY, setOffsetY] = useState(0);
  const [isDesktop, setIsDesktop] = useState(false);

  // check viewport size (>= md breakpoint = 768px)
  useEffect(() => {
    const checkSize = () => setIsDesktop(window.innerWidth >= 768);
    checkSize();
    window.addEventListener("resize", checkSize);
    return () => window.removeEventListener("resize", checkSize);
  }, []);

  useEffect(() => {
    if (!isDesktop) return; // disable scroll effect on mobile

    const handleScroll = () => {
      const viewportCenter = window.innerHeight / 2;
      let closestIndex: number | null = null;
      let closestDistance = Infinity;

      boxesRef.current.forEach((box, index) => {
        if (!box) return;
        const rect = box.getBoundingClientRect();
        const boxCenter = rect.top + rect.height / 2;
        const distance = Math.abs(viewportCenter - boxCenter);
        if (distance < closestDistance) {
          closestDistance = distance;
          closestIndex = index;
        }
      });

      setActiveIndex(closestIndex);

      if (closestIndex !== null) {
        const targetEl = boxesRef.current[closestIndex];
        const parentEl = targetEl?.parentElement;
        if (targetEl && parentEl) {
          const rect = targetEl.getBoundingClientRect();
          const parentRect = parentEl.getBoundingClientRect();
          setOffsetY(rect.top - parentRect.top);
        }
      }
    };

    window.addEventListener("scroll", handleScroll, { passive: true });
    window.addEventListener("resize", handleScroll);
    handleScroll();
    return () => {
      window.removeEventListener("scroll", handleScroll);
      window.removeEventListener("resize", handleScroll);
    };
  }, [isDesktop]);

  return (
    <section id="about" className="scroll-mt-24 border-t border-border">
      <div className="container-responsive py-12 grid md:grid-cols-[1fr_1fr] gap-12 items-start">
        {/* Left: About Me */}
        <div
          ref={leftRef}
          className="transition-transform duration-500 ease-out"
          style={{ transform: isDesktop ? `translateY(${offsetY}px)` : "none" }}
        >
          <h2 className="text-2xl font-bold">About Me</h2>
          <p className="mt-4 max-w-lg text-muted-foreground leading-relaxed">
            I am a UX Research Leader with a background in econometrics and
            product development. My work bridges qualitative depth and
            quantitative rigor, with a focus on ResearchOps, strategy alignment,
            and measurable impact.
          </p>
        </div>

        {/* Right: Boxes */}
        <div className="space-y-8">
          {[
            {
              title: "Career Interests",
              text: "Scaling ResearchOps, advancing UX maturity, integrating user-centered decision making.",
            },
            {
              title: "Background",
              text: "Master‚Äôs degree in Economics from Augsburg, 10+ years of experience in UX Research across industries.",
            },
            {
              title: "Personal Note",
              text: "I see research as both craft and strategy: repeatable, improvable, and essential for confident decisions.",
            },
          ].map((item, i) => (
            <div
              key={i}
              ref={(el) => (boxesRef.current[i] = el)}
              className={`rounded-2xl border border-border p-6 transition-colors duration-300 ${
                activeIndex === i && isDesktop ? "bg-muted/30" : "bg-background"
              }`}
            >
              <h3 className="text-lg font-semibold">{item.title}</h3>
              <p className="mt-2 text-sm text-muted-foreground">{item.text}</p>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}

export default function Home() {
  const { t } = useTranslation();

  useEffect(() => {
    const scrollToHash = () => {
      if (location.hash) {
        const id = location.hash.replace("#", "");
        const el = document.getElementById(id);
        if (el) el.scrollIntoView({ behavior: "smooth", block: "start" });
      }
    };
    scrollToHash();
    window.addEventListener("hashchange", scrollToHash);
    return () => window.removeEventListener("hashchange", scrollToHash);
  }, []);

  return (
    <main className="min-h-screen bg-background text-foreground">
      {/* hero */}
      <section
        id="header"
        className="scroll-mt-24 container-responsive py-14 md:py-20 grid gap-10 md:grid-cols-[1.1fr_0.9fr] items-center"
      >
        <div>
          <h1 className="text-4xl md:text-5xl font-extrabold leading-tight tracking-tight">
            Felix Bruckmeier
          </h1>
          <p className="mt-3 text-base md:text-lg opacity-90">{t("hero.claim")}</p>
          <p className="mt-6 text-muted-foreground max-w-2xl">{t("hero.intro")}</p>
        </div>
        <div className="flex justify-center md:justify-end">
          <img
            src={profileImg}
            alt="Portrait of Felix Bruckmeier"
            className="w-full max-w-sm rounded-3xl border border-border shadow-lg object-cover"
          />
        </div>
      </section>

      {/* about */}
      <AboutSection />

      {/* expertise */}
      <section id="expertise" className="scroll-mt-24 border-t border-border">
        <div className="container-responsive py-12">
          <h2 className="text-2xl font-bold">{t("expertise.title")}</h2>
          <HouseDiagram />
        </div>
      </section>

      {/* CV timeline */}
      <CVPreview />

      {/* projects */}
      <section id="projects" className="scroll-mt-24 border-t border-border">
        <div className="container-responsive py-12">
          <h2 className="text-2xl font-bold">{t("projects.title")}</h2>
          <div className="mt-6 grid gap-6 md:grid-cols-2">
            <Link
              to="/projects/car-insurance"
              className="rounded-2xl border border-border p-5 hover:bg-muted/40 transition block"
            >
              <div className="font-semibold">{t("projects.adac")}</div>
              <p className="mt-2 text-sm text-muted-foreground">
                Reduced friction and improved conversion.
              </p>
            </Link>
            <Link
              to="/projects/zooplus-reops"
              className="rounded-2xl border border-border p-5 hover:bg-muted/40 transition block"
            >
              <div className="font-semibold">{t("projects.reops")}</div>
              <p className="mt-2 text-sm text-muted-foreground">
                Governance, templates & enablement at scale.
              </p>
            </Link>
            <Link
              to="/projects/swiss-life-b2b2c"
              className="rounded-2xl border border-border p-5 hover:bg-muted/40 transition block"
            >
              <div className="font-semibold">{t("projects.sl")}</div>
              <p className="mt-2 text-sm text-muted-foreground">
                Qual & quant insights aligned to business goals.
              </p>
            </Link>
            <Link
              to="/projects/zooplus-pricing"
              className="rounded-2xl border border-border p-5 hover:bg-muted/40 transition block"
            >
              <div className="font-semibold">{t("projects.pricing")}</div>
              <p className="mt-2 text-sm text-muted-foreground">
                Clarity in pricing components and PDP details.
              </p>
            </Link>
            {/* üëá Neu: Delete Case */}
            <Link
              to="/projects/delete-case"
              className="rounded-2xl border border-border p-5 hover:bg-muted/40 transition block"
            >
              <div className="font-semibold">{t("projects.deleteCase")}</div>
              <p className="mt-2 text-sm text-muted-foreground">
                A micro-interaction that saves 231 years of lost user time.
              </p>
            </Link>
          </div>
        </div>
      </section>

      {/* craft */}
      <section id="craft" className="scroll-mt-24 border-t border-border">
        <div className="container-responsive py-12">
          <h2 className="text-2xl font-bold">Craft</h2>
          <p className="mt-2 max-w-3xl text-muted-foreground">
            Research as craft: repeatable, improvable practice with strong quality standards.
          </p>
        </div>
      </section>

      {/* contact */}
      <section id="contact" className="scroll-mt-24 border-t border-border">
        <div className="container-responsive py-12">
          <h2 className="text-2xl font-bold">Contact</h2>
          <p className="mt-2 text-muted-foreground max-w-3xl">{t("contact.cta")}</p>
          <div className="mt-6">
            <a
              href="https://calendar.google.com/calendar/u/0/appointments/schedules/AcZssZ0oPGXHnWXdq3-zK6GQhHm2ESA4SVlsx5ziYevEBxKE7MXlGBWgUN9yuCUp9TsirOrT9kR459cC"
              target="_blank"
              rel="noopener"
              className="block rounded-2xl overflow-hidden border border-border hover:shadow-lg transition"
            >
              <img
                src={calendarImg}
                alt="Schedule a Discovery Call"
                className="w-full h-auto"
              />
            </a>
          </div>
        </div>
      </section>
    </main>
  );
}


==== \src\pages\Imprint.tsx ====
import React from 'react'

const Page: React.FC = () => (
  <div className="container-responsive py-12 space-y-4">
    <h1 className="text-3xl font-semibold">Imprint</h1>
    <p className="text-muted-foreground">Content coming soon. Replace with real case details (Situation ‚Üí Research ‚Üí Decisions ‚Üí Impact).</p>
  </div>
)
export default Page


==== \src\pages\NotFound.tsx ====
export default function NotFound() {
  return (
    <main className="min-h-[60vh] grid place-items-center px-6">
      <div className="text-center">
        <h1 className="text-3xl font-bold">404 ‚Äî Not Found</h1>
        <p className="mt-2 text-muted-foreground">
          Sorry, die Seite gibt‚Äôs nicht. Zur√ºck zur Startseite?
        </p>
        <a
          href="/"
          className="btn mt-4 inline-flex"
        >
          Home
        </a>
      </div>
    </main>
  );
}


==== \src\pages\Privacy.tsx ====
import React from 'react'

const Page: React.FC = () => (
  <div className="container-responsive py-12 space-y-4">
    <h1 className="text-3xl font-semibold">Privacy</h1>
    <p className="text-muted-foreground">Content coming soon. Replace with real case details (Situation ‚Üí Research ‚Üí Decisions ‚Üí Impact).</p>
  </div>
)
export default Page


==== \src\pages\Projects - Kopie.tsx ====
import React from 'react'
import { Link } from 'react-router-dom'

const Projects: React.FC = () => {
  const cards = [
    { to: '/projects/adac', title: 'ADAC ‚Äî Car Insurance Quote Flow', desc: 'Pricing-Komponente, Heatmaps, Conversion +12%' },
    { to: '/projects/zooplus-reops', title: 'zooplus ‚Äî ResearchOps Scaling', desc: 'Governance, Templates, +25% schnellere Insights' },
    { to: '/projects/swiss-life', title: 'Swiss Life ‚Äî B2B2C UX Research', desc: 'Journey Mapping, Conjoint, -30% Entscheidungszeit' },
    { to: '/projects/zooplus-pricing', title: 'zooplus ‚Äî Pricing Usability', desc: 'MaxDiff, Eye-Tracking, SUS +15%' },
  ]

  return (
    <div className="container-responsive py-12">
      <header className="mb-6">
        <h1 className="text-3xl font-semibold">Projects</h1>
        <p className="text-muted-foreground">Ausgew√§hlte Case Studies mit Kontext ‚Üí Vorgehen ‚Üí Impact.</p>
      </header>

      <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
        {cards.map(card => (
          <Link key={card.to} to={card.to} className="card p-5 hover:shadow-lg transition-shadow">
            <h3 className="text-lg font-semibold">{card.title}</h3>
            <p className="text-sm text-muted-foreground mt-1">{card.desc}</p>
          </Link>
        ))}
      </div>
    </div>
  )
}

export default Projects


==== \src\pages\Projects.tsx ====
import React from 'react'
import { Link } from 'react-router-dom'

const Projects: React.FC = () => {
  const cards = [
    { to: '/projects/adac', title: 'ADAC ‚Äî Car Insurance Quote Flow', desc: 'Pricing-Komponente, Heatmaps, Conversion +12%' },
    { to: '/projects/zooplus-reops', title: 'zooplus ‚Äî ResearchOps Scaling', desc: 'Governance, Templates, +25% schnellere Insights' },
    { to: '/projects/swiss-life', title: 'Swiss Life ‚Äî B2B2C UX Research', desc: 'Journey Mapping, Conjoint, -30% Entscheidungszeit' },
    { to: '/projects/zooplus-pricing', title: 'zooplus ‚Äî Pricing Usability', desc: 'MaxDiff, Eye-Tracking, SUS +15%' },
  ]

  return (
    <div className="container-responsive py-12">
      <header className="mb-6">
        <h1 className="text-3xl font-semibold">Projects</h1>
        <p className="text-muted-foreground">Ausgew√§hlte Case Studies mit Kontext ‚Üí Vorgehen ‚Üí Impact.</p>
      </header>

      <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
        {cards.map(card => (
          <Link key={card.to} to={card.to} className="card p-5 hover:shadow-lg transition-shadow">
            <h3 className="text-lg font-semibold">{card.title}</h3>
            <p className="text-sm text-muted-foreground mt-1">{card.desc}</p>
          </Link>
        ))}
      </div>
    </div>
  )
}

export default Projects


==== \src\App.tsx ====
import { Routes, Route, Navigate } from "react-router-dom";
import AppLayout from "@/AppLayout";
import Home from "@/pages/Home";
import CV from "@/pages/CV";

// Projektseiten
import CarInsurance from "@/pages/projects/CarInsurance";
import SwissLife from "@/pages/projects/SwissLife";
import ZooplusReOps from "@/pages/projects/ZooplusReOps";
import ZooplusPricing from "@/pages/projects/ZooplusPricing";
import UXMethodCards from "@/pages/projects/UXMethodCards";
import WinningUXStrategy from "@/pages/projects/WinningUXStrategy";
import DeleteCase from "@/pages/projects/DeleteCase"; // üëà neu

// Expertise-Seiten
import UXStrategy from "@/pages/expertise/UXStrategy";
import StrategicUXResearch from "@/pages/expertise/StrategicUXResearch";
import ResearchOps from "@/pages/expertise/ResearchOps";
import TeamLeadership from "@/pages/expertise/TeamLeadership";
import ImpactMeasurement from "@/pages/expertise/ImpactMeasurement";

export default function App() {
  return (
    <Routes>
      <Route path="/" element={<AppLayout />}>
        <Route index element={<Home />} />
        <Route path="cv" element={<CV />} />

        {/* Projekt-Routen */}
        <Route path="projects/car-insurance" element={<CarInsurance />} />
        <Route path="projects/swiss-life-b2b2c" element={<SwissLife />} />
        <Route path="projects/zooplus-reops" element={<ZooplusReOps />} />
        <Route path="projects/zooplus-pricing" element={<ZooplusPricing />} />
        <Route path="projects/ux-method-cards" element={<UXMethodCards />} />
        <Route path="projects/winning-ux-strategy" element={<WinningUXStrategy />} />
        <Route path="projects/delete-case" element={<DeleteCase />} /> {/* üëà neu */}

        {/* Expertise-Routen */}
        <Route path="expertise/ux-strategy" element={<UXStrategy />} />
        <Route path="expertise/strategic-ux-research" element={<StrategicUXResearch />} />
        <Route path="expertise/researchops" element={<ResearchOps />} />
        <Route path="expertise/team-leadership" element={<TeamLeadership />} />
        <Route path="expertise/impact-measurement" element={<ImpactMeasurement />} />

        {/* Fallback */}
        <Route path="*" element={<Navigate to="/" replace />} />
      </Route>
    </Routes>
  );
}


==== \src\AppLayout.tsx ====
import { Outlet } from "react-router-dom";
import NavBar from "@/components/Navbar";
import Footer from "@/components/Footer";

export default function AppLayout() {
  return (
    <div className="min-h-screen bg-background text-foreground flex flex-col">
      <NavBar />
      <main className="flex-1">
        <Outlet />
      </main>
      <Footer />
    </div>
  );
}


==== \src\i18n.ts ====
// src/i18n.ts
import i18n from "i18next";
import { initReactI18next, useTranslation } from "react-i18next";
import de from "@/locales/de.json";
import en from "@/locales/en.json";

if (!i18n.isInitialized) {
  void i18n.use(initReactI18next).init({
    resources: { de: { translation: de }, en: { translation: en } },
    lng: "en",
    fallbackLng: "en",
    interpolation: { escapeValue: false },
  });
}

export type Lang = "de" | "en";
export const useI18n = () => {
  const { t, i18n } = useTranslation();
  const lang: Lang = i18n.language?.startsWith("de") ? "de" : "en";
  const setLang = (l: Lang) => i18n.changeLanguage(l);
  return { t, i18n, lang, setLang };
};

export default i18n;


==== \src\index.css ====
@import "tailwindcss";

/* Tailwind v4: eigene Tokens.
   WICHTIG: Breakpoints wieder definieren, sonst sind sm:, md:, ... "unbekannt". */
@theme {
  /* Breakpoints (Default-Werte) */
  --breakpoint-sm: 40rem;   /* 640px  */
  --breakpoint-md: 48rem;   /* 768px  */
  --breakpoint-lg: 64rem;   /* 1024px */
  --breakpoint-xl: 80rem;   /* 1280px */
  --breakpoint-2xl: 96rem;  /* 1536px */

  /* Light-Theme Farben */
  --color-background: #ffffff;
  --color-foreground: #0a0a0a;
  --color-border: oklch(0.86 0 0 / 1);
  --color-muted: oklch(0.96 0 0 / 1);
  --color-muted-foreground: oklch(0.45 0 0 / 1);
}

/* Dark-Overrides (hellerer Kontrast) */
.dark {
  --color-background: #0b0b0b;
  --color-foreground: #f8f8f8;                /* heller */
  --color-border: oklch(0.32 0 0 / 1);
  --color-muted: oklch(0.18 0 0 / 1);         /* etwas dunkleres Card-Grau */
  --color-muted-foreground: oklch(0.88 0 0);  /* deutlich heller f√ºr Flie√ütexte */
}

/* Global */
:root { color-scheme: light dark; }
html { scroll-behavior: smooth; }

/* Mini-Designsystem: wiederverwendete Utilities/Components */
@layer components {
  .container-responsive {
    @apply mx-auto max-w-6xl px-4 sm:px-6 lg:px-8;
  }
  .card {
    @apply rounded-2xl border border-border bg-white dark:bg-neutral-950;
  }
  .btn {
    @apply inline-flex items-center rounded-2xl px-4 py-2 text-sm font-semibold border border-border;
  }
  .btn-secondary {
    @apply inline-flex items-center rounded-2xl px-4 py-2 text-sm font-semibold border border-border bg-muted text-foreground;
  }
}


==== \src\main.tsx ====
import React from "react";
import ReactDOM from "react-dom/client";
import { StrictMode } from "react";
import { BrowserRouter } from "react-router-dom";
import App from "@/App";
import "@/i18n";
import "./index.css";

/* GitHub Pages 404 Redirect ‚Üí urspr√ºnglichen Pfad wiederherstellen */
const redirect = sessionStorage.getItem("redirect");
if (redirect) {
  sessionStorage.removeItem("redirect");
  // Wichtig: vor dem ersten Render, damit BrowserRouter direkt die richtige URL nimmt
  const url = new URL(redirect, window.location.origin);
  window.history.replaceState(null, "", url.pathname + url.search);
}

ReactDOM.createRoot(document.getElementById("root")!).render(
  <StrictMode>
    <BrowserRouter>
      <App />
    </BrowserRouter>
  </StrictMode>
);


==== \src\vite-env.d.ts ====
declare module "*.png" {
  const value: string;
  export default value;
}
declare module "*.svg" {
  const value: string;
  export default value;
}


==== \index.html ====
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <!-- Theme bootstrapping: setzt .dark auf <html>, bevor CSS rendert -->
    <script>
      (() => {
        try {
          const stored = localStorage.getItem('theme');
          const prefers = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
          const theme = stored ?? (prefers ? 'dark' : 'light');
          const root = document.documentElement;
          if (theme === 'dark') { root.classList.add('dark'); root.style.colorScheme = 'dark'; }
          else { root.classList.remove('dark'); root.style.colorScheme = 'light'; }
        } catch {}
      })();
    </script>
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Felix Bruckmeier ‚Äì UX Research</title>
  </head>
  <!-- WICHTIG: Tokens statt feste Farben -->
  <body class="min-h-screen bg-background text-foreground">
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>


==== \package-lock.json ====
{
  "name": "uxr-portfolio-felix",
  "version": "1.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "uxr-portfolio-felix",
      "version": "1.0.0",
      "dependencies": {
        "framer-motion": "^12.23.18",
        "i18next": "^23.16.8",
        "lucide-react": "^0.544.0",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "react-i18next": "^13.5.0",
        "react-router-dom": "^6.26.0",
        "recharts": "^3.2.1"
      },
      "devDependencies": {
        "@tailwindcss/postcss": "^4.0.0",
        "@types/node": "^24.5.2",
        "@types/react": "^18.2.66",
        "@types/react-dom": "^18.2.22",
        "@vitejs/plugin-react": "^4.3.4",
        "autoprefixer": "^10.4.20",
        "postcss": "^8.4.47",
        "tailwindcss": "^4.0.0",
        "typescript": "^5.4.0",
        "vite": "^5.4.19"
      }
    },
    "node_modules/@alloc/quick-lru": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.27.1",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.1.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.0.tgz",
      "integrity": "sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.28.3.tgz",
      "integrity": "sha512-yDBHV9kQNcr2/sUr9jghVyz9C3Y5G2zUM2H2lo+9mKv4sFgbA8s8Z9t8D1jiTkGoO/NoIfKMyKWr4s6CN23ZwQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@ampproject/remapping": "^2.2.0",
        "@babel/code-frame": "^7.27.1",
        "@babel/generator": "^7.28.3",
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-module-transforms": "^7.28.3",
        "@babel/helpers": "^7.28.3",
        "@babel/parser": "^7.28.3",
        "@babel/template": "^7.27.2",
        "@babel/traverse": "^7.28.3",
        "@babel/types": "^7.28.2",
        "convert-source-map": "^2.0.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.28.3.tgz",
      "integrity": "sha512-3lSpxGgvnmZznmBkCRnVREPUFJv2wrv9iAoFDvADJc0ypmdOxdUtcLeBgBJ6zE0PMeTKnxeQzyk0xTBq4Ep7zw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.28.3",
        "@babel/types": "^7.28.2",
        "@jridgewell/gen-mapping": "^0.3.12",
        "@jridgewell/trace-mapping": "^0.3.28",
        "jsesc": "^3.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.27.2",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz",
      "integrity": "sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.27.2",
        "@babel/helper-validator-option": "^7.27.1",
        "browserslist": "^4.24.0",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-globals": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz",
      "integrity": "sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz",
      "integrity": "sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.27.1",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.28.3.tgz",
      "integrity": "sha512-gytXUbs8k2sXS9PnQptz5o0QnpLL51SwASIORY6XaBKF88nsOT0Zw9szLqlSGQDP/4TljBAD5y98p2U1fqkdsw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-imports": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1",
        "@babel/traverse": "^7.28.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz",
      "integrity": "sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz",
      "integrity": "sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.28.3.tgz",
      "integrity": "sha512-PTNtvUQihsAsDHMOP5pfobP8C6CM4JWXmP8DrEIt46c3r2bf87Ua1zoqevsMo9g+tWDwgWrFP5EIxuBx5RudAw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/template": "^7.27.2",
        "@babel/types": "^7.28.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.28.3.tgz",
      "integrity": "sha512-7+Ey1mAgYqFAx2h0RuoxcQT5+MlG3GTV0TQrgr7/ZliKsm/MNDxVVutlWaziMq7wJNAz8MTqz55XLpWvva6StA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.28.2"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-self": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.27.1.tgz",
      "integrity": "sha512-6UzkCs+ejGdZ5mFFC/OCUrv028ab2fp1znZmCZjAOBKiBK2jXD1O+BPSfX8X2qjJ75fZBMSnQn3Rq2mrBJK2mw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-source": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.27.1.tgz",
      "integrity": "sha512-zbwoTsBruTeKB9hSq73ha66iFeJHuaFkUbwvqElnygoNbj/jHRsSeokowZFN3CZ64IvEqcmmkVe89OPXc7ldAw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.28.3.tgz",
      "integrity": "sha512-9uIQ10o0WGdpP6GDhXcdOJPJuDgFtIDtN/9+ArJQ2NAfAmiuhTQdzkaTGR33v43GYS2UrSA0eX2pPPHoFVvpxA==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.27.2",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
      "integrity": "sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/parser": "^7.27.2",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.3.tgz",
      "integrity": "sha512-7w4kZYHneL3A6NP2nxzHvT3HCZ7puDZZjFMqDpBPECub79sTtSO5CGXDkKrTQq8ksAwfD/XI2MRFX23njdDaIQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/generator": "^7.28.3",
        "@babel/helper-globals": "^7.28.0",
        "@babel/parser": "^7.28.3",
        "@babel/template": "^7.27.2",
        "@babel/types": "^7.28.2",
        "debug": "^4.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.28.2",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.28.2.tgz",
      "integrity": "sha512-ruv7Ae4J5dUYULmeXw1gmb7rYRz57OWCPM57pHojnLq/3Z1CK2lNSLTCVjxVk1F/TZHwOZZrOWi0ur95BbLxNQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-string-parser": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz",
      "integrity": "sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz",
      "integrity": "sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz",
      "integrity": "sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz",
      "integrity": "sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz",
      "integrity": "sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz",
      "integrity": "sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz",
      "integrity": "sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz",
      "integrity": "sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz",
      "integrity": "sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz",
      "integrity": "sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz",
      "integrity": "sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz",
      "integrity": "sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz",
      "integrity": "sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz",
      "integrity": "sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz",
      "integrity": "sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz",
      "integrity": "sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz",
      "integrity": "sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz",
      "integrity": "sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz",
      "integrity": "sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz",
      "integrity": "sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz",
      "integrity": "sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz",
      "integrity": "sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz",
      "integrity": "sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@isaacs/fs-minipass": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@isaacs/fs-minipass/-/fs-minipass-4.0.1.tgz",
      "integrity": "sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "minipass": "^7.0.4"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.13",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.13.tgz",
      "integrity": "sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.0",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/remapping": {
      "version": "2.3.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/remapping/-/remapping-2.3.5.tgz",
      "integrity": "sha512-LI9u/+laYG4Ds1TDKSJW2YPrIlcVYOwi2fUC6xB43lueCjgxV4lffOCZCtYFiH6TNOX+tQKXx97T4IKHbhyHEQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.5.tgz",
      "integrity": "sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.30",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.30.tgz",
      "integrity": "sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@reduxjs/toolkit": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/@reduxjs/toolkit/-/toolkit-2.9.0.tgz",
      "integrity": "sha512-fSfQlSRu9Z5yBkvsNhYF2rPS8cGXn/TZVrlwN1948QyZ8xMZ0JvP50S2acZNaf+o63u6aEeMjipFyksjIcWrog==",
      "license": "MIT",
      "dependencies": {
        "@standard-schema/spec": "^1.0.0",
        "@standard-schema/utils": "^0.3.0",
        "immer": "^10.0.3",
        "redux": "^5.0.1",
        "redux-thunk": "^3.1.0",
        "reselect": "^5.1.0"
      },
      "peerDependencies": {
        "react": "^16.9.0 || ^17.0.0 || ^18 || ^19",
        "react-redux": "^7.2.1 || ^8.1.3 || ^9.0.0"
      },
      "peerDependenciesMeta": {
        "react": {
          "optional": true
        },
        "react-redux": {
          "optional": true
        }
      }
    },
    "node_modules/@remix-run/router": {
      "version": "1.23.0",
      "resolved": "https://registry.npmjs.org/@remix-run/router/-/router-1.23.0.tgz",
      "integrity": "sha512-O3rHJzAQKamUz1fvE0Qaw0xSFqsA/yafi2iqeE0pvdFtCO1viYx8QL6f3Ln/aCCTLxs68SLf0KPM9eSeM8yBnA==",
      "license": "MIT",
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@rolldown/pluginutils": {
      "version": "1.0.0-beta.27",
      "resolved": "https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.27.tgz",
      "integrity": "sha512-+d0F4MKMCbeVUJwG96uQ4SgAznZNSq93I3V+9NHA4OpvqG8mRCpGdKmK8l/dl02h2CCDHwW2FqilnTyDcAnqjA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@rollup/rollup-android-arm-eabi": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.50.0.tgz",
      "integrity": "sha512-lVgpeQyy4fWN5QYebtW4buT/4kn4p4IJ+kDNB4uYNT5b8c8DLJDg6titg20NIg7E8RWwdWZORW6vUFfrLyG3KQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-android-arm64": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.50.0.tgz",
      "integrity": "sha512-2O73dR4Dc9bp+wSYhviP6sDziurB5/HCym7xILKifWdE9UsOe2FtNcM+I4xZjKrfLJnq5UR8k9riB87gauiQtw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-darwin-arm64": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.50.0.tgz",
      "integrity": "sha512-vwSXQN8T4sKf1RHr1F0s98Pf8UPz7pS6P3LG9NSmuw0TVh7EmaE+5Ny7hJOZ0M2yuTctEsHHRTMi2wuHkdS6Hg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-darwin-x64": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.50.0.tgz",
      "integrity": "sha512-cQp/WG8HE7BCGyFVuzUg0FNmupxC+EPZEwWu2FCGGw5WDT1o2/YlENbm5e9SMvfDFR6FRhVCBePLqj0o8MN7Vw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-arm64": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.50.0.tgz",
      "integrity": "sha512-UR1uTJFU/p801DvvBbtDD7z9mQL8J80xB0bR7DqW7UGQHRm/OaKzp4is7sQSdbt2pjjSS72eAtRh43hNduTnnQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-x64": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.50.0.tgz",
      "integrity": "sha512-G/DKyS6PK0dD0+VEzH/6n/hWDNPDZSMBmqsElWnCRGrYOb2jC0VSupp7UAHHQ4+QILwkxSMaYIbQ72dktp8pKA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.50.0.tgz",
      "integrity": "sha512-u72Mzc6jyJwKjJbZZcIYmd9bumJu7KNmHYdue43vT1rXPm2rITwmPWF0mmPzLm9/vJWxIRbao/jrQmxTO0Sm9w==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.50.0.tgz",
      "integrity": "sha512-S4UefYdV0tnynDJV1mdkNawp0E5Qm2MtSs330IyHgaccOFrwqsvgigUD29uT+B/70PDY1eQ3t40+xf6wIvXJyg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-gnu": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.50.0.tgz",
      "integrity": "sha512-1EhkSvUQXJsIhk4msxP5nNAUWoB4MFDHhtc4gAYvnqoHlaL9V3F37pNHabndawsfy/Tp7BPiy/aSa6XBYbaD1g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-musl": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.50.0.tgz",
      "integrity": "sha512-EtBDIZuDtVg75xIPIK1l5vCXNNCIRM0OBPUG+tbApDuJAy9mKago6QxX+tfMzbCI6tXEhMuZuN1+CU8iDW+0UQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.50.0.tgz",
      "integrity": "sha512-BGYSwJdMP0hT5CCmljuSNx7+k+0upweM2M4YGfFBjnFSZMHOLYR0gEEj/dxyYJ6Zc6AiSeaBY8dWOa11GF/ppQ==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-ppc64-gnu": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-ppc64-gnu/-/rollup-linux-ppc64-gnu-4.50.0.tgz",
      "integrity": "sha512-I1gSMzkVe1KzAxKAroCJL30hA4DqSi+wGc5gviD0y3IL/VkvcnAqwBf4RHXHyvH66YVHxpKO8ojrgc4SrWAnLg==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.50.0.tgz",
      "integrity": "sha512-bSbWlY3jZo7molh4tc5dKfeSxkqnf48UsLqYbUhnkdnfgZjgufLS/NTA8PcP/dnvct5CCdNkABJ56CbclMRYCA==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-musl": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.50.0.tgz",
      "integrity": "sha512-LSXSGumSURzEQLT2e4sFqFOv3LWZsEF8FK7AAv9zHZNDdMnUPYH3t8ZlaeYYZyTXnsob3htwTKeWtBIkPV27iQ==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-s390x-gnu": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.50.0.tgz",
      "integrity": "sha512-CxRKyakfDrsLXiCyucVfVWVoaPA4oFSpPpDwlMcDFQvrv3XY6KEzMtMZrA+e/goC8xxp2WSOxHQubP8fPmmjOQ==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-gnu": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.50.0.tgz",
      "integrity": "sha512-8PrJJA7/VU8ToHVEPu14FzuSAqVKyo5gg/J8xUerMbyNkWkO9j2ExBho/68RnJsMGNJq4zH114iAttgm7BZVkA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-musl": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.50.0.tgz",
      "integrity": "sha512-SkE6YQp+CzpyOrbw7Oc4MgXFvTw2UIBElvAvLCo230pyxOLmYwRPwZ/L5lBe/VW/qT1ZgND9wJfOsdy0XptRvw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-openharmony-arm64": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-openharmony-arm64/-/rollup-openharmony-arm64-4.50.0.tgz",
      "integrity": "sha512-PZkNLPfvXeIOgJWA804zjSFH7fARBBCpCXxgkGDRjjAhRLOR8o0IGS01ykh5GYfod4c2yiiREuDM8iZ+pVsT+Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openharmony"
      ]
    },
    "node_modules/@rollup/rollup-win32-arm64-msvc": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.50.0.tgz",
      "integrity": "sha512-q7cIIdFvWQoaCbLDUyUc8YfR3Jh2xx3unO8Dn6/TTogKjfwrax9SyfmGGK6cQhKtjePI7jRfd7iRYcxYs93esg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-ia32-msvc": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.50.0.tgz",
      "integrity": "sha512-XzNOVg/YnDOmFdDKcxxK410PrcbcqZkBmz+0FicpW5jtjKQxcW1BZJEQOF0NJa6JO7CZhett8GEtRN/wYLYJuw==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-x64-msvc": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.50.0.tgz",
      "integrity": "sha512-xMmiWRR8sp72Zqwjgtf3QbZfF1wdh8X2ABu3EaozvZcyHJeU0r+XAnXdKgs4cCAp6ORoYoCygipYP1mjmbjrsg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@standard-schema/spec": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@standard-schema/spec/-/spec-1.0.0.tgz",
      "integrity": "sha512-m2bOd0f2RT9k8QJx1JN85cZYyH1RqFBdlwtkSlf4tBDYLCiiZnv1fIIwacK6cqwXavOydf0NPToMQgpKq+dVlA==",
      "license": "MIT"
    },
    "node_modules/@standard-schema/utils": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/@standard-schema/utils/-/utils-0.3.0.tgz",
      "integrity": "sha512-e7Mew686owMaPJVNNLs55PUvgz371nKgwsc4vxE49zsODpJEnxgxRo2y/OKrqueavXgZNMDVj3DdHFlaSAeU8g==",
      "license": "MIT"
    },
    "node_modules/@tailwindcss/node": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.13.tgz",
      "integrity": "sha512-eq3ouolC1oEFOAvOMOBAmfCIqZBJuvWvvYWh5h5iOYfe1HFC6+GZ6EIL0JdM3/niGRJmnrOc+8gl9/HGUaaptw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/remapping": "^2.3.4",
        "enhanced-resolve": "^5.18.3",
        "jiti": "^2.5.1",
        "lightningcss": "1.30.1",
        "magic-string": "^0.30.18",
        "source-map-js": "^1.2.1",
        "tailwindcss": "4.1.13"
      }
    },
    "node_modules/@tailwindcss/oxide": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.13.tgz",
      "integrity": "sha512-CPgsM1IpGRa880sMbYmG1s4xhAy3xEt1QULgTJGQmZUeNgXFR7s1YxYygmJyBGtou4SyEosGAGEeYqY7R53bIA==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "detect-libc": "^2.0.4",
        "tar": "^7.4.3"
      },
      "engines": {
        "node": ">= 10"
      },
      "optionalDependencies": {
        "@tailwindcss/oxide-android-arm64": "4.1.13",
        "@tailwindcss/oxide-darwin-arm64": "4.1.13",
        "@tailwindcss/oxide-darwin-x64": "4.1.13",
        "@tailwindcss/oxide-freebsd-x64": "4.1.13",
        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.1.13",
        "@tailwindcss/oxide-linux-arm64-gnu": "4.1.13",
        "@tailwindcss/oxide-linux-arm64-musl": "4.1.13",
        "@tailwindcss/oxide-linux-x64-gnu": "4.1.13",
        "@tailwindcss/oxide-linux-x64-musl": "4.1.13",
        "@tailwindcss/oxide-wasm32-wasi": "4.1.13",
        "@tailwindcss/oxide-win32-arm64-msvc": "4.1.13",
        "@tailwindcss/oxide-win32-x64-msvc": "4.1.13"
      }
    },
    "node_modules/@tailwindcss/oxide-android-arm64": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.1.13.tgz",
      "integrity": "sha512-BrpTrVYyejbgGo57yc8ieE+D6VT9GOgnNdmh5Sac6+t0m+v+sKQevpFVpwX3pBrM2qKrQwJ0c5eDbtjouY/+ew==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-arm64": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.1.13.tgz",
      "integrity": "sha512-YP+Jksc4U0KHcu76UhRDHq9bx4qtBftp9ShK/7UGfq0wpaP96YVnnjFnj3ZFrUAjc5iECzODl/Ts0AN7ZPOANQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-x64": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.1.13.tgz",
      "integrity": "sha512-aAJ3bbwrn/PQHDxCto9sxwQfT30PzyYJFG0u/BWZGeVXi5Hx6uuUOQEI2Fa43qvmUjTRQNZnGqe9t0Zntexeuw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-freebsd-x64": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.1.13.tgz",
      "integrity": "sha512-Wt8KvASHwSXhKE/dJLCCWcTSVmBj3xhVhp/aF3RpAhGeZ3sVo7+NTfgiN8Vey/Fi8prRClDs6/f0KXPDTZE6nQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.1.13.tgz",
      "integrity": "sha512-mbVbcAsW3Gkm2MGwA93eLtWrwajz91aXZCNSkGTx/R5eb6KpKD5q8Ueckkh9YNboU8RH7jiv+ol/I7ZyQ9H7Bw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-gnu": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.1.13.tgz",
      "integrity": "sha512-wdtfkmpXiwej/yoAkrCP2DNzRXCALq9NVLgLELgLim1QpSfhQM5+ZxQQF8fkOiEpuNoKLp4nKZ6RC4kmeFH0HQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-musl": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.1.13.tgz",
      "integrity": "sha512-hZQrmtLdhyqzXHB7mkXfq0IYbxegaqTmfa1p9MBj72WPoDD3oNOh1Lnxf6xZLY9C3OV6qiCYkO1i/LrzEdW2mg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-gnu": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.1.13.tgz",
      "integrity": "sha512-uaZTYWxSXyMWDJZNY1Ul7XkJTCBRFZ5Fo6wtjrgBKzZLoJNrG+WderJwAjPzuNZOnmdrVg260DKwXCFtJ/hWRQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-musl": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.1.13.tgz",
      "integrity": "sha512-oXiPj5mi4Hdn50v5RdnuuIms0PVPI/EG4fxAfFiIKQh5TgQgX7oSuDWntHW7WNIi/yVLAiS+CRGW4RkoGSSgVQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-wasm32-wasi": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-wasm32-wasi/-/oxide-wasm32-wasi-4.1.13.tgz",
      "integrity": "sha512-+LC2nNtPovtrDwBc/nqnIKYh/W2+R69FA0hgoeOn64BdCX522u19ryLh3Vf3F8W49XBcMIxSe665kwy21FkhvA==",
      "bundleDependencies": [
        "@napi-rs/wasm-runtime",
        "@emnapi/core",
        "@emnapi/runtime",
        "@tybys/wasm-util",
        "@emnapi/wasi-threads",
        "tslib"
      ],
      "cpu": [
        "wasm32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/core": "^1.4.5",
        "@emnapi/runtime": "^1.4.5",
        "@emnapi/wasi-threads": "^1.0.4",
        "@napi-rs/wasm-runtime": "^0.2.12",
        "@tybys/wasm-util": "^0.10.0",
        "tslib": "^2.8.0"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-arm64-msvc": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.1.13.tgz",
      "integrity": "sha512-dziTNeQXtoQ2KBXmrjCxsuPk3F3CQ/yb7ZNZNA+UkNTeiTGgfeh+gH5Pi7mRncVgcPD2xgHvkFCh/MhZWSgyQg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-x64-msvc": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.1.13.tgz",
      "integrity": "sha512-3+LKesjXydTkHk5zXX01b5KMzLV1xl2mcktBJkje7rhFUpUlYJy7IMOLqjIRQncLTa1WZZiFY/foAeB5nmaiTw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/postcss": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/@tailwindcss/postcss/-/postcss-4.1.13.tgz",
      "integrity": "sha512-HLgx6YSFKJT7rJqh9oJs/TkBFhxuMOfUKSBEPYwV+t78POOBsdQ7crhZLzwcH3T0UyUuOzU/GK5pk5eKr3wCiQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@alloc/quick-lru": "^5.2.0",
        "@tailwindcss/node": "4.1.13",
        "@tailwindcss/oxide": "4.1.13",
        "postcss": "^8.4.41",
        "tailwindcss": "4.1.13"
      }
    },
    "node_modules/@types/babel__core": {
      "version": "7.20.5",
      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.20.7",
        "@babel/types": "^7.20.7",
        "@types/babel__generator": "*",
        "@types/babel__template": "*",
        "@types/babel__traverse": "*"
      }
    },
    "node_modules/@types/babel__generator": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.27.0.tgz",
      "integrity": "sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__template": {
      "version": "7.4.4",
      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__traverse": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.28.0.tgz",
      "integrity": "sha512-8PvcXf70gTDZBgt9ptxJ8elBeBjcLOAcOtoO/mPJjtji1+CdGbHgm77om1GrsPxsiE+uXIpNSK64UYaIwQXd4Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.28.2"
      }
    },
    "node_modules/@types/d3-array": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/@types/d3-array/-/d3-array-3.2.2.tgz",
      "integrity": "sha512-hOLWVbm7uRza0BYXpIIW5pxfrKe0W+D5lrFiAEYR+pb6w3N2SwSMaJbXdUfSEv+dT4MfHBLtn5js0LAWaO6otw==",
      "license": "MIT"
    },
    "node_modules/@types/d3-color": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/@types/d3-color/-/d3-color-3.1.3.tgz",
      "integrity": "sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==",
      "license": "MIT"
    },
    "node_modules/@types/d3-ease": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@types/d3-ease/-/d3-ease-3.0.2.tgz",
      "integrity": "sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==",
      "license": "MIT"
    },
    "node_modules/@types/d3-interpolate": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/d3-interpolate/-/d3-interpolate-3.0.4.tgz",
      "integrity": "sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-color": "*"
      }
    },
    "node_modules/@types/d3-path": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/@types/d3-path/-/d3-path-3.1.1.tgz",
      "integrity": "sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==",
      "license": "MIT"
    },
    "node_modules/@types/d3-scale": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@types/d3-scale/-/d3-scale-4.0.9.tgz",
      "integrity": "sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-time": "*"
      }
    },
    "node_modules/@types/d3-shape": {
      "version": "3.1.7",
      "resolved": "https://registry.npmjs.org/@types/d3-shape/-/d3-shape-3.1.7.tgz",
      "integrity": "sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-path": "*"
      }
    },
    "node_modules/@types/d3-time": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/d3-time/-/d3-time-3.0.4.tgz",
      "integrity": "sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==",
      "license": "MIT"
    },
    "node_modules/@types/d3-timer": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@types/d3-timer/-/d3-timer-3.0.2.tgz",
      "integrity": "sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==",
      "license": "MIT"
    },
    "node_modules/@types/estree": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/node": {
      "version": "24.5.2",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-24.5.2.tgz",
      "integrity": "sha512-FYxk1I7wPv3K2XBaoyH2cTnocQEu8AOZ60hPbsyukMPLv5/5qr7V1i8PLHdl6Zf87I+xZXFvPCXYjiTFq+YSDQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "undici-types": "~7.12.0"
      }
    },
    "node_modules/@types/prop-types": {
      "version": "15.7.15",
      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.15.tgz",
      "integrity": "sha512-F6bEyamV9jKGAFBEmlQnesRPGOQqS2+Uwi0Em15xenOxHaf2hv6L8YCVn3rPdPJOiJfPiCnLIRyvwVaqMY3MIw==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/@types/react": {
      "version": "18.3.24",
      "resolved": "https://registry.npmjs.org/@types/react/-/react-18.3.24.tgz",
      "integrity": "sha512-0dLEBsA1kI3OezMBF8nSsb7Nk19ZnsyE1LLhB8r27KbgU5H4pvuqZLdtE+aUkJVoXgTVuA+iLIwmZ0TuK4tx6A==",
      "devOptional": true,
      "license": "MIT",
      "dependencies": {
        "@types/prop-types": "*",
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@types/react-dom": {
      "version": "18.3.7",
      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.7.tgz",
      "integrity": "sha512-MEe3UeoENYVFXzoXEWsvcpg6ZvlrFNlOQ7EOsvhI3CfAXwzPfO8Qwuxd40nepsYKqyyVQnTdEfv68q91yLcKrQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "^18.0.0"
      }
    },
    "node_modules/@types/use-sync-external-store": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/@types/use-sync-external-store/-/use-sync-external-store-0.0.6.tgz",
      "integrity": "sha512-zFDAD+tlpf2r4asuHEj0XH6pY6i0g5NeAHPn+15wk3BV6JA69eERFXC1gyGThDkVa1zCyKr5jox1+2LbV/AMLg==",
      "license": "MIT"
    },
    "node_modules/@vitejs/plugin-react": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.7.0.tgz",
      "integrity": "sha512-gUu9hwfWvvEDBBmgtAowQCojwZmJ5mcLn3aufeCsitijs3+f2NsrPtlAWIR6OPiqljl96GVCUbLe0HyqIpVaoA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/core": "^7.28.0",
        "@babel/plugin-transform-react-jsx-self": "^7.27.1",
        "@babel/plugin-transform-react-jsx-source": "^7.27.1",
        "@rolldown/pluginutils": "1.0.0-beta.27",
        "@types/babel__core": "^7.20.5",
        "react-refresh": "^0.17.0"
      },
      "engines": {
        "node": "^14.18.0 || >=16.0.0"
      },
      "peerDependencies": {
        "vite": "^4.2.0 || ^5.0.0 || ^6.0.0 || ^7.0.0"
      }
    },
    "node_modules/autoprefixer": {
      "version": "10.4.21",
      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.21.tgz",
      "integrity": "sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/autoprefixer"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "browserslist": "^4.24.4",
        "caniuse-lite": "^1.0.30001702",
        "fraction.js": "^4.3.7",
        "normalize-range": "^0.1.2",
        "picocolors": "^1.1.1",
        "postcss-value-parser": "^4.2.0"
      },
      "bin": {
        "autoprefixer": "bin/autoprefixer"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      },
      "peerDependencies": {
        "postcss": "^8.1.0"
      }
    },
    "node_modules/browserslist": {
      "version": "4.25.4",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.4.tgz",
      "integrity": "sha512-4jYpcjabC606xJ3kw2QwGEZKX0Aw7sgQdZCvIK9dhVSPh76BKo+C+btT1RRofH7B+8iNpEbgGNVWiLki5q93yg==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "caniuse-lite": "^1.0.30001737",
        "electron-to-chromium": "^1.5.211",
        "node-releases": "^2.0.19",
        "update-browserslist-db": "^1.1.3"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001739",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001739.tgz",
      "integrity": "sha512-y+j60d6ulelrNSwpPyrHdl+9mJnQzHBr08xm48Qno0nSk4h3Qojh+ziv2qE6rXf4k3tadF4o1J/1tAbVm1NtnA==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0"
    },
    "node_modules/chownr": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-3.0.0.tgz",
      "integrity": "sha512-+IxzY9BZOQd/XuYPRmrvEVjF/nqj5kgT4kEq7VofrDoM1MxoRjEWkrCC3EtLi59TVawxTAn+orJwFQcrqEN1+g==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/clsx": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
      "integrity": "sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/convert-source-map": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
      "devOptional": true,
      "license": "MIT"
    },
    "node_modules/d3-array": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz",
      "integrity": "sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==",
      "license": "ISC",
      "dependencies": {
        "internmap": "1 - 2"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-color": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-color/-/d3-color-3.1.0.tgz",
      "integrity": "sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-ease": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-ease/-/d3-ease-3.0.1.tgz",
      "integrity": "sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-format": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-format/-/d3-format-3.1.0.tgz",
      "integrity": "sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-interpolate": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz",
      "integrity": "sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==",
      "license": "ISC",
      "dependencies": {
        "d3-color": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-path": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-path/-/d3-path-3.1.0.tgz",
      "integrity": "sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-scale": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz",
      "integrity": "sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2.10.0 - 3",
        "d3-format": "1 - 3",
        "d3-interpolate": "1.2.0 - 3",
        "d3-time": "2.1.1 - 3",
        "d3-time-format": "2 - 4"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-shape": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/d3-shape/-/d3-shape-3.2.0.tgz",
      "integrity": "sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==",
      "license": "ISC",
      "dependencies": {
        "d3-path": "^3.1.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-time": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz",
      "integrity": "sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-time-format": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/d3-time-format/-/d3-time-format-4.1.0.tgz",
      "integrity": "sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==",
      "license": "ISC",
      "dependencies": {
        "d3-time": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-timer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-timer/-/d3-timer-3.0.1.tgz",
      "integrity": "sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/debug": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/decimal.js-light": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/decimal.js-light/-/decimal.js-light-2.5.1.tgz",
      "integrity": "sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==",
      "license": "MIT"
    },
    "node_modules/detect-libc": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.214",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.214.tgz",
      "integrity": "sha512-TpvUNdha+X3ybfU78NoQatKvQEm1oq3lf2QbnmCEdw+Bd9RuIAY+hJTvq1avzHM0f7EJfnH3vbCnbzKzisc/9Q==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/enhanced-resolve": {
      "version": "5.18.3",
      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.3.tgz",
      "integrity": "sha512-d4lC8xfavMeBjzGr2vECC3fsGXziXZQyJxD868h2M/mBI3PwAuODxAkLkq5HYuvrPYcUtiLzsTo8U3PgX3Ocww==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.2.0"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/es-toolkit": {
      "version": "1.39.10",
      "resolved": "https://registry.npmjs.org/es-toolkit/-/es-toolkit-1.39.10.tgz",
      "integrity": "sha512-E0iGnTtbDhkeczB0T+mxmoVlT4YNweEKBLq7oaU4p11mecdsZpNWOglI4895Vh4usbQ+LsJiuLuI2L0Vdmfm2w==",
      "license": "MIT",
      "workspaces": [
        "docs",
        "benchmarks"
      ]
    },
    "node_modules/esbuild": {
      "version": "0.21.5",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz",
      "integrity": "sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=12"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.21.5",
        "@esbuild/android-arm": "0.21.5",
        "@esbuild/android-arm64": "0.21.5",
        "@esbuild/android-x64": "0.21.5",
        "@esbuild/darwin-arm64": "0.21.5",
        "@esbuild/darwin-x64": "0.21.5",
        "@esbuild/freebsd-arm64": "0.21.5",
        "@esbuild/freebsd-x64": "0.21.5",
        "@esbuild/linux-arm": "0.21.5",
        "@esbuild/linux-arm64": "0.21.5",
        "@esbuild/linux-ia32": "0.21.5",
        "@esbuild/linux-loong64": "0.21.5",
        "@esbuild/linux-mips64el": "0.21.5",
        "@esbuild/linux-ppc64": "0.21.5",
        "@esbuild/linux-riscv64": "0.21.5",
        "@esbuild/linux-s390x": "0.21.5",
        "@esbuild/linux-x64": "0.21.5",
        "@esbuild/netbsd-x64": "0.21.5",
        "@esbuild/openbsd-x64": "0.21.5",
        "@esbuild/sunos-x64": "0.21.5",
        "@esbuild/win32-arm64": "0.21.5",
        "@esbuild/win32-ia32": "0.21.5",
        "@esbuild/win32-x64": "0.21.5"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/eventemitter3": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-5.0.1.tgz",
      "integrity": "sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==",
      "license": "MIT"
    },
    "node_modules/fraction.js": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
      "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "patreon",
        "url": "https://github.com/sponsors/rawify"
      }
    },
    "node_modules/framer-motion": {
      "version": "12.23.18",
      "resolved": "https://registry.npmjs.org/framer-motion/-/framer-motion-12.23.18.tgz",
      "integrity": "sha512-HBVXBL5x3nk/0WrYM5G4VgjBey99ytVYET5AX17s/pcnlH90cyaxVUqgoN8cpF4+PqZRVOhwWsv28F+hxA9Tzg==",
      "license": "MIT",
      "dependencies": {
        "motion-dom": "^12.23.18",
        "motion-utils": "^12.23.6",
        "tslib": "^2.4.0"
      },
      "peerDependencies": {
        "@emotion/is-prop-valid": "*",
        "react": "^18.0.0 || ^19.0.0",
        "react-dom": "^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@emotion/is-prop-valid": {
          "optional": true
        },
        "react": {
          "optional": true
        },
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/html-parse-stringify": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/html-parse-stringify/-/html-parse-stringify-3.0.1.tgz",
      "integrity": "sha512-KknJ50kTInJ7qIScF3jeaFRpMpE8/lfiTdzf/twXyPBLAGrLRTmkz3AdTnKeh40X8k9L2fdYwEp/42WGXIRGcg==",
      "license": "MIT",
      "dependencies": {
        "void-elements": "3.1.0"
      }
    },
    "node_modules/i18next": {
      "version": "23.16.8",
      "resolved": "https://registry.npmjs.org/i18next/-/i18next-23.16.8.tgz",
      "integrity": "sha512-06r/TitrM88Mg5FdUXAKL96dJMzgqLE5dv3ryBAra4KCwD9mJ4ndOTS95ZuymIGoE+2hzfdaMak2X11/es7ZWg==",
      "funding": [
        {
          "type": "individual",
          "url": "https://locize.com"
        },
        {
          "type": "individual",
          "url": "https://locize.com/i18next.html"
        },
        {
          "type": "individual",
          "url": "https://www.i18next.com/how-to/faq#i18next-is-awesome.-how-can-i-support-the-project"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.23.2"
      }
    },
    "node_modules/immer": {
      "version": "10.1.3",
      "resolved": "https://registry.npmjs.org/immer/-/immer-10.1.3.tgz",
      "integrity": "sha512-tmjF/k8QDKydUlm3mZU+tjM6zeq9/fFpPqH9SzWmBnVVKsPBg/V66qsMwb3/Bo90cgUN+ghdVBess+hPsxUyRw==",
      "license": "MIT",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/immer"
      }
    },
    "node_modules/internmap": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/internmap/-/internmap-2.0.3.tgz",
      "integrity": "sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/jiti": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.5.1.tgz",
      "integrity": "sha512-twQoecYPiVA5K/h6SxtORw/Bs3ar+mLUtoPSc7iMXzQzK8d7eJ/R09wmTwAjiamETn1cXYPGfNnu7DMoHgu12w==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jiti": "lib/jiti-cli.mjs"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "license": "MIT"
    },
    "node_modules/jsesc": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/lightningcss": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.1.tgz",
      "integrity": "sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==",
      "dev": true,
      "license": "MPL-2.0",
      "dependencies": {
        "detect-libc": "^2.0.3"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "optionalDependencies": {
        "lightningcss-darwin-arm64": "1.30.1",
        "lightningcss-darwin-x64": "1.30.1",
        "lightningcss-freebsd-x64": "1.30.1",
        "lightningcss-linux-arm-gnueabihf": "1.30.1",
        "lightningcss-linux-arm64-gnu": "1.30.1",
        "lightningcss-linux-arm64-musl": "1.30.1",
        "lightningcss-linux-x64-gnu": "1.30.1",
        "lightningcss-linux-x64-musl": "1.30.1",
        "lightningcss-win32-arm64-msvc": "1.30.1",
        "lightningcss-win32-x64-msvc": "1.30.1"
      }
    },
    "node_modules/lightningcss-darwin-arm64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.30.1.tgz",
      "integrity": "sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-darwin-x64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.30.1.tgz",
      "integrity": "sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-freebsd-x64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.30.1.tgz",
      "integrity": "sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm-gnueabihf": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.30.1.tgz",
      "integrity": "sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-gnu": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.30.1.tgz",
      "integrity": "sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-musl": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.30.1.tgz",
      "integrity": "sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-gnu": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.30.1.tgz",
      "integrity": "sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-musl": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.30.1.tgz",
      "integrity": "sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-arm64-msvc": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.30.1.tgz",
      "integrity": "sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-x64-msvc": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.30.1.tgz",
      "integrity": "sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "license": "MIT",
      "dependencies": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      },
      "bin": {
        "loose-envify": "cli.js"
      }
    },
    "node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/lucide-react": {
      "version": "0.544.0",
      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.544.0.tgz",
      "integrity": "sha512-t5tS44bqd825zAW45UQxpG2CvcC4urOwn2TrwSH8u+MjeE+1NnWl6QqeQ/6NdjMqdOygyiT9p3Ev0p1NJykxjw==",
      "license": "ISC",
      "peerDependencies": {
        "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/magic-string": {
      "version": "0.30.18",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.18.tgz",
      "integrity": "sha512-yi8swmWbO17qHhwIBNeeZxTceJMeBvWJaId6dyvTSOwTipqeHhMhOrz6513r1sOKnpvQ7zkhlG8tPrpilwTxHQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.5"
      }
    },
    "node_modules/minipass": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/minizlib": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-3.0.2.tgz",
      "integrity": "sha512-oG62iEk+CYt5Xj2YqI5Xi9xWUeZhDI8jjQmC5oThVH5JGCTgIjr7ciJDzC7MBzYd//WvR1OTmP5Q38Q8ShQtVA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "minipass": "^7.1.2"
      },
      "engines": {
        "node": ">= 18"
      }
    },
    "node_modules/mkdirp": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-3.0.1.tgz",
      "integrity": "sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "mkdirp": "dist/cjs/src/bin.js"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/motion-dom": {
      "version": "12.23.18",
      "resolved": "https://registry.npmjs.org/motion-dom/-/motion-dom-12.23.18.tgz",
      "integrity": "sha512-9piw3uOcP6DpS0qpnDF95bLDzmgMxLOg/jghLnHwYJ0YFizzuvbH/L8106dy39JNgHYmXFUTztoP9JQvUqlBwQ==",
      "license": "MIT",
      "dependencies": {
        "motion-utils": "^12.23.6"
      }
    },
    "node_modules/motion-utils": {
      "version": "12.23.6",
      "resolved": "https://registry.npmjs.org/motion-utils/-/motion-utils-12.23.6.tgz",
      "integrity": "sha512-eAWoPgr4eFEOFfg2WjIsMoqJTW6Z8MTUCgn/GZ3VRpClWBdnbjryiA3ZSNLyxCTmCQx4RmYX6jX1iWHbenUPNQ==",
      "license": "MIT"
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/nanoid": {
      "version": "3.3.11",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/node-releases": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/postcss": {
      "version": "8.5.6",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
      "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.11",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/react": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
      "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-dom": {
      "version": "18.3.1",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
      "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0",
        "scheduler": "^0.23.2"
      },
      "peerDependencies": {
        "react": "^18.3.1"
      }
    },
    "node_modules/react-i18next": {
      "version": "13.5.0",
      "resolved": "https://registry.npmjs.org/react-i18next/-/react-i18next-13.5.0.tgz",
      "integrity": "sha512-CFJ5NDGJ2MUyBohEHxljOq/39NQ972rh1ajnadG9BjTk+UXbHLq4z5DKEbEQBDoIhUmmbuS/fIMJKo6VOax1HA==",
      "license": "MIT",
      "dependencies": {
        "@babel/runtime": "^7.22.5",
        "html-parse-stringify": "^3.0.1"
      },
      "peerDependencies": {
        "i18next": ">= 23.2.3",
        "react": ">= 16.8.0"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        },
        "react-native": {
          "optional": true
        }
      }
    },
    "node_modules/react-is": {
      "version": "19.1.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-19.1.1.tgz",
      "integrity": "sha512-tr41fA15Vn8p4X9ntI+yCyeGSf1TlYaY5vlTZfQmeLBrFo3psOPX6HhTDnFNL9uj3EhP0KAQ80cugCl4b4BERA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/react-redux": {
      "version": "9.2.0",
      "resolved": "https://registry.npmjs.org/react-redux/-/react-redux-9.2.0.tgz",
      "integrity": "sha512-ROY9fvHhwOD9ySfrF0wmvu//bKCQ6AeZZq1nJNtbDC+kk5DuSuNX/n6YWYF/SYy7bSba4D4FSz8DJeKY/S/r+g==",
      "license": "MIT",
      "dependencies": {
        "@types/use-sync-external-store": "^0.0.6",
        "use-sync-external-store": "^1.4.0"
      },
      "peerDependencies": {
        "@types/react": "^18.2.25 || ^19",
        "react": "^18.0 || ^19",
        "redux": "^5.0.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "redux": {
          "optional": true
        }
      }
    },
    "node_modules/react-refresh": {
      "version": "0.17.0",
      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.17.0.tgz",
      "integrity": "sha512-z6F7K9bV85EfseRCp2bzrpyQ0Gkw1uLoCel9XBVWPg/TjRj94SkJzUTGfOa4bs7iJvBWtQG0Wq7wnI0syw3EBQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-router": {
      "version": "6.30.1",
      "resolved": "https://registry.npmjs.org/react-router/-/react-router-6.30.1.tgz",
      "integrity": "sha512-X1m21aEmxGXqENEPG3T6u0Th7g0aS4ZmoNynhbs+Cn+q+QGTLt+d5IQ2bHAXKzKcxGJjxACpVbnYQSCRcfxHlQ==",
      "license": "MIT",
      "dependencies": {
        "@remix-run/router": "1.23.0"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "react": ">=16.8"
      }
    },
    "node_modules/react-router-dom": {
      "version": "6.30.1",
      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-6.30.1.tgz",
      "integrity": "sha512-llKsgOkZdbPU1Eg3zK8lCn+sjD9wMRZZPuzmdWWX5SUs8OFkN5HnFVC0u5KMeMaC9aoancFI/KoLuKPqN+hxHw==",
      "license": "MIT",
      "dependencies": {
        "@remix-run/router": "1.23.0",
        "react-router": "6.30.1"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "react": ">=16.8",
        "react-dom": ">=16.8"
      }
    },
    "node_modules/recharts": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/recharts/-/recharts-3.2.1.tgz",
      "integrity": "sha512-0JKwHRiFZdmLq/6nmilxEZl3pqb4T+aKkOkOi/ZISRZwfBhVMgInxzlYU9D4KnCH3KINScLy68m/OvMXoYGZUw==",
      "license": "MIT",
      "dependencies": {
        "@reduxjs/toolkit": "1.x.x || 2.x.x",
        "clsx": "^2.1.1",
        "decimal.js-light": "^2.5.1",
        "es-toolkit": "^1.39.3",
        "eventemitter3": "^5.0.1",
        "immer": "^10.1.1",
        "react-redux": "8.x.x || 9.x.x",
        "reselect": "5.1.1",
        "tiny-invariant": "^1.3.3",
        "use-sync-external-store": "^1.2.2",
        "victory-vendor": "^37.0.2"
      },
      "engines": {
        "node": ">=18"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-is": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/redux": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/redux/-/redux-5.0.1.tgz",
      "integrity": "sha512-M9/ELqF6fy8FwmkpnF0S3YKOqMyoWJ4+CS5Efg2ct3oY9daQvd/Pc71FpGZsVsbl3Cpb+IIcjBDUnnyBdQbq4w==",
      "license": "MIT"
    },
    "node_modules/redux-thunk": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/redux-thunk/-/redux-thunk-3.1.0.tgz",
      "integrity": "sha512-NW2r5T6ksUKXCabzhL9z+h206HQw/NJkcLm1GPImRQ8IzfXwRGqjVhKJGauHirT0DAuyy6hjdnMZaRoAcy0Klw==",
      "license": "MIT",
      "peerDependencies": {
        "redux": "^5.0.0"
      }
    },
    "node_modules/reselect": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/reselect/-/reselect-5.1.1.tgz",
      "integrity": "sha512-K/BG6eIky/SBpzfHZv/dd+9JBFiS4SWV7FIujVyJRux6e45+73RaUHXLmIR1f7WOMaQ0U1km6qwklRQxpJJY0w==",
      "license": "MIT"
    },
    "node_modules/rollup": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.50.0.tgz",
      "integrity": "sha512-/Zl4D8zPifNmyGzJS+3kVoyXeDeT/GrsJM94sACNg9RtUE0hrHa1bNPtRSrfHTMH5HjRzce6K7rlTh3Khiw+pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/estree": "1.0.8"
      },
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "@rollup/rollup-android-arm-eabi": "4.50.0",
        "@rollup/rollup-android-arm64": "4.50.0",
        "@rollup/rollup-darwin-arm64": "4.50.0",
        "@rollup/rollup-darwin-x64": "4.50.0",
        "@rollup/rollup-freebsd-arm64": "4.50.0",
        "@rollup/rollup-freebsd-x64": "4.50.0",
        "@rollup/rollup-linux-arm-gnueabihf": "4.50.0",
        "@rollup/rollup-linux-arm-musleabihf": "4.50.0",
        "@rollup/rollup-linux-arm64-gnu": "4.50.0",
        "@rollup/rollup-linux-arm64-musl": "4.50.0",
        "@rollup/rollup-linux-loongarch64-gnu": "4.50.0",
        "@rollup/rollup-linux-ppc64-gnu": "4.50.0",
        "@rollup/rollup-linux-riscv64-gnu": "4.50.0",
        "@rollup/rollup-linux-riscv64-musl": "4.50.0",
        "@rollup/rollup-linux-s390x-gnu": "4.50.0",
        "@rollup/rollup-linux-x64-gnu": "4.50.0",
        "@rollup/rollup-linux-x64-musl": "4.50.0",
        "@rollup/rollup-openharmony-arm64": "4.50.0",
        "@rollup/rollup-win32-arm64-msvc": "4.50.0",
        "@rollup/rollup-win32-ia32-msvc": "4.50.0",
        "@rollup/rollup-win32-x64-msvc": "4.50.0",
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/scheduler": {
      "version": "0.23.2",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
      "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
      "license": "MIT",
      "dependencies": {
        "loose-envify": "^1.1.0"
      }
    },
    "node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "dev": true,
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/tailwindcss": {
      "version": "4.1.13",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.13.tgz",
      "integrity": "sha512-i+zidfmTqtwquj4hMEwdjshYYgMbOrPzb9a0M3ZgNa0JMoZeFC6bxZvO8yr8ozS6ix2SDz0+mvryPeBs2TFE+w==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/tapable": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.3.tgz",
      "integrity": "sha512-ZL6DDuAlRlLGghwcfmSn9sK3Hr6ArtyudlSAiCqQ6IfE+b+HHbydbYDIG15IfS5do+7XQQBdBiubF/cV2dnDzg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      }
    },
    "node_modules/tar": {
      "version": "7.4.3",
      "resolved": "https://registry.npmjs.org/tar/-/tar-7.4.3.tgz",
      "integrity": "sha512-5S7Va8hKfV7W5U6g3aYxXmlPoZVAwUMy9AOKyF2fVuZa2UD3qZjg578OrLRt8PcNN1PleVaL/5/yYATNL0ICUw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "@isaacs/fs-minipass": "^4.0.0",
        "chownr": "^3.0.0",
        "minipass": "^7.1.2",
        "minizlib": "^3.0.1",
        "mkdirp": "^3.0.1",
        "yallist": "^5.0.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tar/node_modules/yallist": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-5.0.0.tgz",
      "integrity": "sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tiny-invariant": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz",
      "integrity": "sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==",
      "license": "MIT"
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/typescript": {
      "version": "5.9.2",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.9.2.tgz",
      "integrity": "sha512-CWBzXQrc/qOkhidw1OzBTQuYRbfyxDXJMVJ1XNwUHGROVmuaeiEm3OslpZ1RV96d7SKKjZKrSJu3+t/xlw3R9A==",
      "dev": true,
      "license": "Apache-2.0",
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/undici-types": {
      "version": "7.12.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-7.12.0.tgz",
      "integrity": "sha512-goOacqME2GYyOZZfb5Lgtu+1IDmAlAEu5xnD3+xTzS10hT0vzpf0SPjkXwAw9Jm+4n/mQGDP3LO8CPbYROeBfQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/use-sync-external-store": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.5.0.tgz",
      "integrity": "sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/victory-vendor": {
      "version": "37.3.6",
      "resolved": "https://registry.npmjs.org/victory-vendor/-/victory-vendor-37.3.6.tgz",
      "integrity": "sha512-SbPDPdDBYp+5MJHhBCAyI7wKM3d5ivekigc2Dk2s7pgbZ9wIgIBYGVw4zGHBml/qTFbexrofXW6Gu4noGxrOwQ==",
      "license": "MIT AND ISC",
      "dependencies": {
        "@types/d3-array": "^3.0.3",
        "@types/d3-ease": "^3.0.0",
        "@types/d3-interpolate": "^3.0.1",
        "@types/d3-scale": "^4.0.2",
        "@types/d3-shape": "^3.1.0",
        "@types/d3-time": "^3.0.0",
        "@types/d3-timer": "^3.0.0",
        "d3-array": "^3.1.6",
        "d3-ease": "^3.0.1",
        "d3-interpolate": "^3.0.1",
        "d3-scale": "^4.0.2",
        "d3-shape": "^3.1.0",
        "d3-time": "^3.0.0",
        "d3-timer": "^3.0.1"
      }
    },
    "node_modules/vite": {
      "version": "5.4.19",
      "resolved": "https://registry.npmjs.org/vite/-/vite-5.4.19.tgz",
      "integrity": "sha512-qO3aKv3HoQC8QKiNSTuUM1l9o/XX3+c+VTgLHbJWHZGeTPVAg2XwazI9UWzoxjIJCGCV2zU60uqMzjeLZuULqA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "esbuild": "^0.21.3",
        "postcss": "^8.4.43",
        "rollup": "^4.20.0"
      },
      "bin": {
        "vite": "bin/vite.js"
      },
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "funding": {
        "url": "https://github.com/vitejs/vite?sponsor=1"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      },
      "peerDependencies": {
        "@types/node": "^18.0.0 || >=20.0.0",
        "less": "*",
        "lightningcss": "^1.21.0",
        "sass": "*",
        "sass-embedded": "*",
        "stylus": "*",
        "sugarss": "*",
        "terser": "^5.4.0"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "less": {
          "optional": true
        },
        "lightningcss": {
          "optional": true
        },
        "sass": {
          "optional": true
        },
        "sass-embedded": {
          "optional": true
        },
        "stylus": {
          "optional": true
        },
        "sugarss": {
          "optional": true
        },
        "terser": {
          "optional": true
        }
      }
    },
    "node_modules/void-elements": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/void-elements/-/void-elements-3.1.0.tgz",
      "integrity": "sha512-Dhxzh5HZuiHQhbvTW9AMetFfBHDMYpo23Uo9btPXgdYP+3T5S+p+jgNy7spra+veYhBP2dCSgxR/i2Y02h5/6w==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "dev": true,
      "license": "ISC"
    }
  }
}


==== \package.json ====
{
  "name": "uxr-portfolio-felix",
  "version": "1.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc -b && vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "framer-motion": "^12.23.18",
    "i18next": "^23.16.8",
    "lucide-react": "^0.544.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-i18next": "^13.5.0",
    "react-router-dom": "^6.26.0",
    "recharts": "^3.2.1"
  },
  "devDependencies": {
    "@tailwindcss/postcss": "^4.0.0",
    "@types/node": "^24.5.2",
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@vitejs/plugin-react": "^4.3.4",
    "autoprefixer": "^10.4.20",
    "postcss": "^8.4.47",
    "tailwindcss": "^4.0.0",
    "typescript": "^5.4.0",
    "vite": "^5.4.19"
  }
}


==== \postcss.config.js ====
export default {
  plugins: {
    "@tailwindcss/postcss": {},
  },
};


==== \tailwind.config.js ====
/**** Tailwind v4 minimal config ****/
export default {
  darkMode: "class",
};


==== \tsconfig.app.json ====
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": [
      "ES2020",
      "DOM",
      "DOM.Iterable"
    ],
    "module": "ESNext",
    "skipLibCheck": true,
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",
    "strict": false,
    "baseUrl": ".",
    "paths": {
      "@/*": [
        "./src/*"
      ]
    }
  },
  "include": [
    "src"
  ]
}


==== \tsconfig.json ====
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",
    "esModuleInterop": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"]
    },
    "types": ["node"]
  },
  "include": ["src", "src/vite-env.d.ts"],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ]
}


==== \tsconfig.node.json ====
{
  "compilerOptions": {
    "composite": true,
    "skipLibCheck": true,
    "module": "ESNext",
    "moduleResolution": "bundler",
    "allowSyntheticDefaultImports": true,
    "types": ["node"]   
  },
  "include": ["vite.config.ts"]
}


==== \vite.config.d.ts ====
declare const _default: import("vite").UserConfig;
export default _default;


==== \vite.config.js ====
// vite.config.ts
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import { fileURLToPath } from "node:url";
import { dirname, resolve } from "node:path";
// __dirname in ESM nachbauen
var __filename = fileURLToPath(import.meta.url);
var __dirname = dirname(__filename);
// Pr√ºfen, ob wir in GitHub Actions laufen
var isActions = process.env.GITHUB_ACTIONS === "true";
export default defineConfig({
    plugins: [react()],
    base: "/", // User/Org Pages: Root
    build: {
        outDir: isActions ? "dist" : "docs", // Actions ‚Üí dist, lokal ‚Üí docs
    },
    resolve: {
        alias: {
            "@": resolve(__dirname, "src"),
        },
    },
});


==== \vite.config.ts ====
// vite.config.ts
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import { fileURLToPath } from "node:url";
import { dirname, resolve } from "node:path";

// __dirname in ESM nachbauen
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Pr√ºfen, ob wir in GitHub Actions laufen
const isActions = process.env.GITHUB_ACTIONS === "true";

export default defineConfig({
  plugins: [react()],
  base: "/", // User/Org Pages: Root
  build: {
    outDir: isActions ? "dist" : "docs", // Actions ‚Üí dist, lokal ‚Üí docs
  },
  resolve: {
    alias: {
      "@": resolve(__dirname, "src"),
    },
  },
});


